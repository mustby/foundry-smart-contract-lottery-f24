{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","projectRoot()":"d930a0e6","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Using the address that calls the test contract, has the next call (at this call depth only) create a transaction that can later be signed and sent onchain.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Using the address that calls the test contract, has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@solmate/=lib/solmate/src/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":solmate/=lib/solmate/src/\",\":weird-erc20/=lib/solmate/lib/weird-erc20/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59\",\"dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Using the address that calls the test contract, has the next call (at this call depth only) create a transaction that can later be signed and sent onchain."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Using the address that calls the test contract, has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@solmate/=lib/solmate/src/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/solmate/lib/ds-test/src/","forge-std/=lib/forge-std/src/","foundry-devops/=lib/foundry-devops/","solmate/=lib/solmate/src/","weird-erc20/=lib/solmate/lib/weird-erc20/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f","urls":["bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59","dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":19447,"exportedSymbols":{"Vm":[19446],"VmSafe":[18871]},"nodeType":"SourceUnit","src":"117:84979:33","nodes":[{"id":15814,"nodeType":"PragmaDirective","src":"117:31:33","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":15815,"nodeType":"PragmaDirective","src":"149:33:33","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":18871,"nodeType":"ContractDefinition","src":"409:70923:33","nodes":[{"id":15822,"nodeType":"EnumDefinition","src":"529:533:33","nodes":[],"canonicalName":"VmSafe.CallerMode","members":[{"id":15817,"name":"None","nameLocation":"610:4:33","nodeType":"EnumValue","src":"610:4:33"},{"id":15818,"name":"Broadcast","nameLocation":"714:9:33","nodeType":"EnumValue","src":"714:9:33"},{"id":15819,"name":"RecurrentBroadcast","nameLocation":"829:18:33","nodeType":"EnumValue","src":"829:18:33"},{"id":15820,"name":"Prank","nameLocation":"939:5:33","nodeType":"EnumValue","src":"939:5:33"},{"id":15821,"name":"RecurrentPrank","nameLocation":"1042:14:33","nodeType":"EnumValue","src":"1042:14:33"}],"name":"CallerMode","nameLocation":"534:10:33"},{"id":15834,"nodeType":"EnumDefinition","src":"1118:791:33","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","members":[{"id":15823,"name":"Call","nameLocation":"1186:4:33","nodeType":"EnumValue","src":"1186:4:33"},{"id":15824,"name":"DelegateCall","nameLocation":"1252:12:33","nodeType":"EnumValue","src":"1252:12:33"},{"id":15825,"name":"CallCode","nameLocation":"1322:8:33","nodeType":"EnumValue","src":"1322:8:33"},{"id":15826,"name":"StaticCall","nameLocation":"1390:10:33","nodeType":"EnumValue","src":"1390:10:33"},{"id":15827,"name":"Create","nameLocation":"1446:6:33","nodeType":"EnumValue","src":"1446:6:33"},{"id":15828,"name":"SelfDestruct","nameLocation":"1505:12:33","nodeType":"EnumValue","src":"1505:12:33"},{"id":15829,"name":"Resume","nameLocation":"1644:6:33","nodeType":"EnumValue","src":"1644:6:33"},{"id":15830,"name":"Balance","nameLocation":"1703:7:33","nodeType":"EnumValue","src":"1703:7:33"},{"id":15831,"name":"Extcodesize","nameLocation":"1764:11:33","nodeType":"EnumValue","src":"1764:11:33"},{"id":15832,"name":"Extcodehash","nameLocation":"1829:11:33","nodeType":"EnumValue","src":"1829:11:33"},{"id":15833,"name":"Extcodecopy","nameLocation":"1892:11:33","nodeType":"EnumValue","src":"1892:11:33"}],"name":"AccountAccessKind","nameLocation":"1123:17:33"},{"id":15842,"nodeType":"StructDefinition","src":"1971:237:33","nodes":[],"canonicalName":"VmSafe.Log","members":[{"constant":false,"id":15837,"mutability":"mutable","name":"topics","nameLocation":"2069:6:33","nodeType":"VariableDeclaration","scope":15842,"src":"2059:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2059:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15836,"nodeType":"ArrayTypeName","src":"2059:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15839,"mutability":"mutable","name":"data","nameLocation":"2127:4:33","nodeType":"VariableDeclaration","scope":15842,"src":"2121:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15838,"name":"bytes","nodeType":"ElementaryTypeName","src":"2121:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15841,"mutability":"mutable","name":"emitter","nameLocation":"2194:7:33","nodeType":"VariableDeclaration","scope":15842,"src":"2186:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15840,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"1978:3:33","scope":18871,"visibility":"public"},{"id":15847,"nodeType":"StructDefinition","src":"2277:119:33","nodes":[],"canonicalName":"VmSafe.Rpc","members":[{"constant":false,"id":15844,"mutability":"mutable","name":"key","nameLocation":"2342:3:33","nodeType":"VariableDeclaration","scope":15847,"src":"2335:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15843,"name":"string","nodeType":"ElementaryTypeName","src":"2335:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15846,"mutability":"mutable","name":"url","nameLocation":"2386:3:33","nodeType":"VariableDeclaration","scope":15847,"src":"2379:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15845,"name":"string","nodeType":"ElementaryTypeName","src":"2379:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"2284:3:33","scope":18871,"visibility":"public"},{"id":15867,"nodeType":"StructDefinition","src":"2456:615:33","nodes":[],"canonicalName":"VmSafe.EthGetLogs","members":[{"constant":false,"id":15849,"mutability":"mutable","name":"emitter","nameLocation":"2537:7:33","nodeType":"VariableDeclaration","scope":15867,"src":"2529:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15848,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15852,"mutability":"mutable","name":"topics","nameLocation":"2631:6:33","nodeType":"VariableDeclaration","scope":15867,"src":"2621:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2621:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15851,"nodeType":"ArrayTypeName","src":"2621:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15854,"mutability":"mutable","name":"data","nameLocation":"2689:4:33","nodeType":"VariableDeclaration","scope":15867,"src":"2683:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15853,"name":"bytes","nodeType":"ElementaryTypeName","src":"2683:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15856,"mutability":"mutable","name":"blockHash","nameLocation":"2738:9:33","nodeType":"VariableDeclaration","scope":15867,"src":"2730:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15858,"mutability":"mutable","name":"blockNumber","nameLocation":"2793:11:33","nodeType":"VariableDeclaration","scope":15867,"src":"2786:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15857,"name":"uint64","nodeType":"ElementaryTypeName","src":"2786:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15860,"mutability":"mutable","name":"transactionHash","nameLocation":"2855:15:33","nodeType":"VariableDeclaration","scope":15867,"src":"2847:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15862,"mutability":"mutable","name":"transactionIndex","nameLocation":"2934:16:33","nodeType":"VariableDeclaration","scope":15867,"src":"2927:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15861,"name":"uint64","nodeType":"ElementaryTypeName","src":"2927:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15864,"mutability":"mutable","name":"logIndex","nameLocation":"2994:8:33","nodeType":"VariableDeclaration","scope":15867,"src":"2986:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2986:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15866,"mutability":"mutable","name":"removed","nameLocation":"3057:7:33","nodeType":"VariableDeclaration","scope":15867,"src":"3052:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15865,"name":"bool","nodeType":"ElementaryTypeName","src":"3052:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"2463:10:33","scope":18871,"visibility":"public"},{"id":15878,"nodeType":"StructDefinition","src":"3147:334:33","nodes":[],"canonicalName":"VmSafe.DirEntry","members":[{"constant":false,"id":15869,"mutability":"mutable","name":"errorMessage","nameLocation":"3218:12:33","nodeType":"VariableDeclaration","scope":15878,"src":"3211:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15868,"name":"string","nodeType":"ElementaryTypeName","src":"3211:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15871,"mutability":"mutable","name":"path","nameLocation":"3281:4:33","nodeType":"VariableDeclaration","scope":15878,"src":"3274:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":15870,"name":"string","nodeType":"ElementaryTypeName","src":"3274:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15873,"mutability":"mutable","name":"depth","nameLocation":"3337:5:33","nodeType":"VariableDeclaration","scope":15878,"src":"3330:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15872,"name":"uint64","nodeType":"ElementaryTypeName","src":"3330:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15875,"mutability":"mutable","name":"isDir","nameLocation":"3402:5:33","nodeType":"VariableDeclaration","scope":15878,"src":"3397:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15874,"name":"bool","nodeType":"ElementaryTypeName","src":"3397:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15877,"mutability":"mutable","name":"isSymlink","nameLocation":"3465:9:33","nodeType":"VariableDeclaration","scope":15878,"src":"3460:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15876,"name":"bool","nodeType":"ElementaryTypeName","src":"3460:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3154:8:33","scope":18871,"visibility":"public"},{"id":15893,"nodeType":"StructDefinition","src":"3711:599:33","nodes":[],"canonicalName":"VmSafe.FsMetadata","members":[{"constant":false,"id":15880,"mutability":"mutable","name":"isDir","nameLocation":"3797:5:33","nodeType":"VariableDeclaration","scope":15893,"src":"3792:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15879,"name":"bool","nodeType":"ElementaryTypeName","src":"3792:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15882,"mutability":"mutable","name":"isSymlink","nameLocation":"3868:9:33","nodeType":"VariableDeclaration","scope":15893,"src":"3863:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15881,"name":"bool","nodeType":"ElementaryTypeName","src":"3863:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15884,"mutability":"mutable","name":"length","nameLocation":"3960:6:33","nodeType":"VariableDeclaration","scope":15893,"src":"3952:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15883,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15886,"mutability":"mutable","name":"readOnly","nameLocation":"4051:8:33","nodeType":"VariableDeclaration","scope":15893,"src":"4046:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15885,"name":"bool","nodeType":"ElementaryTypeName","src":"4046:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15888,"mutability":"mutable","name":"modified","nameLocation":"4140:8:33","nodeType":"VariableDeclaration","scope":15893,"src":"4132:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15887,"name":"uint256","nodeType":"ElementaryTypeName","src":"4132:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15890,"mutability":"mutable","name":"accessed","nameLocation":"4216:8:33","nodeType":"VariableDeclaration","scope":15893,"src":"4208:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15889,"name":"uint256","nodeType":"ElementaryTypeName","src":"4208:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15892,"mutability":"mutable","name":"created","nameLocation":"4296:7:33","nodeType":"VariableDeclaration","scope":15893,"src":"4288:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4288:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"3718:10:33","scope":18871,"visibility":"public"},{"id":15902,"nodeType":"StructDefinition","src":"4364:277:33","nodes":[],"canonicalName":"VmSafe.Wallet","members":[{"constant":false,"id":15895,"mutability":"mutable","name":"addr","nameLocation":"4429:4:33","nodeType":"VariableDeclaration","scope":15902,"src":"4421:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15894,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15897,"mutability":"mutable","name":"publicKeyX","nameLocation":"4491:10:33","nodeType":"VariableDeclaration","scope":15902,"src":"4483:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15896,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15899,"mutability":"mutable","name":"publicKeyY","nameLocation":"4559:10:33","nodeType":"VariableDeclaration","scope":15902,"src":"4551:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15898,"name":"uint256","nodeType":"ElementaryTypeName","src":"4551:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15901,"mutability":"mutable","name":"privateKey","nameLocation":"4624:10:33","nodeType":"VariableDeclaration","scope":15902,"src":"4616:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15900,"name":"uint256","nodeType":"ElementaryTypeName","src":"4616:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"4371:6:33","scope":18871,"visibility":"public"},{"id":15909,"nodeType":"StructDefinition","src":"4686:213:33","nodes":[],"canonicalName":"VmSafe.FfiResult","members":[{"constant":false,"id":15904,"mutability":"mutable","name":"exitCode","nameLocation":"4757:8:33","nodeType":"VariableDeclaration","scope":15909,"src":"4751:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":15903,"name":"int32","nodeType":"ElementaryTypeName","src":"4751:5:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":15906,"mutability":"mutable","name":"stdout","nameLocation":"4834:6:33","nodeType":"VariableDeclaration","scope":15909,"src":"4828:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4828:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15908,"mutability":"mutable","name":"stderr","nameLocation":"4886:6:33","nodeType":"VariableDeclaration","scope":15909,"src":"4880:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15907,"name":"bytes","nodeType":"ElementaryTypeName","src":"4880:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"4693:9:33","scope":18871,"visibility":"public"},{"id":15914,"nodeType":"StructDefinition","src":"4948:184:33","nodes":[],"canonicalName":"VmSafe.ChainInfo","members":[{"constant":false,"id":15911,"mutability":"mutable","name":"forkId","nameLocation":"5049:6:33","nodeType":"VariableDeclaration","scope":15914,"src":"5041:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15910,"name":"uint256","nodeType":"ElementaryTypeName","src":"5041:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15913,"mutability":"mutable","name":"chainId","nameLocation":"5118:7:33","nodeType":"VariableDeclaration","scope":15914,"src":"5110:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15912,"name":"uint256","nodeType":"ElementaryTypeName","src":"5110:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"4955:9:33","scope":18871,"visibility":"public"},{"id":15945,"nodeType":"StructDefinition","src":"5193:1837:33","nodes":[],"canonicalName":"VmSafe.AccountAccess","members":[{"constant":false,"id":15917,"mutability":"mutable","name":"chainInfo","nameLocation":"5285:9:33","nodeType":"VariableDeclaration","scope":15945,"src":"5275:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$15914_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":15916,"nodeType":"UserDefinedTypeName","pathNode":{"id":15915,"name":"ChainInfo","nameLocations":["5275:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":15914,"src":"5275:9:33"},"referencedDeclaration":15914,"src":"5275:9:33","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$15914_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":15920,"mutability":"mutable","name":"kind","nameLocation":"5748:4:33","nodeType":"VariableDeclaration","scope":15945,"src":"5730:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15834","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":15919,"nodeType":"UserDefinedTypeName","pathNode":{"id":15918,"name":"AccountAccessKind","nameLocations":["5730:17:33"],"nodeType":"IdentifierPath","referencedDeclaration":15834,"src":"5730:17:33"},"referencedDeclaration":15834,"src":"5730:17:33","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$15834","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":15922,"mutability":"mutable","name":"account","nameLocation":"5925:7:33","nodeType":"VariableDeclaration","scope":15945,"src":"5917:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15921,"name":"address","nodeType":"ElementaryTypeName","src":"5917:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15924,"mutability":"mutable","name":"accessor","nameLocation":"5988:8:33","nodeType":"VariableDeclaration","scope":15945,"src":"5980:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15923,"name":"address","nodeType":"ElementaryTypeName","src":"5980:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15926,"mutability":"mutable","name":"initialized","nameLocation":"6199:11:33","nodeType":"VariableDeclaration","scope":15945,"src":"6194:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15925,"name":"bool","nodeType":"ElementaryTypeName","src":"6194:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15928,"mutability":"mutable","name":"oldBalance","nameLocation":"6285:10:33","nodeType":"VariableDeclaration","scope":15945,"src":"6277:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15927,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15930,"mutability":"mutable","name":"newBalance","nameLocation":"6460:10:33","nodeType":"VariableDeclaration","scope":15945,"src":"6452:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15929,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15932,"mutability":"mutable","name":"deployedCode","nameLocation":"6537:12:33","nodeType":"VariableDeclaration","scope":15945,"src":"6531:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15931,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15934,"mutability":"mutable","name":"value","nameLocation":"6621:5:33","nodeType":"VariableDeclaration","scope":15945,"src":"6613:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15933,"name":"uint256","nodeType":"ElementaryTypeName","src":"6613:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15936,"mutability":"mutable","name":"data","nameLocation":"6695:4:33","nodeType":"VariableDeclaration","scope":15945,"src":"6689:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":15935,"name":"bytes","nodeType":"ElementaryTypeName","src":"6689:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15938,"mutability":"mutable","name":"reverted","nameLocation":"6790:8:33","nodeType":"VariableDeclaration","scope":15945,"src":"6785:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15937,"name":"bool","nodeType":"ElementaryTypeName","src":"6785:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15942,"mutability":"mutable","name":"storageAccesses","nameLocation":"6912:15:33","nodeType":"VariableDeclaration","scope":15945,"src":"6896:31:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$15958_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":15940,"nodeType":"UserDefinedTypeName","pathNode":{"id":15939,"name":"StorageAccess","nameLocations":["6896:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":15958,"src":"6896:13:33"},"referencedDeclaration":15958,"src":"6896:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$15958_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":15941,"nodeType":"ArrayTypeName","src":"6896:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$15958_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":15944,"mutability":"mutable","name":"depth","nameLocation":"7018:5:33","nodeType":"VariableDeclaration","scope":15945,"src":"7011:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15943,"name":"uint64","nodeType":"ElementaryTypeName","src":"7011:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5200:13:33","scope":18871,"visibility":"public"},{"id":15958,"nodeType":"StructDefinition","src":"7092:425:33","nodes":[],"canonicalName":"VmSafe.StorageAccess","members":[{"constant":false,"id":15947,"mutability":"mutable","name":"account","nameLocation":"7182:7:33","nodeType":"VariableDeclaration","scope":15958,"src":"7174:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15946,"name":"address","nodeType":"ElementaryTypeName","src":"7174:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15949,"mutability":"mutable","name":"slot","nameLocation":"7246:4:33","nodeType":"VariableDeclaration","scope":15958,"src":"7238:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7238:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15951,"mutability":"mutable","name":"isWrite","nameLocation":"7303:7:33","nodeType":"VariableDeclaration","scope":15958,"src":"7298:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15950,"name":"bool","nodeType":"ElementaryTypeName","src":"7298:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15953,"mutability":"mutable","name":"previousValue","nameLocation":"7371:13:33","nodeType":"VariableDeclaration","scope":15958,"src":"7363:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7363:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15955,"mutability":"mutable","name":"newValue","nameLocation":"7440:8:33","nodeType":"VariableDeclaration","scope":15958,"src":"7432:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7432:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15957,"mutability":"mutable","name":"reverted","nameLocation":"7502:8:33","nodeType":"VariableDeclaration","scope":15958,"src":"7497:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15956,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7099:13:33","scope":18871,"visibility":"public"},{"id":15966,"nodeType":"FunctionDefinition","src":"7704:80:33","nodes":[],"documentation":{"id":15959,"nodeType":"StructuredDocumentation","src":"7561:138:33","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"7713:10:33","parameters":{"id":15962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15961,"mutability":"mutable","name":"name","nameLocation":"7740:4:33","nodeType":"VariableDeclaration","scope":15966,"src":"7724:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15960,"name":"string","nodeType":"ElementaryTypeName","src":"7724:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7723:22:33"},"returnParameters":{"id":15965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15964,"mutability":"mutable","name":"value","nameLocation":"7777:5:33","nodeType":"VariableDeclaration","scope":15966,"src":"7769:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15963,"name":"address","nodeType":"ElementaryTypeName","src":"7769:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7768:15:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15977,"nodeType":"FunctionDefinition","src":"7967:112:33","nodes":[],"documentation":{"id":15967,"nodeType":"StructuredDocumentation","src":"7790:172:33","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"7976:10:33","parameters":{"id":15972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15969,"mutability":"mutable","name":"name","nameLocation":"8003:4:33","nodeType":"VariableDeclaration","scope":15977,"src":"7987:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15968,"name":"string","nodeType":"ElementaryTypeName","src":"7987:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15971,"mutability":"mutable","name":"delim","nameLocation":"8025:5:33","nodeType":"VariableDeclaration","scope":15977,"src":"8009:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15970,"name":"string","nodeType":"ElementaryTypeName","src":"8009:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7986:45:33"},"returnParameters":{"id":15976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15975,"mutability":"mutable","name":"value","nameLocation":"8072:5:33","nodeType":"VariableDeclaration","scope":15977,"src":"8055:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15973,"name":"address","nodeType":"ElementaryTypeName","src":"8055:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15974,"nodeType":"ArrayTypeName","src":"8055:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8054:24:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15985,"nodeType":"FunctionDefinition","src":"8225:74:33","nodes":[],"documentation":{"id":15978,"nodeType":"StructuredDocumentation","src":"8085:135:33","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"8234:7:33","parameters":{"id":15981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15980,"mutability":"mutable","name":"name","nameLocation":"8258:4:33","nodeType":"VariableDeclaration","scope":15985,"src":"8242:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15979,"name":"string","nodeType":"ElementaryTypeName","src":"8242:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8241:22:33"},"returnParameters":{"id":15984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15983,"mutability":"mutable","name":"value","nameLocation":"8292:5:33","nodeType":"VariableDeclaration","scope":15985,"src":"8287:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15982,"name":"bool","nodeType":"ElementaryTypeName","src":"8287:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8286:12:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15996,"nodeType":"FunctionDefinition","src":"8479:106:33","nodes":[],"documentation":{"id":15986,"nodeType":"StructuredDocumentation","src":"8305:169:33","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"8488:7:33","parameters":{"id":15991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15988,"mutability":"mutable","name":"name","nameLocation":"8512:4:33","nodeType":"VariableDeclaration","scope":15996,"src":"8496:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15987,"name":"string","nodeType":"ElementaryTypeName","src":"8496:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15990,"mutability":"mutable","name":"delim","nameLocation":"8534:5:33","nodeType":"VariableDeclaration","scope":15996,"src":"8518:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15989,"name":"string","nodeType":"ElementaryTypeName","src":"8518:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8495:45:33"},"returnParameters":{"id":15995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15994,"mutability":"mutable","name":"value","nameLocation":"8578:5:33","nodeType":"VariableDeclaration","scope":15996,"src":"8564:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15992,"name":"bool","nodeType":"ElementaryTypeName","src":"8564:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15993,"nodeType":"ArrayTypeName","src":"8564:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"8563:21:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16004,"nodeType":"FunctionDefinition","src":"8734:80:33","nodes":[],"documentation":{"id":15997,"nodeType":"StructuredDocumentation","src":"8591:138:33","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"8743:10:33","parameters":{"id":16000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15999,"mutability":"mutable","name":"name","nameLocation":"8770:4:33","nodeType":"VariableDeclaration","scope":16004,"src":"8754:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15998,"name":"string","nodeType":"ElementaryTypeName","src":"8754:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8753:22:33"},"returnParameters":{"id":16003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16002,"mutability":"mutable","name":"value","nameLocation":"8807:5:33","nodeType":"VariableDeclaration","scope":16004,"src":"8799:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8799:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8798:15:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16015,"nodeType":"FunctionDefinition","src":"8997:112:33","nodes":[],"documentation":{"id":16005,"nodeType":"StructuredDocumentation","src":"8820:172:33","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9006:10:33","parameters":{"id":16010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16007,"mutability":"mutable","name":"name","nameLocation":"9033:4:33","nodeType":"VariableDeclaration","scope":16015,"src":"9017:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16006,"name":"string","nodeType":"ElementaryTypeName","src":"9017:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16009,"mutability":"mutable","name":"delim","nameLocation":"9055:5:33","nodeType":"VariableDeclaration","scope":16015,"src":"9039:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16008,"name":"string","nodeType":"ElementaryTypeName","src":"9039:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9016:45:33"},"returnParameters":{"id":16014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16013,"mutability":"mutable","name":"value","nameLocation":"9102:5:33","nodeType":"VariableDeclaration","scope":16015,"src":"9085:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9085:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16012,"nodeType":"ArrayTypeName","src":"9085:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9084:24:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16023,"nodeType":"FunctionDefinition","src":"9256:83:33","nodes":[],"documentation":{"id":16016,"nodeType":"StructuredDocumentation","src":"9115:136:33","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"9265:8:33","parameters":{"id":16019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16018,"mutability":"mutable","name":"name","nameLocation":"9290:4:33","nodeType":"VariableDeclaration","scope":16023,"src":"9274:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16017,"name":"string","nodeType":"ElementaryTypeName","src":"9274:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9273:22:33"},"returnParameters":{"id":16022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16021,"mutability":"mutable","name":"value","nameLocation":"9332:5:33","nodeType":"VariableDeclaration","scope":16023,"src":"9319:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16020,"name":"bytes","nodeType":"ElementaryTypeName","src":"9319:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9318:20:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16034,"nodeType":"FunctionDefinition","src":"9520:108:33","nodes":[],"documentation":{"id":16024,"nodeType":"StructuredDocumentation","src":"9345:170:33","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"9529:8:33","parameters":{"id":16029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16026,"mutability":"mutable","name":"name","nameLocation":"9554:4:33","nodeType":"VariableDeclaration","scope":16034,"src":"9538:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16025,"name":"string","nodeType":"ElementaryTypeName","src":"9538:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16028,"mutability":"mutable","name":"delim","nameLocation":"9576:5:33","nodeType":"VariableDeclaration","scope":16034,"src":"9560:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16027,"name":"string","nodeType":"ElementaryTypeName","src":"9560:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9537:45:33"},"returnParameters":{"id":16033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16032,"mutability":"mutable","name":"value","nameLocation":"9621:5:33","nodeType":"VariableDeclaration","scope":16034,"src":"9606:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16030,"name":"bytes","nodeType":"ElementaryTypeName","src":"9606:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16031,"nodeType":"ArrayTypeName","src":"9606:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"9605:22:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16042,"nodeType":"FunctionDefinition","src":"9776:75:33","nodes":[],"documentation":{"id":16035,"nodeType":"StructuredDocumentation","src":"9634:137:33","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"9785:6:33","parameters":{"id":16038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16037,"mutability":"mutable","name":"name","nameLocation":"9808:4:33","nodeType":"VariableDeclaration","scope":16042,"src":"9792:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16036,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9791:22:33"},"returnParameters":{"id":16041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16040,"mutability":"mutable","name":"value","nameLocation":"9844:5:33","nodeType":"VariableDeclaration","scope":16042,"src":"9837:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16039,"name":"int256","nodeType":"ElementaryTypeName","src":"9837:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9836:14:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16053,"nodeType":"FunctionDefinition","src":"10033:107:33","nodes":[],"documentation":{"id":16043,"nodeType":"StructuredDocumentation","src":"9857:171:33","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"10042:6:33","parameters":{"id":16048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16045,"mutability":"mutable","name":"name","nameLocation":"10065:4:33","nodeType":"VariableDeclaration","scope":16053,"src":"10049:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16044,"name":"string","nodeType":"ElementaryTypeName","src":"10049:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16047,"mutability":"mutable","name":"delim","nameLocation":"10087:5:33","nodeType":"VariableDeclaration","scope":16053,"src":"10071:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16046,"name":"string","nodeType":"ElementaryTypeName","src":"10071:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10048:45:33"},"returnParameters":{"id":16052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16051,"mutability":"mutable","name":"value","nameLocation":"10133:5:33","nodeType":"VariableDeclaration","scope":16053,"src":"10117:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16049,"name":"int256","nodeType":"ElementaryTypeName","src":"10117:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16050,"nodeType":"ArrayTypeName","src":"10117:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"10116:23:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16063,"nodeType":"FunctionDefinition","src":"10331:91:33","nodes":[],"documentation":{"id":16054,"nodeType":"StructuredDocumentation","src":"10146:180:33","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"10340:5:33","parameters":{"id":16059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16056,"mutability":"mutable","name":"name","nameLocation":"10362:4:33","nodeType":"VariableDeclaration","scope":16063,"src":"10346:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16055,"name":"string","nodeType":"ElementaryTypeName","src":"10346:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16058,"mutability":"mutable","name":"defaultValue","nameLocation":"10373:12:33","nodeType":"VariableDeclaration","scope":16063,"src":"10368:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16057,"name":"bool","nodeType":"ElementaryTypeName","src":"10368:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10345:41:33"},"returnParameters":{"id":16062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16061,"mutability":"mutable","name":"value","nameLocation":"10415:5:33","nodeType":"VariableDeclaration","scope":16063,"src":"10410:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16060,"name":"bool","nodeType":"ElementaryTypeName","src":"10410:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10409:12:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16073,"nodeType":"FunctionDefinition","src":"10616:97:33","nodes":[],"documentation":{"id":16064,"nodeType":"StructuredDocumentation","src":"10428:183:33","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"10625:5:33","parameters":{"id":16069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16066,"mutability":"mutable","name":"name","nameLocation":"10647:4:33","nodeType":"VariableDeclaration","scope":16073,"src":"10631:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16065,"name":"string","nodeType":"ElementaryTypeName","src":"10631:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16068,"mutability":"mutable","name":"defaultValue","nameLocation":"10661:12:33","nodeType":"VariableDeclaration","scope":16073,"src":"10653:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16067,"name":"uint256","nodeType":"ElementaryTypeName","src":"10653:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10630:44:33"},"returnParameters":{"id":16072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16071,"mutability":"mutable","name":"value","nameLocation":"10706:5:33","nodeType":"VariableDeclaration","scope":16073,"src":"10698:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16070,"name":"uint256","nodeType":"ElementaryTypeName","src":"10698:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10697:15:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16087,"nodeType":"FunctionDefinition","src":"10941:164:33","nodes":[],"documentation":{"id":16074,"nodeType":"StructuredDocumentation","src":"10719:217:33","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"10950:5:33","parameters":{"id":16082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16076,"mutability":"mutable","name":"name","nameLocation":"10972:4:33","nodeType":"VariableDeclaration","scope":16087,"src":"10956:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16075,"name":"string","nodeType":"ElementaryTypeName","src":"10956:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16078,"mutability":"mutable","name":"delim","nameLocation":"10994:5:33","nodeType":"VariableDeclaration","scope":16087,"src":"10978:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16077,"name":"string","nodeType":"ElementaryTypeName","src":"10978:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16081,"mutability":"mutable","name":"defaultValue","nameLocation":"11020:12:33","nodeType":"VariableDeclaration","scope":16087,"src":"11001:31:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16079,"name":"address","nodeType":"ElementaryTypeName","src":"11001:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16080,"nodeType":"ArrayTypeName","src":"11001:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10955:78:33"},"returnParameters":{"id":16086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16085,"mutability":"mutable","name":"value","nameLocation":"11098:5:33","nodeType":"VariableDeclaration","scope":16087,"src":"11081:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16083,"name":"address","nodeType":"ElementaryTypeName","src":"11081:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16084,"nodeType":"ArrayTypeName","src":"11081:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11080:24:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16101,"nodeType":"FunctionDefinition","src":"11333:164:33","nodes":[],"documentation":{"id":16088,"nodeType":"StructuredDocumentation","src":"11111:217:33","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11342:5:33","parameters":{"id":16096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16090,"mutability":"mutable","name":"name","nameLocation":"11364:4:33","nodeType":"VariableDeclaration","scope":16101,"src":"11348:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16089,"name":"string","nodeType":"ElementaryTypeName","src":"11348:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16092,"mutability":"mutable","name":"delim","nameLocation":"11386:5:33","nodeType":"VariableDeclaration","scope":16101,"src":"11370:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16091,"name":"string","nodeType":"ElementaryTypeName","src":"11370:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16095,"mutability":"mutable","name":"defaultValue","nameLocation":"11412:12:33","nodeType":"VariableDeclaration","scope":16101,"src":"11393:31:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11393:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16094,"nodeType":"ArrayTypeName","src":"11393:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11347:78:33"},"returnParameters":{"id":16100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16099,"mutability":"mutable","name":"value","nameLocation":"11490:5:33","nodeType":"VariableDeclaration","scope":16101,"src":"11473:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11473:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16098,"nodeType":"ArrayTypeName","src":"11473:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11472:24:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16115,"nodeType":"FunctionDefinition","src":"11724:162:33","nodes":[],"documentation":{"id":16102,"nodeType":"StructuredDocumentation","src":"11503:216:33","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11733:5:33","parameters":{"id":16110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16104,"mutability":"mutable","name":"name","nameLocation":"11755:4:33","nodeType":"VariableDeclaration","scope":16115,"src":"11739:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16103,"name":"string","nodeType":"ElementaryTypeName","src":"11739:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16106,"mutability":"mutable","name":"delim","nameLocation":"11777:5:33","nodeType":"VariableDeclaration","scope":16115,"src":"11761:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16105,"name":"string","nodeType":"ElementaryTypeName","src":"11761:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16109,"mutability":"mutable","name":"defaultValue","nameLocation":"11802:12:33","nodeType":"VariableDeclaration","scope":16115,"src":"11784:30:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16107,"name":"string","nodeType":"ElementaryTypeName","src":"11784:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16108,"nodeType":"ArrayTypeName","src":"11784:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11738:77:33"},"returnParameters":{"id":16114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16113,"mutability":"mutable","name":"value","nameLocation":"11879:5:33","nodeType":"VariableDeclaration","scope":16115,"src":"11863:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16111,"name":"string","nodeType":"ElementaryTypeName","src":"11863:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16112,"nodeType":"ArrayTypeName","src":"11863:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11862:23:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16129,"nodeType":"FunctionDefinition","src":"12112:160:33","nodes":[],"documentation":{"id":16116,"nodeType":"StructuredDocumentation","src":"11892:215:33","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12121:5:33","parameters":{"id":16124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16118,"mutability":"mutable","name":"name","nameLocation":"12143:4:33","nodeType":"VariableDeclaration","scope":16129,"src":"12127:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16117,"name":"string","nodeType":"ElementaryTypeName","src":"12127:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16120,"mutability":"mutable","name":"delim","nameLocation":"12165:5:33","nodeType":"VariableDeclaration","scope":16129,"src":"12149:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16119,"name":"string","nodeType":"ElementaryTypeName","src":"12149:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16123,"mutability":"mutable","name":"defaultValue","nameLocation":"12189:12:33","nodeType":"VariableDeclaration","scope":16129,"src":"12172:29:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16121,"name":"bytes","nodeType":"ElementaryTypeName","src":"12172:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16122,"nodeType":"ArrayTypeName","src":"12172:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12126:76:33"},"returnParameters":{"id":16128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16127,"mutability":"mutable","name":"value","nameLocation":"12265:5:33","nodeType":"VariableDeclaration","scope":16129,"src":"12250:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16125,"name":"bytes","nodeType":"ElementaryTypeName","src":"12250:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16126,"nodeType":"ArrayTypeName","src":"12250:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12249:22:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16139,"nodeType":"FunctionDefinition","src":"12465:95:33","nodes":[],"documentation":{"id":16130,"nodeType":"StructuredDocumentation","src":"12278:182:33","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12474:5:33","parameters":{"id":16135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16132,"mutability":"mutable","name":"name","nameLocation":"12496:4:33","nodeType":"VariableDeclaration","scope":16139,"src":"12480:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16131,"name":"string","nodeType":"ElementaryTypeName","src":"12480:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16134,"mutability":"mutable","name":"defaultValue","nameLocation":"12509:12:33","nodeType":"VariableDeclaration","scope":16139,"src":"12502:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16133,"name":"int256","nodeType":"ElementaryTypeName","src":"12502:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12479:43:33"},"returnParameters":{"id":16138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16137,"mutability":"mutable","name":"value","nameLocation":"12553:5:33","nodeType":"VariableDeclaration","scope":16139,"src":"12546:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16136,"name":"int256","nodeType":"ElementaryTypeName","src":"12546:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12545:14:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16149,"nodeType":"FunctionDefinition","src":"12754:97:33","nodes":[],"documentation":{"id":16140,"nodeType":"StructuredDocumentation","src":"12566:183:33","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12763:5:33","parameters":{"id":16145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16142,"mutability":"mutable","name":"name","nameLocation":"12785:4:33","nodeType":"VariableDeclaration","scope":16149,"src":"12769:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16141,"name":"string","nodeType":"ElementaryTypeName","src":"12769:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16144,"mutability":"mutable","name":"defaultValue","nameLocation":"12799:12:33","nodeType":"VariableDeclaration","scope":16149,"src":"12791:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16143,"name":"address","nodeType":"ElementaryTypeName","src":"12791:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12768:44:33"},"returnParameters":{"id":16148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16147,"mutability":"mutable","name":"value","nameLocation":"12844:5:33","nodeType":"VariableDeclaration","scope":16149,"src":"12836:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16146,"name":"address","nodeType":"ElementaryTypeName","src":"12836:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12835:15:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16159,"nodeType":"FunctionDefinition","src":"13045:97:33","nodes":[],"documentation":{"id":16150,"nodeType":"StructuredDocumentation","src":"12857:183:33","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13054:5:33","parameters":{"id":16155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16152,"mutability":"mutable","name":"name","nameLocation":"13076:4:33","nodeType":"VariableDeclaration","scope":16159,"src":"13060:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16151,"name":"string","nodeType":"ElementaryTypeName","src":"13060:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16154,"mutability":"mutable","name":"defaultValue","nameLocation":"13090:12:33","nodeType":"VariableDeclaration","scope":16159,"src":"13082:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13082:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13059:44:33"},"returnParameters":{"id":16158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16157,"mutability":"mutable","name":"value","nameLocation":"13135:5:33","nodeType":"VariableDeclaration","scope":16159,"src":"13127:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13127:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13126:15:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16169,"nodeType":"FunctionDefinition","src":"13335:111:33","nodes":[],"documentation":{"id":16160,"nodeType":"StructuredDocumentation","src":"13148:182:33","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13344:5:33","parameters":{"id":16165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16162,"mutability":"mutable","name":"name","nameLocation":"13366:4:33","nodeType":"VariableDeclaration","scope":16169,"src":"13350:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16161,"name":"string","nodeType":"ElementaryTypeName","src":"13350:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16164,"mutability":"mutable","name":"defaultValue","nameLocation":"13388:12:33","nodeType":"VariableDeclaration","scope":16169,"src":"13372:28:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16163,"name":"string","nodeType":"ElementaryTypeName","src":"13372:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13349:52:33"},"returnParameters":{"id":16168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16167,"mutability":"mutable","name":"value","nameLocation":"13439:5:33","nodeType":"VariableDeclaration","scope":16169,"src":"13425:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16166,"name":"string","nodeType":"ElementaryTypeName","src":"13425:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13424:21:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16179,"nodeType":"FunctionDefinition","src":"13638:109:33","nodes":[],"documentation":{"id":16170,"nodeType":"StructuredDocumentation","src":"13452:181:33","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13647:5:33","parameters":{"id":16175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16172,"mutability":"mutable","name":"name","nameLocation":"13669:4:33","nodeType":"VariableDeclaration","scope":16179,"src":"13653:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16171,"name":"string","nodeType":"ElementaryTypeName","src":"13653:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16174,"mutability":"mutable","name":"defaultValue","nameLocation":"13690:12:33","nodeType":"VariableDeclaration","scope":16179,"src":"13675:27:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16173,"name":"bytes","nodeType":"ElementaryTypeName","src":"13675:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13652:51:33"},"returnParameters":{"id":16178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16177,"mutability":"mutable","name":"value","nameLocation":"13740:5:33","nodeType":"VariableDeclaration","scope":16179,"src":"13727:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16176,"name":"bytes","nodeType":"ElementaryTypeName","src":"13727:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13726:20:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16193,"nodeType":"FunctionDefinition","src":"13972:158:33","nodes":[],"documentation":{"id":16180,"nodeType":"StructuredDocumentation","src":"13753:214:33","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13981:5:33","parameters":{"id":16188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16182,"mutability":"mutable","name":"name","nameLocation":"14003:4:33","nodeType":"VariableDeclaration","scope":16193,"src":"13987:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16181,"name":"string","nodeType":"ElementaryTypeName","src":"13987:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16184,"mutability":"mutable","name":"delim","nameLocation":"14025:5:33","nodeType":"VariableDeclaration","scope":16193,"src":"14009:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16183,"name":"string","nodeType":"ElementaryTypeName","src":"14009:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16187,"mutability":"mutable","name":"defaultValue","nameLocation":"14048:12:33","nodeType":"VariableDeclaration","scope":16193,"src":"14032:28:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16185,"name":"bool","nodeType":"ElementaryTypeName","src":"14032:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16186,"nodeType":"ArrayTypeName","src":"14032:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"13986:75:33"},"returnParameters":{"id":16192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16191,"mutability":"mutable","name":"value","nameLocation":"14123:5:33","nodeType":"VariableDeclaration","scope":16193,"src":"14109:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16189,"name":"bool","nodeType":"ElementaryTypeName","src":"14109:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16190,"nodeType":"ArrayTypeName","src":"14109:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"14108:21:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16207,"nodeType":"FunctionDefinition","src":"14358:164:33","nodes":[],"documentation":{"id":16194,"nodeType":"StructuredDocumentation","src":"14136:217:33","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14367:5:33","parameters":{"id":16202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16196,"mutability":"mutable","name":"name","nameLocation":"14389:4:33","nodeType":"VariableDeclaration","scope":16207,"src":"14373:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16195,"name":"string","nodeType":"ElementaryTypeName","src":"14373:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16198,"mutability":"mutable","name":"delim","nameLocation":"14411:5:33","nodeType":"VariableDeclaration","scope":16207,"src":"14395:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16197,"name":"string","nodeType":"ElementaryTypeName","src":"14395:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16201,"mutability":"mutable","name":"defaultValue","nameLocation":"14437:12:33","nodeType":"VariableDeclaration","scope":16207,"src":"14418:31:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16199,"name":"uint256","nodeType":"ElementaryTypeName","src":"14418:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16200,"nodeType":"ArrayTypeName","src":"14418:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14372:78:33"},"returnParameters":{"id":16206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16205,"mutability":"mutable","name":"value","nameLocation":"14515:5:33","nodeType":"VariableDeclaration","scope":16207,"src":"14498:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16203,"name":"uint256","nodeType":"ElementaryTypeName","src":"14498:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16204,"nodeType":"ArrayTypeName","src":"14498:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14497:24:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16221,"nodeType":"FunctionDefinition","src":"14749:162:33","nodes":[],"documentation":{"id":16208,"nodeType":"StructuredDocumentation","src":"14528:216:33","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14758:5:33","parameters":{"id":16216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16210,"mutability":"mutable","name":"name","nameLocation":"14780:4:33","nodeType":"VariableDeclaration","scope":16221,"src":"14764:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16209,"name":"string","nodeType":"ElementaryTypeName","src":"14764:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16212,"mutability":"mutable","name":"delim","nameLocation":"14802:5:33","nodeType":"VariableDeclaration","scope":16221,"src":"14786:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16211,"name":"string","nodeType":"ElementaryTypeName","src":"14786:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16215,"mutability":"mutable","name":"defaultValue","nameLocation":"14827:12:33","nodeType":"VariableDeclaration","scope":16221,"src":"14809:30:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16213,"name":"int256","nodeType":"ElementaryTypeName","src":"14809:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16214,"nodeType":"ArrayTypeName","src":"14809:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"14763:77:33"},"returnParameters":{"id":16220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16219,"mutability":"mutable","name":"value","nameLocation":"14904:5:33","nodeType":"VariableDeclaration","scope":16221,"src":"14888:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16217,"name":"int256","nodeType":"ElementaryTypeName","src":"14888:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16218,"nodeType":"ArrayTypeName","src":"14888:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"14887:23:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16229,"nodeType":"FunctionDefinition","src":"15059:85:33","nodes":[],"documentation":{"id":16222,"nodeType":"StructuredDocumentation","src":"14917:137:33","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"15068:9:33","parameters":{"id":16225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16224,"mutability":"mutable","name":"name","nameLocation":"15094:4:33","nodeType":"VariableDeclaration","scope":16229,"src":"15078:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16223,"name":"string","nodeType":"ElementaryTypeName","src":"15078:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15077:22:33"},"returnParameters":{"id":16228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16227,"mutability":"mutable","name":"value","nameLocation":"15137:5:33","nodeType":"VariableDeclaration","scope":16229,"src":"15123:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16226,"name":"string","nodeType":"ElementaryTypeName","src":"15123:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15122:21:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16240,"nodeType":"FunctionDefinition","src":"15326:110:33","nodes":[],"documentation":{"id":16230,"nodeType":"StructuredDocumentation","src":"15150:171:33","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"15335:9:33","parameters":{"id":16235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16232,"mutability":"mutable","name":"name","nameLocation":"15361:4:33","nodeType":"VariableDeclaration","scope":16240,"src":"15345:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16231,"name":"string","nodeType":"ElementaryTypeName","src":"15345:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16234,"mutability":"mutable","name":"delim","nameLocation":"15383:5:33","nodeType":"VariableDeclaration","scope":16240,"src":"15367:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16233,"name":"string","nodeType":"ElementaryTypeName","src":"15367:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15344:45:33"},"returnParameters":{"id":16239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16238,"mutability":"mutable","name":"value","nameLocation":"15429:5:33","nodeType":"VariableDeclaration","scope":16240,"src":"15413:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16236,"name":"string","nodeType":"ElementaryTypeName","src":"15413:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16237,"nodeType":"ArrayTypeName","src":"15413:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"15412:23:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16248,"nodeType":"FunctionDefinition","src":"15585:77:33","nodes":[],"documentation":{"id":16241,"nodeType":"StructuredDocumentation","src":"15442:138:33","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"15594:7:33","parameters":{"id":16244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16243,"mutability":"mutable","name":"name","nameLocation":"15618:4:33","nodeType":"VariableDeclaration","scope":16248,"src":"15602:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16242,"name":"string","nodeType":"ElementaryTypeName","src":"15602:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15601:22:33"},"returnParameters":{"id":16247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16246,"mutability":"mutable","name":"value","nameLocation":"15655:5:33","nodeType":"VariableDeclaration","scope":16248,"src":"15647:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16245,"name":"uint256","nodeType":"ElementaryTypeName","src":"15647:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15646:15:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16259,"nodeType":"FunctionDefinition","src":"15845:109:33","nodes":[],"documentation":{"id":16249,"nodeType":"StructuredDocumentation","src":"15668:172:33","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"15854:7:33","parameters":{"id":16254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16251,"mutability":"mutable","name":"name","nameLocation":"15878:4:33","nodeType":"VariableDeclaration","scope":16259,"src":"15862:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16250,"name":"string","nodeType":"ElementaryTypeName","src":"15862:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16253,"mutability":"mutable","name":"delim","nameLocation":"15900:5:33","nodeType":"VariableDeclaration","scope":16259,"src":"15884:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16252,"name":"string","nodeType":"ElementaryTypeName","src":"15884:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15861:45:33"},"returnParameters":{"id":16258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16257,"mutability":"mutable","name":"value","nameLocation":"15947:5:33","nodeType":"VariableDeclaration","scope":16259,"src":"15930:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16255,"name":"uint256","nodeType":"ElementaryTypeName","src":"15930:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16256,"nodeType":"ArrayTypeName","src":"15930:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15929:24:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16267,"nodeType":"FunctionDefinition","src":"15996:70:33","nodes":[],"documentation":{"id":16260,"nodeType":"StructuredDocumentation","src":"15960:31:33","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"16005:6:33","parameters":{"id":16265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16262,"mutability":"mutable","name":"name","nameLocation":"16028:4:33","nodeType":"VariableDeclaration","scope":16267,"src":"16012:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16261,"name":"string","nodeType":"ElementaryTypeName","src":"16012:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16264,"mutability":"mutable","name":"value","nameLocation":"16050:5:33","nodeType":"VariableDeclaration","scope":16267,"src":"16034:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16263,"name":"string","nodeType":"ElementaryTypeName","src":"16034:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16011:45:33"},"returnParameters":{"id":16266,"nodeType":"ParameterList","parameters":[],"src":"16065:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16279,"nodeType":"FunctionDefinition","src":"16198:109:33","nodes":[],"documentation":{"id":16268,"nodeType":"StructuredDocumentation","src":"16102:91:33","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"16207:8:33","parameters":{"id":16271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16270,"mutability":"mutable","name":"target","nameLocation":"16224:6:33","nodeType":"VariableDeclaration","scope":16279,"src":"16216:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16269,"name":"address","nodeType":"ElementaryTypeName","src":"16216:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16215:16:33"},"returnParameters":{"id":16278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16274,"mutability":"mutable","name":"readSlots","nameLocation":"16267:9:33","nodeType":"VariableDeclaration","scope":16279,"src":"16250:26:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16250:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16273,"nodeType":"ArrayTypeName","src":"16250:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16277,"mutability":"mutable","name":"writeSlots","nameLocation":"16295:10:33","nodeType":"VariableDeclaration","scope":16279,"src":"16278:27:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16278:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16276,"nodeType":"ArrayTypeName","src":"16278:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16249:57:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16287,"nodeType":"FunctionDefinition","src":"16363:74:33","nodes":[],"documentation":{"id":16280,"nodeType":"StructuredDocumentation","src":"16313:45:33","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"16372:4:33","parameters":{"id":16283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16282,"mutability":"mutable","name":"privateKey","nameLocation":"16385:10:33","nodeType":"VariableDeclaration","scope":16287,"src":"16377:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16281,"name":"uint256","nodeType":"ElementaryTypeName","src":"16377:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16376:20:33"},"returnParameters":{"id":16286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16285,"mutability":"mutable","name":"keyAddr","nameLocation":"16428:7:33","nodeType":"VariableDeclaration","scope":16287,"src":"16420:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16284,"name":"address","nodeType":"ElementaryTypeName","src":"16420:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16419:17:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16304,"nodeType":"FunctionDefinition","src":"16500:160:33","nodes":[],"documentation":{"id":16288,"nodeType":"StructuredDocumentation","src":"16443:52:33","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"16509:11:33","parameters":{"id":16298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16290,"mutability":"mutable","name":"fromBlock","nameLocation":"16529:9:33","nodeType":"VariableDeclaration","scope":16304,"src":"16521:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16289,"name":"uint256","nodeType":"ElementaryTypeName","src":"16521:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16292,"mutability":"mutable","name":"toBlock","nameLocation":"16548:7:33","nodeType":"VariableDeclaration","scope":16304,"src":"16540:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16291,"name":"uint256","nodeType":"ElementaryTypeName","src":"16540:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16294,"mutability":"mutable","name":"target","nameLocation":"16565:6:33","nodeType":"VariableDeclaration","scope":16304,"src":"16557:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16293,"name":"address","nodeType":"ElementaryTypeName","src":"16557:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16297,"mutability":"mutable","name":"topics","nameLocation":"16592:6:33","nodeType":"VariableDeclaration","scope":16304,"src":"16573:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16573:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16296,"nodeType":"ArrayTypeName","src":"16573:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16520:79:33"},"returnParameters":{"id":16303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16302,"mutability":"mutable","name":"logs","nameLocation":"16654:4:33","nodeType":"VariableDeclaration","scope":16304,"src":"16634:24:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$15867_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":16300,"nodeType":"UserDefinedTypeName","pathNode":{"id":16299,"name":"EthGetLogs","nameLocations":["16634:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":15867,"src":"16634:10:33"},"referencedDeclaration":15867,"src":"16634:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$15867_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":16301,"nodeType":"ArrayTypeName","src":"16634:12:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$15867_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"16633:26:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16310,"nodeType":"FunctionDefinition","src":"16975:65:33","nodes":[],"documentation":{"id":16305,"nodeType":"StructuredDocumentation","src":"16666:304:33","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"16984:14:33","parameters":{"id":16306,"nodeType":"ParameterList","parameters":[],"src":"16998:2:33"},"returnParameters":{"id":16309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16308,"mutability":"mutable","name":"height","nameLocation":"17032:6:33","nodeType":"VariableDeclaration","scope":16310,"src":"17024:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16307,"name":"uint256","nodeType":"ElementaryTypeName","src":"17024:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17023:16:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16316,"nodeType":"FunctionDefinition","src":"17364:71:33","nodes":[],"documentation":{"id":16311,"nodeType":"StructuredDocumentation","src":"17046:313:33","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"17373:17:33","parameters":{"id":16312,"nodeType":"ParameterList","parameters":[],"src":"17390:2:33"},"returnParameters":{"id":16315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16314,"mutability":"mutable","name":"timestamp","nameLocation":"17424:9:33","nodeType":"VariableDeclaration","scope":16316,"src":"17416:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16313,"name":"uint256","nodeType":"ElementaryTypeName","src":"17416:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17415:19:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16330,"nodeType":"FunctionDefinition","src":"17528:146:33","nodes":[],"documentation":{"id":16317,"nodeType":"StructuredDocumentation","src":"17441:82:33","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"17537:24:33","parameters":{"id":16322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16319,"mutability":"mutable","name":"target","nameLocation":"17570:6:33","nodeType":"VariableDeclaration","scope":16330,"src":"17562:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16318,"name":"address","nodeType":"ElementaryTypeName","src":"17562:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16321,"mutability":"mutable","name":"elementSlot","nameLocation":"17586:11:33","nodeType":"VariableDeclaration","scope":16330,"src":"17578:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17578:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17561:37:33"},"returnParameters":{"id":16329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16324,"mutability":"mutable","name":"found","nameLocation":"17638:5:33","nodeType":"VariableDeclaration","scope":16330,"src":"17633:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16323,"name":"bool","nodeType":"ElementaryTypeName","src":"17633:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16326,"mutability":"mutable","name":"key","nameLocation":"17653:3:33","nodeType":"VariableDeclaration","scope":16330,"src":"17645:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17645:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16328,"mutability":"mutable","name":"parent","nameLocation":"17666:6:33","nodeType":"VariableDeclaration","scope":16330,"src":"17658:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17658:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17632:41:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16340,"nodeType":"FunctionDefinition","src":"17771:97:33","nodes":[],"documentation":{"id":16331,"nodeType":"StructuredDocumentation","src":"17680:86:33","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"17780:16:33","parameters":{"id":16336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16333,"mutability":"mutable","name":"target","nameLocation":"17805:6:33","nodeType":"VariableDeclaration","scope":16340,"src":"17797:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16332,"name":"address","nodeType":"ElementaryTypeName","src":"17797:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16335,"mutability":"mutable","name":"mappingSlot","nameLocation":"17821:11:33","nodeType":"VariableDeclaration","scope":16340,"src":"17813:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17813:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17796:37:33"},"returnParameters":{"id":16339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16338,"mutability":"mutable","name":"length","nameLocation":"17860:6:33","nodeType":"VariableDeclaration","scope":16340,"src":"17852:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16337,"name":"uint256","nodeType":"ElementaryTypeName","src":"17852:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17851:16:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16352,"nodeType":"FunctionDefinition","src":"18072:109:33","nodes":[],"documentation":{"id":16341,"nodeType":"StructuredDocumentation","src":"17874:193:33","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"18081:16:33","parameters":{"id":16348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16343,"mutability":"mutable","name":"target","nameLocation":"18106:6:33","nodeType":"VariableDeclaration","scope":16352,"src":"18098:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16342,"name":"address","nodeType":"ElementaryTypeName","src":"18098:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16345,"mutability":"mutable","name":"mappingSlot","nameLocation":"18122:11:33","nodeType":"VariableDeclaration","scope":16352,"src":"18114:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18114:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16347,"mutability":"mutable","name":"idx","nameLocation":"18143:3:33","nodeType":"VariableDeclaration","scope":16352,"src":"18135:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16346,"name":"uint256","nodeType":"ElementaryTypeName","src":"18135:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18097:50:33"},"returnParameters":{"id":16351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16350,"mutability":"mutable","name":"value","nameLocation":"18174:5:33","nodeType":"VariableDeclaration","scope":16352,"src":"18166:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18166:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18165:15:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16360,"nodeType":"FunctionDefinition","src":"18225:72:33","nodes":[],"documentation":{"id":16353,"nodeType":"StructuredDocumentation","src":"18187:33:33","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"18234:8:33","parameters":{"id":16356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16355,"mutability":"mutable","name":"account","nameLocation":"18251:7:33","nodeType":"VariableDeclaration","scope":16360,"src":"18243:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16354,"name":"address","nodeType":"ElementaryTypeName","src":"18243:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18242:17:33"},"returnParameters":{"id":16359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16358,"mutability":"mutable","name":"nonce","nameLocation":"18290:5:33","nodeType":"VariableDeclaration","scope":16360,"src":"18283:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16357,"name":"uint64","nodeType":"ElementaryTypeName","src":"18283:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"18282:14:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16368,"nodeType":"FunctionDefinition","src":"18339:64:33","nodes":[],"documentation":{"id":16361,"nodeType":"StructuredDocumentation","src":"18303:31:33","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"18348:15:33","parameters":{"id":16362,"nodeType":"ParameterList","parameters":[],"src":"18363:2:33"},"returnParameters":{"id":16367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16366,"mutability":"mutable","name":"logs","nameLocation":"18397:4:33","nodeType":"VariableDeclaration","scope":16368,"src":"18384:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$15842_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":16364,"nodeType":"UserDefinedTypeName","pathNode":{"id":16363,"name":"Log","nameLocations":["18384:3:33"],"nodeType":"IdentifierPath","referencedDeclaration":15842,"src":"18384:3:33"},"referencedDeclaration":15842,"src":"18384:3:33","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$15842_storage_ptr","typeString":"struct VmSafe.Log"}},"id":16365,"nodeType":"ArrayTypeName","src":"18384:5:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$15842_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"18383:19:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16378,"nodeType":"FunctionDefinition","src":"18455:81:33","nodes":[],"documentation":{"id":16369,"nodeType":"StructuredDocumentation","src":"18409:41:33","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"18464:4:33","parameters":{"id":16374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16371,"mutability":"mutable","name":"target","nameLocation":"18477:6:33","nodeType":"VariableDeclaration","scope":16378,"src":"18469:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16370,"name":"address","nodeType":"ElementaryTypeName","src":"18469:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16373,"mutability":"mutable","name":"slot","nameLocation":"18493:4:33","nodeType":"VariableDeclaration","scope":16378,"src":"18485:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18485:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18468:30:33"},"returnParameters":{"id":16377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16376,"mutability":"mutable","name":"data","nameLocation":"18530:4:33","nodeType":"VariableDeclaration","scope":16378,"src":"18522:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18522:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18521:14:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16382,"nodeType":"FunctionDefinition","src":"18627:37:33","nodes":[],"documentation":{"id":16379,"nodeType":"StructuredDocumentation","src":"18542:80:33","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"18636:16:33","parameters":{"id":16380,"nodeType":"ParameterList","parameters":[],"src":"18652:2:33"},"returnParameters":{"id":16381,"nodeType":"ParameterList","parameters":[],"src":"18663:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16386,"nodeType":"FunctionDefinition","src":"18716:27:33","nodes":[],"documentation":{"id":16383,"nodeType":"StructuredDocumentation","src":"18670:41:33","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"18725:6:33","parameters":{"id":16384,"nodeType":"ParameterList","parameters":[],"src":"18731:2:33"},"returnParameters":{"id":16385,"nodeType":"ParameterList","parameters":[],"src":"18742:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16390,"nodeType":"FunctionDefinition","src":"18790:31:33","nodes":[],"documentation":{"id":16387,"nodeType":"StructuredDocumentation","src":"18749:36:33","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"18799:10:33","parameters":{"id":16388,"nodeType":"ParameterList","parameters":[],"src":"18809:2:33"},"returnParameters":{"id":16389,"nodeType":"ParameterList","parameters":[],"src":"18820:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16394,"nodeType":"FunctionDefinition","src":"18911:38:33","nodes":[],"documentation":{"id":16391,"nodeType":"StructuredDocumentation","src":"18827:79:33","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"18920:17:33","parameters":{"id":16392,"nodeType":"ParameterList","parameters":[],"src":"18937:2:33"},"returnParameters":{"id":16393,"nodeType":"ParameterList","parameters":[],"src":"18948:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16404,"nodeType":"FunctionDefinition","src":"19026:98:33","nodes":[],"documentation":{"id":16395,"nodeType":"StructuredDocumentation","src":"18955:66:33","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"19035:3:33","parameters":{"id":16400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16397,"mutability":"mutable","name":"method","nameLocation":"19055:6:33","nodeType":"VariableDeclaration","scope":16404,"src":"19039:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16396,"name":"string","nodeType":"ElementaryTypeName","src":"19039:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16399,"mutability":"mutable","name":"params","nameLocation":"19079:6:33","nodeType":"VariableDeclaration","scope":16404,"src":"19063:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16398,"name":"string","nodeType":"ElementaryTypeName","src":"19063:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19038:48:33"},"returnParameters":{"id":16403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16402,"mutability":"mutable","name":"data","nameLocation":"19118:4:33","nodeType":"VariableDeclaration","scope":16404,"src":"19105:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16401,"name":"bytes","nodeType":"ElementaryTypeName","src":"19105:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19104:19:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16416,"nodeType":"FunctionDefinition","src":"19198:99:33","nodes":[],"documentation":{"id":16405,"nodeType":"StructuredDocumentation","src":"19130:63:33","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"19207:8:33","parameters":{"id":16410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16407,"mutability":"mutable","name":"privateKey","nameLocation":"19224:10:33","nodeType":"VariableDeclaration","scope":16416,"src":"19216:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16406,"name":"uint256","nodeType":"ElementaryTypeName","src":"19216:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16409,"mutability":"mutable","name":"digest","nameLocation":"19244:6:33","nodeType":"VariableDeclaration","scope":16416,"src":"19236:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19236:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19215:36:33"},"returnParameters":{"id":16415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16412,"mutability":"mutable","name":"r","nameLocation":"19283:1:33","nodeType":"VariableDeclaration","scope":16416,"src":"19275:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19275:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16414,"mutability":"mutable","name":"s","nameLocation":"19294:1:33","nodeType":"VariableDeclaration","scope":16416,"src":"19286:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19286:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19274:22:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16430,"nodeType":"FunctionDefinition","src":"19371:104:33","nodes":[],"documentation":{"id":16417,"nodeType":"StructuredDocumentation","src":"19303:63:33","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"19380:4:33","parameters":{"id":16422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16419,"mutability":"mutable","name":"privateKey","nameLocation":"19393:10:33","nodeType":"VariableDeclaration","scope":16430,"src":"19385:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16418,"name":"uint256","nodeType":"ElementaryTypeName","src":"19385:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16421,"mutability":"mutable","name":"digest","nameLocation":"19413:6:33","nodeType":"VariableDeclaration","scope":16430,"src":"19405:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19405:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19384:36:33"},"returnParameters":{"id":16429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16424,"mutability":"mutable","name":"v","nameLocation":"19450:1:33","nodeType":"VariableDeclaration","scope":16430,"src":"19444:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16423,"name":"uint8","nodeType":"ElementaryTypeName","src":"19444:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16426,"mutability":"mutable","name":"r","nameLocation":"19461:1:33","nodeType":"VariableDeclaration","scope":16430,"src":"19453:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19453:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16428,"mutability":"mutable","name":"s","nameLocation":"19472:1:33","nodeType":"VariableDeclaration","scope":16430,"src":"19464:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19464:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19443:31:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16434,"nodeType":"FunctionDefinition","src":"19543:42:33","nodes":[],"documentation":{"id":16431,"nodeType":"StructuredDocumentation","src":"19481:57:33","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"19552:21:33","parameters":{"id":16432,"nodeType":"ParameterList","parameters":[],"src":"19573:2:33"},"returnParameters":{"id":16433,"nodeType":"ParameterList","parameters":[],"src":"19584:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16438,"nodeType":"FunctionDefinition","src":"19729:44:33","nodes":[],"documentation":{"id":16435,"nodeType":"StructuredDocumentation","src":"19591:133:33","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"19738:23:33","parameters":{"id":16436,"nodeType":"ParameterList","parameters":[],"src":"19761:2:33"},"returnParameters":{"id":16437,"nodeType":"ParameterList","parameters":[],"src":"19772:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16446,"nodeType":"FunctionDefinition","src":"19881:92:33","nodes":[],"documentation":{"id":16439,"nodeType":"StructuredDocumentation","src":"19779:97:33","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"19890:22:33","parameters":{"id":16440,"nodeType":"ParameterList","parameters":[],"src":"19912:2:33"},"returnParameters":{"id":16445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16444,"mutability":"mutable","name":"accountAccesses","nameLocation":"19956:15:33","nodeType":"VariableDeclaration","scope":16446,"src":"19933:38:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$15945_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":16442,"nodeType":"UserDefinedTypeName","pathNode":{"id":16441,"name":"AccountAccess","nameLocations":["19933:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":15945,"src":"19933:13:33"},"referencedDeclaration":15945,"src":"19933:13:33","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$15945_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":16443,"nodeType":"ArrayTypeName","src":"19933:15:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$15945_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"19932:40:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16450,"nodeType":"FunctionDefinition","src":"20069:41:33","nodes":[],"documentation":{"id":16447,"nodeType":"StructuredDocumentation","src":"19979:85:33","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"20078:20:33","parameters":{"id":16448,"nodeType":"ParameterList","parameters":[],"src":"20098:2:33"},"returnParameters":{"id":16449,"nodeType":"ParameterList","parameters":[],"src":"20109:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16456,"nodeType":"FunctionDefinition","src":"20309:50:33","nodes":[],"documentation":{"id":16451,"nodeType":"StructuredDocumentation","src":"20153:151:33","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"20318:9:33","parameters":{"id":16454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16453,"mutability":"mutable","name":"path","nameLocation":"20344:4:33","nodeType":"VariableDeclaration","scope":16456,"src":"20328:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16452,"name":"string","nodeType":"ElementaryTypeName","src":"20328:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20327:22:33"},"returnParameters":{"id":16455,"nodeType":"ParameterList","parameters":[],"src":"20358:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16466,"nodeType":"FunctionDefinition","src":"20674:93:33","nodes":[],"documentation":{"id":16457,"nodeType":"StructuredDocumentation","src":"20365:304:33","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"20683:8:33","parameters":{"id":16462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16459,"mutability":"mutable","name":"from","nameLocation":"20708:4:33","nodeType":"VariableDeclaration","scope":16466,"src":"20692:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16458,"name":"string","nodeType":"ElementaryTypeName","src":"20692:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16461,"mutability":"mutable","name":"to","nameLocation":"20730:2:33","nodeType":"VariableDeclaration","scope":16466,"src":"20714:18:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16460,"name":"string","nodeType":"ElementaryTypeName","src":"20714:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20691:42:33"},"returnParameters":{"id":16465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16464,"mutability":"mutable","name":"copied","nameLocation":"20759:6:33","nodeType":"VariableDeclaration","scope":16466,"src":"20752:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16463,"name":"uint64","nodeType":"ElementaryTypeName","src":"20752:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20751:15:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16474,"nodeType":"FunctionDefinition","src":"21172:66:33","nodes":[],"documentation":{"id":16467,"nodeType":"StructuredDocumentation","src":"20773:394:33","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"21181:9:33","parameters":{"id":16472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16469,"mutability":"mutable","name":"path","nameLocation":"21207:4:33","nodeType":"VariableDeclaration","scope":16474,"src":"21191:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16468,"name":"string","nodeType":"ElementaryTypeName","src":"21191:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16471,"mutability":"mutable","name":"recursive","nameLocation":"21218:9:33","nodeType":"VariableDeclaration","scope":16474,"src":"21213:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16470,"name":"bool","nodeType":"ElementaryTypeName","src":"21213:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21190:38:33"},"returnParameters":{"id":16473,"nodeType":"ParameterList","parameters":[],"src":"21237:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16482,"nodeType":"FunctionDefinition","src":"21333:69:33","nodes":[],"documentation":{"id":16475,"nodeType":"StructuredDocumentation","src":"21244:84:33","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"21342:6:33","parameters":{"id":16478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16477,"mutability":"mutable","name":"path","nameLocation":"21365:4:33","nodeType":"VariableDeclaration","scope":16482,"src":"21349:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16476,"name":"string","nodeType":"ElementaryTypeName","src":"21349:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21348:22:33"},"returnParameters":{"id":16481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16480,"mutability":"mutable","name":"result","nameLocation":"21394:6:33","nodeType":"VariableDeclaration","scope":16482,"src":"21389:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16479,"name":"bool","nodeType":"ElementaryTypeName","src":"21389:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21388:13:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16491,"nodeType":"FunctionDefinition","src":"21467:84:33","nodes":[],"documentation":{"id":16483,"nodeType":"StructuredDocumentation","src":"21408:54:33","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"21476:3:33","parameters":{"id":16487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16486,"mutability":"mutable","name":"commandInput","nameLocation":"21498:12:33","nodeType":"VariableDeclaration","scope":16491,"src":"21480:30:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16484,"name":"string","nodeType":"ElementaryTypeName","src":"21480:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16485,"nodeType":"ArrayTypeName","src":"21480:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"21479:32:33"},"returnParameters":{"id":16490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16489,"mutability":"mutable","name":"result","nameLocation":"21543:6:33","nodeType":"VariableDeclaration","scope":16491,"src":"21530:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16488,"name":"bytes","nodeType":"ElementaryTypeName","src":"21530:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21529:21:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16500,"nodeType":"FunctionDefinition","src":"21650:93:33","nodes":[],"documentation":{"id":16492,"nodeType":"StructuredDocumentation","src":"21557:88:33","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"21659:10:33","parameters":{"id":16495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16494,"mutability":"mutable","name":"path","nameLocation":"21686:4:33","nodeType":"VariableDeclaration","scope":16500,"src":"21670:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16493,"name":"string","nodeType":"ElementaryTypeName","src":"21670:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21669:22:33"},"returnParameters":{"id":16499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16498,"mutability":"mutable","name":"metadata","nameLocation":"21733:8:33","nodeType":"VariableDeclaration","scope":16500,"src":"21715:26:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$15893_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":16497,"nodeType":"UserDefinedTypeName","pathNode":{"id":16496,"name":"FsMetadata","nameLocations":["21715:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":15893,"src":"21715:10:33"},"referencedDeclaration":15893,"src":"21715:10:33","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$15893_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"21714:28:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16508,"nodeType":"FunctionDefinition","src":"21852:101:33","nodes":[],"documentation":{"id":16501,"nodeType":"StructuredDocumentation","src":"21749:98:33","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"21861:7:33","parameters":{"id":16504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16503,"mutability":"mutable","name":"artifactPath","nameLocation":"21885:12:33","nodeType":"VariableDeclaration","scope":16508,"src":"21869:28:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16502,"name":"string","nodeType":"ElementaryTypeName","src":"21869:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21868:30:33"},"returnParameters":{"id":16507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16506,"mutability":"mutable","name":"creationBytecode","nameLocation":"21935:16:33","nodeType":"VariableDeclaration","scope":16508,"src":"21922:29:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16505,"name":"bytes","nodeType":"ElementaryTypeName","src":"21922:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21921:31:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16516,"nodeType":"FunctionDefinition","src":"22062:108:33","nodes":[],"documentation":{"id":16509,"nodeType":"StructuredDocumentation","src":"21959:98:33","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"22071:15:33","parameters":{"id":16512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16511,"mutability":"mutable","name":"artifactPath","nameLocation":"22103:12:33","nodeType":"VariableDeclaration","scope":16516,"src":"22087:28:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16510,"name":"string","nodeType":"ElementaryTypeName","src":"22087:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22086:30:33"},"returnParameters":{"id":16515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16514,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"22153:15:33","nodeType":"VariableDeclaration","scope":16516,"src":"22140:28:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16513,"name":"bytes","nodeType":"ElementaryTypeName","src":"22140:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22139:30:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16524,"nodeType":"FunctionDefinition","src":"22276:68:33","nodes":[],"documentation":{"id":16517,"nodeType":"StructuredDocumentation","src":"22176:95:33","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"22285:5:33","parameters":{"id":16520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16519,"mutability":"mutable","name":"path","nameLocation":"22307:4:33","nodeType":"VariableDeclaration","scope":16524,"src":"22291:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16518,"name":"string","nodeType":"ElementaryTypeName","src":"22291:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22290:22:33"},"returnParameters":{"id":16523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16522,"mutability":"mutable","name":"result","nameLocation":"22336:6:33","nodeType":"VariableDeclaration","scope":16524,"src":"22331:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16521,"name":"bool","nodeType":"ElementaryTypeName","src":"22331:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22330:13:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16532,"nodeType":"FunctionDefinition","src":"22453:69:33","nodes":[],"documentation":{"id":16525,"nodeType":"StructuredDocumentation","src":"22350:98:33","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"22462:6:33","parameters":{"id":16528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16527,"mutability":"mutable","name":"path","nameLocation":"22485:4:33","nodeType":"VariableDeclaration","scope":16532,"src":"22469:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16526,"name":"string","nodeType":"ElementaryTypeName","src":"22469:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22468:22:33"},"returnParameters":{"id":16531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16530,"mutability":"mutable","name":"result","nameLocation":"22514:6:33","nodeType":"VariableDeclaration","scope":16532,"src":"22509:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16529,"name":"bool","nodeType":"ElementaryTypeName","src":"22509:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22508:13:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16538,"nodeType":"FunctionDefinition","src":"22578:66:33","nodes":[],"documentation":{"id":16533,"nodeType":"StructuredDocumentation","src":"22528:45:33","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"22587:11:33","parameters":{"id":16534,"nodeType":"ParameterList","parameters":[],"src":"22598:2:33"},"returnParameters":{"id":16537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16536,"mutability":"mutable","name":"path","nameLocation":"22638:4:33","nodeType":"VariableDeclaration","scope":16538,"src":"22624:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16535,"name":"string","nodeType":"ElementaryTypeName","src":"22624:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22623:20:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16548,"nodeType":"FunctionDefinition","src":"22892:89:33","nodes":[],"documentation":{"id":16539,"nodeType":"StructuredDocumentation","src":"22650:237:33","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"22901:7:33","parameters":{"id":16542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16541,"mutability":"mutable","name":"path","nameLocation":"22925:4:33","nodeType":"VariableDeclaration","scope":16548,"src":"22909:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16540,"name":"string","nodeType":"ElementaryTypeName","src":"22909:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22908:22:33"},"returnParameters":{"id":16547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16546,"mutability":"mutable","name":"entries","nameLocation":"22972:7:33","nodeType":"VariableDeclaration","scope":16548,"src":"22954:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15878_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16544,"nodeType":"UserDefinedTypeName","pathNode":{"id":16543,"name":"DirEntry","nameLocations":["22954:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":15878,"src":"22954:8:33"},"referencedDeclaration":15878,"src":"22954:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15878_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16545,"nodeType":"ArrayTypeName","src":"22954:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15878_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"22953:27:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16560,"nodeType":"FunctionDefinition","src":"23018:106:33","nodes":[],"documentation":{"id":16549,"nodeType":"StructuredDocumentation","src":"22987:26:33","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"23027:7:33","parameters":{"id":16554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16551,"mutability":"mutable","name":"path","nameLocation":"23051:4:33","nodeType":"VariableDeclaration","scope":16560,"src":"23035:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16550,"name":"string","nodeType":"ElementaryTypeName","src":"23035:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16553,"mutability":"mutable","name":"maxDepth","nameLocation":"23064:8:33","nodeType":"VariableDeclaration","scope":16560,"src":"23057:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16552,"name":"uint64","nodeType":"ElementaryTypeName","src":"23057:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23034:39:33"},"returnParameters":{"id":16559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16558,"mutability":"mutable","name":"entries","nameLocation":"23115:7:33","nodeType":"VariableDeclaration","scope":16560,"src":"23097:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15878_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16556,"nodeType":"UserDefinedTypeName","pathNode":{"id":16555,"name":"DirEntry","nameLocations":["23097:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":15878,"src":"23097:8:33"},"referencedDeclaration":15878,"src":"23097:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15878_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16557,"nodeType":"ArrayTypeName","src":"23097:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15878_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"23096:27:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16574,"nodeType":"FunctionDefinition","src":"23161:148:33","nodes":[],"documentation":{"id":16561,"nodeType":"StructuredDocumentation","src":"23130:26:33","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"23170:7:33","parameters":{"id":16568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16563,"mutability":"mutable","name":"path","nameLocation":"23194:4:33","nodeType":"VariableDeclaration","scope":16574,"src":"23178:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16562,"name":"string","nodeType":"ElementaryTypeName","src":"23178:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16565,"mutability":"mutable","name":"maxDepth","nameLocation":"23207:8:33","nodeType":"VariableDeclaration","scope":16574,"src":"23200:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16564,"name":"uint64","nodeType":"ElementaryTypeName","src":"23200:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16567,"mutability":"mutable","name":"followLinks","nameLocation":"23222:11:33","nodeType":"VariableDeclaration","scope":16574,"src":"23217:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16566,"name":"bool","nodeType":"ElementaryTypeName","src":"23217:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23177:57:33"},"returnParameters":{"id":16573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16572,"mutability":"mutable","name":"entries","nameLocation":"23300:7:33","nodeType":"VariableDeclaration","scope":16574,"src":"23282:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15878_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":16570,"nodeType":"UserDefinedTypeName","pathNode":{"id":16569,"name":"DirEntry","nameLocations":["23282:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":15878,"src":"23282:8:33"},"referencedDeclaration":15878,"src":"23282:8:33","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$15878_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":16571,"nodeType":"ArrayTypeName","src":"23282:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$15878_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"23281:27:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16582,"nodeType":"FunctionDefinition","src":"23407:83:33","nodes":[],"documentation":{"id":16575,"nodeType":"StructuredDocumentation","src":"23315:87:33","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"23416:8:33","parameters":{"id":16578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16577,"mutability":"mutable","name":"path","nameLocation":"23441:4:33","nodeType":"VariableDeclaration","scope":16582,"src":"23425:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16576,"name":"string","nodeType":"ElementaryTypeName","src":"23425:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23424:22:33"},"returnParameters":{"id":16581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16580,"mutability":"mutable","name":"data","nameLocation":"23484:4:33","nodeType":"VariableDeclaration","scope":16582,"src":"23470:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16579,"name":"string","nodeType":"ElementaryTypeName","src":"23470:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23469:20:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16590,"nodeType":"FunctionDefinition","src":"23588:88:33","nodes":[],"documentation":{"id":16583,"nodeType":"StructuredDocumentation","src":"23496:87:33","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"23597:14:33","parameters":{"id":16586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16585,"mutability":"mutable","name":"path","nameLocation":"23628:4:33","nodeType":"VariableDeclaration","scope":16590,"src":"23612:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16584,"name":"string","nodeType":"ElementaryTypeName","src":"23612:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23611:22:33"},"returnParameters":{"id":16589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16588,"mutability":"mutable","name":"data","nameLocation":"23670:4:33","nodeType":"VariableDeclaration","scope":16590,"src":"23657:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16587,"name":"bytes","nodeType":"ElementaryTypeName","src":"23657:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23656:19:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16598,"nodeType":"FunctionDefinition","src":"23725:83:33","nodes":[],"documentation":{"id":16591,"nodeType":"StructuredDocumentation","src":"23682:38:33","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"23734:8:33","parameters":{"id":16594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16593,"mutability":"mutable","name":"path","nameLocation":"23759:4:33","nodeType":"VariableDeclaration","scope":16598,"src":"23743:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16592,"name":"string","nodeType":"ElementaryTypeName","src":"23743:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23742:22:33"},"returnParameters":{"id":16597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16596,"mutability":"mutable","name":"line","nameLocation":"23802:4:33","nodeType":"VariableDeclaration","scope":16598,"src":"23788:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16595,"name":"string","nodeType":"ElementaryTypeName","src":"23788:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23787:20:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16606,"nodeType":"FunctionDefinition","src":"24067:93:33","nodes":[],"documentation":{"id":16599,"nodeType":"StructuredDocumentation","src":"23814:248:33","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"24076:8:33","parameters":{"id":16602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16601,"mutability":"mutable","name":"linkPath","nameLocation":"24101:8:33","nodeType":"VariableDeclaration","scope":16606,"src":"24085:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16600,"name":"string","nodeType":"ElementaryTypeName","src":"24085:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24084:26:33"},"returnParameters":{"id":16605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16604,"mutability":"mutable","name":"targetPath","nameLocation":"24148:10:33","nodeType":"VariableDeclaration","scope":16606,"src":"24134:24:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16603,"name":"string","nodeType":"ElementaryTypeName","src":"24134:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24133:26:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16614,"nodeType":"FunctionDefinition","src":"24550:66:33","nodes":[],"documentation":{"id":16607,"nodeType":"StructuredDocumentation","src":"24166:379:33","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"24559:9:33","parameters":{"id":16612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16609,"mutability":"mutable","name":"path","nameLocation":"24585:4:33","nodeType":"VariableDeclaration","scope":16614,"src":"24569:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16608,"name":"string","nodeType":"ElementaryTypeName","src":"24569:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16611,"mutability":"mutable","name":"recursive","nameLocation":"24596:9:33","nodeType":"VariableDeclaration","scope":16614,"src":"24591:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16610,"name":"bool","nodeType":"ElementaryTypeName","src":"24591:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24568:38:33"},"returnParameters":{"id":16613,"nodeType":"ParameterList","parameters":[],"src":"24615:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16620,"nodeType":"FunctionDefinition","src":"24949:51:33","nodes":[],"documentation":{"id":16615,"nodeType":"StructuredDocumentation","src":"24622:322:33","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"24958:10:33","parameters":{"id":16618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16617,"mutability":"mutable","name":"path","nameLocation":"24985:4:33","nodeType":"VariableDeclaration","scope":16620,"src":"24969:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16616,"name":"string","nodeType":"ElementaryTypeName","src":"24969:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24968:22:33"},"returnParameters":{"id":16619,"nodeType":"ParameterList","parameters":[],"src":"24999:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16630,"nodeType":"FunctionDefinition","src":"25107:91:33","nodes":[],"documentation":{"id":16621,"nodeType":"StructuredDocumentation","src":"25006:96:33","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"25116:6:33","parameters":{"id":16625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16624,"mutability":"mutable","name":"commandInput","nameLocation":"25141:12:33","nodeType":"VariableDeclaration","scope":16630,"src":"25123:30:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16622,"name":"string","nodeType":"ElementaryTypeName","src":"25123:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16623,"nodeType":"ArrayTypeName","src":"25123:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"25122:32:33"},"returnParameters":{"id":16629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16628,"mutability":"mutable","name":"result","nameLocation":"25190:6:33","nodeType":"VariableDeclaration","scope":16630,"src":"25173:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$15909_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":16627,"nodeType":"UserDefinedTypeName","pathNode":{"id":16626,"name":"FfiResult","nameLocations":["25173:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":15909,"src":"25173:9:33"},"referencedDeclaration":15909,"src":"25173:9:33","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$15909_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"25172:25:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16636,"nodeType":"FunctionDefinition","src":"25263:60:33","nodes":[],"documentation":{"id":16631,"nodeType":"StructuredDocumentation","src":"25204:54:33","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"25272:8:33","parameters":{"id":16632,"nodeType":"ParameterList","parameters":[],"src":"25280:2:33"},"returnParameters":{"id":16635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16634,"mutability":"mutable","name":"milliseconds","nameLocation":"25309:12:33","nodeType":"VariableDeclaration","scope":16636,"src":"25301:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16633,"name":"uint256","nodeType":"ElementaryTypeName","src":"25301:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25300:22:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16644,"nodeType":"FunctionDefinition","src":"25492:72:33","nodes":[],"documentation":{"id":16637,"nodeType":"StructuredDocumentation","src":"25329:158:33","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"25501:9:33","parameters":{"id":16642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16639,"mutability":"mutable","name":"path","nameLocation":"25527:4:33","nodeType":"VariableDeclaration","scope":16644,"src":"25511:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16638,"name":"string","nodeType":"ElementaryTypeName","src":"25511:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16641,"mutability":"mutable","name":"data","nameLocation":"25549:4:33","nodeType":"VariableDeclaration","scope":16644,"src":"25533:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16640,"name":"string","nodeType":"ElementaryTypeName","src":"25533:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25510:44:33"},"returnParameters":{"id":16643,"nodeType":"ParameterList","parameters":[],"src":"25563:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16652,"nodeType":"FunctionDefinition","src":"25742:77:33","nodes":[],"documentation":{"id":16645,"nodeType":"StructuredDocumentation","src":"25570:167:33","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"25751:15:33","parameters":{"id":16650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16647,"mutability":"mutable","name":"path","nameLocation":"25783:4:33","nodeType":"VariableDeclaration","scope":16652,"src":"25767:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16646,"name":"string","nodeType":"ElementaryTypeName","src":"25767:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16649,"mutability":"mutable","name":"data","nameLocation":"25804:4:33","nodeType":"VariableDeclaration","scope":16652,"src":"25789:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16648,"name":"bytes","nodeType":"ElementaryTypeName","src":"25789:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25766:43:33"},"returnParameters":{"id":16651,"nodeType":"ParameterList","parameters":[],"src":"25818:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16660,"nodeType":"FunctionDefinition","src":"25940:72:33","nodes":[],"documentation":{"id":16653,"nodeType":"StructuredDocumentation","src":"25825:110:33","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"25949:9:33","parameters":{"id":16658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16655,"mutability":"mutable","name":"path","nameLocation":"25975:4:33","nodeType":"VariableDeclaration","scope":16660,"src":"25959:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16654,"name":"string","nodeType":"ElementaryTypeName","src":"25959:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16657,"mutability":"mutable","name":"data","nameLocation":"25997:4:33","nodeType":"VariableDeclaration","scope":16660,"src":"25981:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16656,"name":"string","nodeType":"ElementaryTypeName","src":"25981:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25958:44:33"},"returnParameters":{"id":16659,"nodeType":"ParameterList","parameters":[],"src":"26011:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16670,"nodeType":"FunctionDefinition","src":"26205:91:33","nodes":[],"documentation":{"id":16661,"nodeType":"StructuredDocumentation","src":"26049:151:33","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"26214:9:33","parameters":{"id":16666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16663,"mutability":"mutable","name":"json","nameLocation":"26240:4:33","nodeType":"VariableDeclaration","scope":16670,"src":"26224:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16662,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16665,"mutability":"mutable","name":"key","nameLocation":"26262:3:33","nodeType":"VariableDeclaration","scope":16670,"src":"26246:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16664,"name":"string","nodeType":"ElementaryTypeName","src":"26246:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26223:43:33"},"returnParameters":{"id":16669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16670,"src":"26290:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16667,"name":"bool","nodeType":"ElementaryTypeName","src":"26290:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26289:6:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16680,"nodeType":"FunctionDefinition","src":"26351:95:33","nodes":[],"documentation":{"id":16671,"nodeType":"StructuredDocumentation","src":"26302:44:33","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"26360:13:33","parameters":{"id":16676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16673,"mutability":"mutable","name":"json","nameLocation":"26390:4:33","nodeType":"VariableDeclaration","scope":16680,"src":"26374:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16672,"name":"string","nodeType":"ElementaryTypeName","src":"26374:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16675,"mutability":"mutable","name":"key","nameLocation":"26412:3:33","nodeType":"VariableDeclaration","scope":16680,"src":"26396:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16674,"name":"string","nodeType":"ElementaryTypeName","src":"26396:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26373:43:33"},"returnParameters":{"id":16679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16680,"src":"26440:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16677,"name":"bool","nodeType":"ElementaryTypeName","src":"26440:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26439:6:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16690,"nodeType":"FunctionDefinition","src":"26527:101:33","nodes":[],"documentation":{"id":16681,"nodeType":"StructuredDocumentation","src":"26452:70:33","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"26536:16:33","parameters":{"id":16686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16683,"mutability":"mutable","name":"json","nameLocation":"26569:4:33","nodeType":"VariableDeclaration","scope":16690,"src":"26553:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16682,"name":"string","nodeType":"ElementaryTypeName","src":"26553:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16685,"mutability":"mutable","name":"key","nameLocation":"26591:3:33","nodeType":"VariableDeclaration","scope":16690,"src":"26575:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16684,"name":"string","nodeType":"ElementaryTypeName","src":"26575:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26552:43:33"},"returnParameters":{"id":16689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16690,"src":"26619:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16687,"name":"address","nodeType":"ElementaryTypeName","src":"26619:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26618:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16701,"nodeType":"FunctionDefinition","src":"26711:139:33","nodes":[],"documentation":{"id":16691,"nodeType":"StructuredDocumentation","src":"26634:72:33","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"26720:21:33","parameters":{"id":16696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16693,"mutability":"mutable","name":"json","nameLocation":"26758:4:33","nodeType":"VariableDeclaration","scope":16701,"src":"26742:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16692,"name":"string","nodeType":"ElementaryTypeName","src":"26742:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16695,"mutability":"mutable","name":"key","nameLocation":"26780:3:33","nodeType":"VariableDeclaration","scope":16701,"src":"26764:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16694,"name":"string","nodeType":"ElementaryTypeName","src":"26764:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26741:43:33"},"returnParameters":{"id":16700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16701,"src":"26832:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16697,"name":"address","nodeType":"ElementaryTypeName","src":"26832:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16698,"nodeType":"ArrayTypeName","src":"26832:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"26831:18:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16711,"nodeType":"FunctionDefinition","src":"26928:95:33","nodes":[],"documentation":{"id":16702,"nodeType":"StructuredDocumentation","src":"26856:67:33","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"26937:13:33","parameters":{"id":16707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16704,"mutability":"mutable","name":"json","nameLocation":"26967:4:33","nodeType":"VariableDeclaration","scope":16711,"src":"26951:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16703,"name":"string","nodeType":"ElementaryTypeName","src":"26951:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16706,"mutability":"mutable","name":"key","nameLocation":"26989:3:33","nodeType":"VariableDeclaration","scope":16711,"src":"26973:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16705,"name":"string","nodeType":"ElementaryTypeName","src":"26973:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26950:43:33"},"returnParameters":{"id":16710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16711,"src":"27017:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16708,"name":"bool","nodeType":"ElementaryTypeName","src":"27017:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27016:6:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16722,"nodeType":"FunctionDefinition","src":"27103:109:33","nodes":[],"documentation":{"id":16712,"nodeType":"StructuredDocumentation","src":"27029:69:33","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"27112:18:33","parameters":{"id":16717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16714,"mutability":"mutable","name":"json","nameLocation":"27147:4:33","nodeType":"VariableDeclaration","scope":16722,"src":"27131:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16713,"name":"string","nodeType":"ElementaryTypeName","src":"27131:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16716,"mutability":"mutable","name":"key","nameLocation":"27169:3:33","nodeType":"VariableDeclaration","scope":16722,"src":"27153:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16715,"name":"string","nodeType":"ElementaryTypeName","src":"27153:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27130:43:33"},"returnParameters":{"id":16721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16722,"src":"27197:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16718,"name":"bool","nodeType":"ElementaryTypeName","src":"27197:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16719,"nodeType":"ArrayTypeName","src":"27197:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"27196:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16732,"nodeType":"FunctionDefinition","src":"27291:104:33","nodes":[],"documentation":{"id":16723,"nodeType":"StructuredDocumentation","src":"27218:68:33","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"27300:14:33","parameters":{"id":16728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16725,"mutability":"mutable","name":"json","nameLocation":"27331:4:33","nodeType":"VariableDeclaration","scope":16732,"src":"27315:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16724,"name":"string","nodeType":"ElementaryTypeName","src":"27315:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16727,"mutability":"mutable","name":"key","nameLocation":"27353:3:33","nodeType":"VariableDeclaration","scope":16732,"src":"27337:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16726,"name":"string","nodeType":"ElementaryTypeName","src":"27337:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27314:43:33"},"returnParameters":{"id":16731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16732,"src":"27381:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16729,"name":"bytes","nodeType":"ElementaryTypeName","src":"27381:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27380:14:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16742,"nodeType":"FunctionDefinition","src":"27476:101:33","nodes":[],"documentation":{"id":16733,"nodeType":"StructuredDocumentation","src":"27401:70:33","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"27485:16:33","parameters":{"id":16738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16735,"mutability":"mutable","name":"json","nameLocation":"27518:4:33","nodeType":"VariableDeclaration","scope":16742,"src":"27502:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16734,"name":"string","nodeType":"ElementaryTypeName","src":"27502:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16737,"mutability":"mutable","name":"key","nameLocation":"27540:3:33","nodeType":"VariableDeclaration","scope":16742,"src":"27524:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16736,"name":"string","nodeType":"ElementaryTypeName","src":"27524:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27501:43:33"},"returnParameters":{"id":16741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16742,"src":"27568:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27568:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27567:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16753,"nodeType":"FunctionDefinition","src":"27660:139:33","nodes":[],"documentation":{"id":16743,"nodeType":"StructuredDocumentation","src":"27583:72:33","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"27669:21:33","parameters":{"id":16748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16745,"mutability":"mutable","name":"json","nameLocation":"27707:4:33","nodeType":"VariableDeclaration","scope":16753,"src":"27691:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16744,"name":"string","nodeType":"ElementaryTypeName","src":"27691:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16747,"mutability":"mutable","name":"key","nameLocation":"27729:3:33","nodeType":"VariableDeclaration","scope":16753,"src":"27713:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16746,"name":"string","nodeType":"ElementaryTypeName","src":"27713:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27690:43:33"},"returnParameters":{"id":16752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16753,"src":"27781:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27781:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16750,"nodeType":"ArrayTypeName","src":"27781:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27780:18:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16764,"nodeType":"FunctionDefinition","src":"27880:111:33","nodes":[],"documentation":{"id":16754,"nodeType":"StructuredDocumentation","src":"27805:70:33","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"27889:19:33","parameters":{"id":16759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16756,"mutability":"mutable","name":"json","nameLocation":"27925:4:33","nodeType":"VariableDeclaration","scope":16764,"src":"27909:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16755,"name":"string","nodeType":"ElementaryTypeName","src":"27909:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16758,"mutability":"mutable","name":"key","nameLocation":"27947:3:33","nodeType":"VariableDeclaration","scope":16764,"src":"27931:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16757,"name":"string","nodeType":"ElementaryTypeName","src":"27931:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27908:43:33"},"returnParameters":{"id":16763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16764,"src":"27975:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16760,"name":"bytes","nodeType":"ElementaryTypeName","src":"27975:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16761,"nodeType":"ArrayTypeName","src":"27975:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"27974:16:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16774,"nodeType":"FunctionDefinition","src":"28071:96:33","nodes":[],"documentation":{"id":16765,"nodeType":"StructuredDocumentation","src":"27997:69:33","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"28080:12:33","parameters":{"id":16770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16767,"mutability":"mutable","name":"json","nameLocation":"28109:4:33","nodeType":"VariableDeclaration","scope":16774,"src":"28093:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16766,"name":"string","nodeType":"ElementaryTypeName","src":"28093:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16769,"mutability":"mutable","name":"key","nameLocation":"28131:3:33","nodeType":"VariableDeclaration","scope":16774,"src":"28115:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16768,"name":"string","nodeType":"ElementaryTypeName","src":"28115:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28092:43:33"},"returnParameters":{"id":16773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16774,"src":"28159:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16771,"name":"int256","nodeType":"ElementaryTypeName","src":"28159:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28158:8:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16785,"nodeType":"FunctionDefinition","src":"28249:110:33","nodes":[],"documentation":{"id":16775,"nodeType":"StructuredDocumentation","src":"28173:71:33","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"28258:17:33","parameters":{"id":16780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16777,"mutability":"mutable","name":"json","nameLocation":"28292:4:33","nodeType":"VariableDeclaration","scope":16785,"src":"28276:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16776,"name":"string","nodeType":"ElementaryTypeName","src":"28276:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16779,"mutability":"mutable","name":"key","nameLocation":"28314:3:33","nodeType":"VariableDeclaration","scope":16785,"src":"28298:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16778,"name":"string","nodeType":"ElementaryTypeName","src":"28298:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28275:43:33"},"returnParameters":{"id":16784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16785,"src":"28342:15:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16781,"name":"int256","nodeType":"ElementaryTypeName","src":"28342:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16782,"nodeType":"ArrayTypeName","src":"28342:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"28341:17:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16796,"nodeType":"FunctionDefinition","src":"28424:111:33","nodes":[],"documentation":{"id":16786,"nodeType":"StructuredDocumentation","src":"28365:54:33","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"28433:13:33","parameters":{"id":16791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16788,"mutability":"mutable","name":"json","nameLocation":"28463:4:33","nodeType":"VariableDeclaration","scope":16796,"src":"28447:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16787,"name":"string","nodeType":"ElementaryTypeName","src":"28447:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16790,"mutability":"mutable","name":"key","nameLocation":"28485:3:33","nodeType":"VariableDeclaration","scope":16796,"src":"28469:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16789,"name":"string","nodeType":"ElementaryTypeName","src":"28469:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28446:43:33"},"returnParameters":{"id":16795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16794,"mutability":"mutable","name":"keys","nameLocation":"28529:4:33","nodeType":"VariableDeclaration","scope":16796,"src":"28513:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16792,"name":"string","nodeType":"ElementaryTypeName","src":"28513:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16793,"nodeType":"ArrayTypeName","src":"28513:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28512:22:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16806,"nodeType":"FunctionDefinition","src":"28615:106:33","nodes":[],"documentation":{"id":16797,"nodeType":"StructuredDocumentation","src":"28541:69:33","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"28624:15:33","parameters":{"id":16802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16799,"mutability":"mutable","name":"json","nameLocation":"28656:4:33","nodeType":"VariableDeclaration","scope":16806,"src":"28640:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16798,"name":"string","nodeType":"ElementaryTypeName","src":"28640:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16801,"mutability":"mutable","name":"key","nameLocation":"28678:3:33","nodeType":"VariableDeclaration","scope":16806,"src":"28662:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16800,"name":"string","nodeType":"ElementaryTypeName","src":"28662:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28639:43:33"},"returnParameters":{"id":16805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16806,"src":"28706:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16803,"name":"string","nodeType":"ElementaryTypeName","src":"28706:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28705:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16817,"nodeType":"FunctionDefinition","src":"28803:113:33","nodes":[],"documentation":{"id":16807,"nodeType":"StructuredDocumentation","src":"28727:71:33","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"28812:20:33","parameters":{"id":16812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16809,"mutability":"mutable","name":"json","nameLocation":"28849:4:33","nodeType":"VariableDeclaration","scope":16817,"src":"28833:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16808,"name":"string","nodeType":"ElementaryTypeName","src":"28833:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16811,"mutability":"mutable","name":"key","nameLocation":"28871:3:33","nodeType":"VariableDeclaration","scope":16817,"src":"28855:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16810,"name":"string","nodeType":"ElementaryTypeName","src":"28855:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28832:43:33"},"returnParameters":{"id":16816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16817,"src":"28899:15:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16813,"name":"string","nodeType":"ElementaryTypeName","src":"28899:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16814,"nodeType":"ArrayTypeName","src":"28899:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28898:17:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16827,"nodeType":"FunctionDefinition","src":"28997:98:33","nodes":[],"documentation":{"id":16818,"nodeType":"StructuredDocumentation","src":"28922:70:33","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"29006:13:33","parameters":{"id":16823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16820,"mutability":"mutable","name":"json","nameLocation":"29036:4:33","nodeType":"VariableDeclaration","scope":16827,"src":"29020:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16819,"name":"string","nodeType":"ElementaryTypeName","src":"29020:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16822,"mutability":"mutable","name":"key","nameLocation":"29058:3:33","nodeType":"VariableDeclaration","scope":16827,"src":"29042:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16821,"name":"string","nodeType":"ElementaryTypeName","src":"29042:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29019:43:33"},"returnParameters":{"id":16826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16827,"src":"29086:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16824,"name":"uint256","nodeType":"ElementaryTypeName","src":"29086:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29085:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16838,"nodeType":"FunctionDefinition","src":"29178:112:33","nodes":[],"documentation":{"id":16828,"nodeType":"StructuredDocumentation","src":"29101:72:33","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"29187:18:33","parameters":{"id":16833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16830,"mutability":"mutable","name":"json","nameLocation":"29222:4:33","nodeType":"VariableDeclaration","scope":16838,"src":"29206:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16829,"name":"string","nodeType":"ElementaryTypeName","src":"29206:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16832,"mutability":"mutable","name":"key","nameLocation":"29244:3:33","nodeType":"VariableDeclaration","scope":16838,"src":"29228:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16831,"name":"string","nodeType":"ElementaryTypeName","src":"29228:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29205:43:33"},"returnParameters":{"id":16837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16838,"src":"29272:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16834,"name":"uint256","nodeType":"ElementaryTypeName","src":"29272:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16835,"nodeType":"ArrayTypeName","src":"29272:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"29271:18:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16846,"nodeType":"FunctionDefinition","src":"29331:93:33","nodes":[],"documentation":{"id":16839,"nodeType":"StructuredDocumentation","src":"29296:30:33","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"29340:9:33","parameters":{"id":16842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16841,"mutability":"mutable","name":"json","nameLocation":"29366:4:33","nodeType":"VariableDeclaration","scope":16846,"src":"29350:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16840,"name":"string","nodeType":"ElementaryTypeName","src":"29350:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29349:22:33"},"returnParameters":{"id":16845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16844,"mutability":"mutable","name":"abiEncodedData","nameLocation":"29408:14:33","nodeType":"VariableDeclaration","scope":16846,"src":"29395:27:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16843,"name":"bytes","nodeType":"ElementaryTypeName","src":"29395:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29394:29:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16856,"nodeType":"FunctionDefinition","src":"29474:114:33","nodes":[],"documentation":{"id":16847,"nodeType":"StructuredDocumentation","src":"29430:39:33","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"29483:9:33","parameters":{"id":16852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16849,"mutability":"mutable","name":"json","nameLocation":"29509:4:33","nodeType":"VariableDeclaration","scope":16856,"src":"29493:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16848,"name":"string","nodeType":"ElementaryTypeName","src":"29493:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16851,"mutability":"mutable","name":"key","nameLocation":"29531:3:33","nodeType":"VariableDeclaration","scope":16856,"src":"29515:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16850,"name":"string","nodeType":"ElementaryTypeName","src":"29515:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29492:43:33"},"returnParameters":{"id":16855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16854,"mutability":"mutable","name":"abiEncodedData","nameLocation":"29572:14:33","nodeType":"VariableDeclaration","scope":16856,"src":"29559:27:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16853,"name":"bytes","nodeType":"ElementaryTypeName","src":"29559:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29558:29:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16868,"nodeType":"FunctionDefinition","src":"29623:148:33","nodes":[],"documentation":{"id":16857,"nodeType":"StructuredDocumentation","src":"29594:24:33","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"29632:16:33","parameters":{"id":16864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16859,"mutability":"mutable","name":"objectKey","nameLocation":"29665:9:33","nodeType":"VariableDeclaration","scope":16868,"src":"29649:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16858,"name":"string","nodeType":"ElementaryTypeName","src":"29649:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16861,"mutability":"mutable","name":"valueKey","nameLocation":"29692:8:33","nodeType":"VariableDeclaration","scope":16868,"src":"29676:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16860,"name":"string","nodeType":"ElementaryTypeName","src":"29676:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16863,"mutability":"mutable","name":"value","nameLocation":"29710:5:33","nodeType":"VariableDeclaration","scope":16868,"src":"29702:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16862,"name":"address","nodeType":"ElementaryTypeName","src":"29702:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29648:68:33"},"returnParameters":{"id":16867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16866,"mutability":"mutable","name":"json","nameLocation":"29765:4:33","nodeType":"VariableDeclaration","scope":16868,"src":"29751:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16865,"name":"string","nodeType":"ElementaryTypeName","src":"29751:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29750:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16881,"nodeType":"FunctionDefinition","src":"29806:160:33","nodes":[],"documentation":{"id":16869,"nodeType":"StructuredDocumentation","src":"29777:24:33","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"29815:16:33","parameters":{"id":16877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16871,"mutability":"mutable","name":"objectKey","nameLocation":"29848:9:33","nodeType":"VariableDeclaration","scope":16881,"src":"29832:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16870,"name":"string","nodeType":"ElementaryTypeName","src":"29832:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16873,"mutability":"mutable","name":"valueKey","nameLocation":"29875:8:33","nodeType":"VariableDeclaration","scope":16881,"src":"29859:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16872,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16876,"mutability":"mutable","name":"values","nameLocation":"29904:6:33","nodeType":"VariableDeclaration","scope":16881,"src":"29885:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16874,"name":"address","nodeType":"ElementaryTypeName","src":"29885:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16875,"nodeType":"ArrayTypeName","src":"29885:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"29831:80:33"},"returnParameters":{"id":16880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16879,"mutability":"mutable","name":"json","nameLocation":"29960:4:33","nodeType":"VariableDeclaration","scope":16881,"src":"29946:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16878,"name":"string","nodeType":"ElementaryTypeName","src":"29946:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29945:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16893,"nodeType":"FunctionDefinition","src":"30001:142:33","nodes":[],"documentation":{"id":16882,"nodeType":"StructuredDocumentation","src":"29972:24:33","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"30010:13:33","parameters":{"id":16889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16884,"mutability":"mutable","name":"objectKey","nameLocation":"30040:9:33","nodeType":"VariableDeclaration","scope":16893,"src":"30024:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16883,"name":"string","nodeType":"ElementaryTypeName","src":"30024:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16886,"mutability":"mutable","name":"valueKey","nameLocation":"30067:8:33","nodeType":"VariableDeclaration","scope":16893,"src":"30051:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16885,"name":"string","nodeType":"ElementaryTypeName","src":"30051:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16888,"mutability":"mutable","name":"value","nameLocation":"30082:5:33","nodeType":"VariableDeclaration","scope":16893,"src":"30077:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16887,"name":"bool","nodeType":"ElementaryTypeName","src":"30077:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30023:65:33"},"returnParameters":{"id":16892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16891,"mutability":"mutable","name":"json","nameLocation":"30137:4:33","nodeType":"VariableDeclaration","scope":16893,"src":"30123:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16890,"name":"string","nodeType":"ElementaryTypeName","src":"30123:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30122:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16906,"nodeType":"FunctionDefinition","src":"30178:154:33","nodes":[],"documentation":{"id":16894,"nodeType":"StructuredDocumentation","src":"30149:24:33","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"30187:13:33","parameters":{"id":16902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16896,"mutability":"mutable","name":"objectKey","nameLocation":"30217:9:33","nodeType":"VariableDeclaration","scope":16906,"src":"30201:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16895,"name":"string","nodeType":"ElementaryTypeName","src":"30201:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16898,"mutability":"mutable","name":"valueKey","nameLocation":"30244:8:33","nodeType":"VariableDeclaration","scope":16906,"src":"30228:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16897,"name":"string","nodeType":"ElementaryTypeName","src":"30228:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16901,"mutability":"mutable","name":"values","nameLocation":"30270:6:33","nodeType":"VariableDeclaration","scope":16906,"src":"30254:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16899,"name":"bool","nodeType":"ElementaryTypeName","src":"30254:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16900,"nodeType":"ArrayTypeName","src":"30254:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"30200:77:33"},"returnParameters":{"id":16905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16904,"mutability":"mutable","name":"json","nameLocation":"30326:4:33","nodeType":"VariableDeclaration","scope":16906,"src":"30312:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16903,"name":"string","nodeType":"ElementaryTypeName","src":"30312:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30311:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16918,"nodeType":"FunctionDefinition","src":"30367:148:33","nodes":[],"documentation":{"id":16907,"nodeType":"StructuredDocumentation","src":"30338:24:33","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"30376:16:33","parameters":{"id":16914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16909,"mutability":"mutable","name":"objectKey","nameLocation":"30409:9:33","nodeType":"VariableDeclaration","scope":16918,"src":"30393:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16908,"name":"string","nodeType":"ElementaryTypeName","src":"30393:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16911,"mutability":"mutable","name":"valueKey","nameLocation":"30436:8:33","nodeType":"VariableDeclaration","scope":16918,"src":"30420:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16910,"name":"string","nodeType":"ElementaryTypeName","src":"30420:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16913,"mutability":"mutable","name":"value","nameLocation":"30454:5:33","nodeType":"VariableDeclaration","scope":16918,"src":"30446:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30446:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30392:68:33"},"returnParameters":{"id":16917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16916,"mutability":"mutable","name":"json","nameLocation":"30509:4:33","nodeType":"VariableDeclaration","scope":16918,"src":"30495:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16915,"name":"string","nodeType":"ElementaryTypeName","src":"30495:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30494:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16931,"nodeType":"FunctionDefinition","src":"30550:160:33","nodes":[],"documentation":{"id":16919,"nodeType":"StructuredDocumentation","src":"30521:24:33","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"30559:16:33","parameters":{"id":16927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16921,"mutability":"mutable","name":"objectKey","nameLocation":"30592:9:33","nodeType":"VariableDeclaration","scope":16931,"src":"30576:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16920,"name":"string","nodeType":"ElementaryTypeName","src":"30576:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16923,"mutability":"mutable","name":"valueKey","nameLocation":"30619:8:33","nodeType":"VariableDeclaration","scope":16931,"src":"30603:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16922,"name":"string","nodeType":"ElementaryTypeName","src":"30603:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16926,"mutability":"mutable","name":"values","nameLocation":"30648:6:33","nodeType":"VariableDeclaration","scope":16931,"src":"30629:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30629:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16925,"nodeType":"ArrayTypeName","src":"30629:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"30575:80:33"},"returnParameters":{"id":16930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16929,"mutability":"mutable","name":"json","nameLocation":"30704:4:33","nodeType":"VariableDeclaration","scope":16931,"src":"30690:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16928,"name":"string","nodeType":"ElementaryTypeName","src":"30690:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30689:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16943,"nodeType":"FunctionDefinition","src":"30745:153:33","nodes":[],"documentation":{"id":16932,"nodeType":"StructuredDocumentation","src":"30716:24:33","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"30754:14:33","parameters":{"id":16939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16934,"mutability":"mutable","name":"objectKey","nameLocation":"30785:9:33","nodeType":"VariableDeclaration","scope":16943,"src":"30769:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16933,"name":"string","nodeType":"ElementaryTypeName","src":"30769:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16936,"mutability":"mutable","name":"valueKey","nameLocation":"30812:8:33","nodeType":"VariableDeclaration","scope":16943,"src":"30796:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16935,"name":"string","nodeType":"ElementaryTypeName","src":"30796:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16938,"mutability":"mutable","name":"value","nameLocation":"30837:5:33","nodeType":"VariableDeclaration","scope":16943,"src":"30822:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16937,"name":"bytes","nodeType":"ElementaryTypeName","src":"30822:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30768:75:33"},"returnParameters":{"id":16942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16941,"mutability":"mutable","name":"json","nameLocation":"30892:4:33","nodeType":"VariableDeclaration","scope":16943,"src":"30878:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16940,"name":"string","nodeType":"ElementaryTypeName","src":"30878:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30877:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16956,"nodeType":"FunctionDefinition","src":"30933:156:33","nodes":[],"documentation":{"id":16944,"nodeType":"StructuredDocumentation","src":"30904:24:33","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"30942:14:33","parameters":{"id":16952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16946,"mutability":"mutable","name":"objectKey","nameLocation":"30973:9:33","nodeType":"VariableDeclaration","scope":16956,"src":"30957:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16945,"name":"string","nodeType":"ElementaryTypeName","src":"30957:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16948,"mutability":"mutable","name":"valueKey","nameLocation":"31000:8:33","nodeType":"VariableDeclaration","scope":16956,"src":"30984:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16947,"name":"string","nodeType":"ElementaryTypeName","src":"30984:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16951,"mutability":"mutable","name":"values","nameLocation":"31027:6:33","nodeType":"VariableDeclaration","scope":16956,"src":"31010:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16949,"name":"bytes","nodeType":"ElementaryTypeName","src":"31010:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16950,"nodeType":"ArrayTypeName","src":"31010:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"30956:78:33"},"returnParameters":{"id":16955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16954,"mutability":"mutable","name":"json","nameLocation":"31083:4:33","nodeType":"VariableDeclaration","scope":16956,"src":"31069:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16953,"name":"string","nodeType":"ElementaryTypeName","src":"31069:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31068:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16968,"nodeType":"FunctionDefinition","src":"31124:143:33","nodes":[],"documentation":{"id":16957,"nodeType":"StructuredDocumentation","src":"31095:24:33","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"31133:12:33","parameters":{"id":16964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16959,"mutability":"mutable","name":"objectKey","nameLocation":"31162:9:33","nodeType":"VariableDeclaration","scope":16968,"src":"31146:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16958,"name":"string","nodeType":"ElementaryTypeName","src":"31146:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16961,"mutability":"mutable","name":"valueKey","nameLocation":"31189:8:33","nodeType":"VariableDeclaration","scope":16968,"src":"31173:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16960,"name":"string","nodeType":"ElementaryTypeName","src":"31173:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16963,"mutability":"mutable","name":"value","nameLocation":"31206:5:33","nodeType":"VariableDeclaration","scope":16968,"src":"31199:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16962,"name":"int256","nodeType":"ElementaryTypeName","src":"31199:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31145:67:33"},"returnParameters":{"id":16967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16966,"mutability":"mutable","name":"json","nameLocation":"31261:4:33","nodeType":"VariableDeclaration","scope":16968,"src":"31247:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16965,"name":"string","nodeType":"ElementaryTypeName","src":"31247:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31246:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16981,"nodeType":"FunctionDefinition","src":"31302:155:33","nodes":[],"documentation":{"id":16969,"nodeType":"StructuredDocumentation","src":"31273:24:33","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"31311:12:33","parameters":{"id":16977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16971,"mutability":"mutable","name":"objectKey","nameLocation":"31340:9:33","nodeType":"VariableDeclaration","scope":16981,"src":"31324:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16970,"name":"string","nodeType":"ElementaryTypeName","src":"31324:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16973,"mutability":"mutable","name":"valueKey","nameLocation":"31367:8:33","nodeType":"VariableDeclaration","scope":16981,"src":"31351:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16972,"name":"string","nodeType":"ElementaryTypeName","src":"31351:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16976,"mutability":"mutable","name":"values","nameLocation":"31395:6:33","nodeType":"VariableDeclaration","scope":16981,"src":"31377:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16974,"name":"int256","nodeType":"ElementaryTypeName","src":"31377:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16975,"nodeType":"ArrayTypeName","src":"31377:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"31323:79:33"},"returnParameters":{"id":16980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16979,"mutability":"mutable","name":"json","nameLocation":"31451:4:33","nodeType":"VariableDeclaration","scope":16981,"src":"31437:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16978,"name":"string","nodeType":"ElementaryTypeName","src":"31437:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31436:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16991,"nodeType":"FunctionDefinition","src":"31654:111:33","nodes":[],"documentation":{"id":16982,"nodeType":"StructuredDocumentation","src":"31463:186:33","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"31663:13:33","parameters":{"id":16987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16984,"mutability":"mutable","name":"objectKey","nameLocation":"31693:9:33","nodeType":"VariableDeclaration","scope":16991,"src":"31677:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16983,"name":"string","nodeType":"ElementaryTypeName","src":"31677:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16986,"mutability":"mutable","name":"value","nameLocation":"31720:5:33","nodeType":"VariableDeclaration","scope":16991,"src":"31704:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16985,"name":"string","nodeType":"ElementaryTypeName","src":"31704:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31676:50:33"},"returnParameters":{"id":16990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16989,"mutability":"mutable","name":"json","nameLocation":"31759:4:33","nodeType":"VariableDeclaration","scope":16991,"src":"31745:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16988,"name":"string","nodeType":"ElementaryTypeName","src":"31745:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31744:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17003,"nodeType":"FunctionDefinition","src":"31800:155:33","nodes":[],"documentation":{"id":16992,"nodeType":"StructuredDocumentation","src":"31771:24:33","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"31809:15:33","parameters":{"id":16999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16994,"mutability":"mutable","name":"objectKey","nameLocation":"31841:9:33","nodeType":"VariableDeclaration","scope":17003,"src":"31825:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16993,"name":"string","nodeType":"ElementaryTypeName","src":"31825:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16996,"mutability":"mutable","name":"valueKey","nameLocation":"31868:8:33","nodeType":"VariableDeclaration","scope":17003,"src":"31852:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16995,"name":"string","nodeType":"ElementaryTypeName","src":"31852:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16998,"mutability":"mutable","name":"value","nameLocation":"31894:5:33","nodeType":"VariableDeclaration","scope":17003,"src":"31878:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16997,"name":"string","nodeType":"ElementaryTypeName","src":"31878:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31824:76:33"},"returnParameters":{"id":17002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17001,"mutability":"mutable","name":"json","nameLocation":"31949:4:33","nodeType":"VariableDeclaration","scope":17003,"src":"31935:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17000,"name":"string","nodeType":"ElementaryTypeName","src":"31935:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31934:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17016,"nodeType":"FunctionDefinition","src":"31990:158:33","nodes":[],"documentation":{"id":17004,"nodeType":"StructuredDocumentation","src":"31961:24:33","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"31999:15:33","parameters":{"id":17012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17006,"mutability":"mutable","name":"objectKey","nameLocation":"32031:9:33","nodeType":"VariableDeclaration","scope":17016,"src":"32015:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17005,"name":"string","nodeType":"ElementaryTypeName","src":"32015:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17008,"mutability":"mutable","name":"valueKey","nameLocation":"32058:8:33","nodeType":"VariableDeclaration","scope":17016,"src":"32042:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17007,"name":"string","nodeType":"ElementaryTypeName","src":"32042:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17011,"mutability":"mutable","name":"values","nameLocation":"32086:6:33","nodeType":"VariableDeclaration","scope":17016,"src":"32068:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17009,"name":"string","nodeType":"ElementaryTypeName","src":"32068:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17010,"nodeType":"ArrayTypeName","src":"32068:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32014:79:33"},"returnParameters":{"id":17015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17014,"mutability":"mutable","name":"json","nameLocation":"32142:4:33","nodeType":"VariableDeclaration","scope":17016,"src":"32128:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17013,"name":"string","nodeType":"ElementaryTypeName","src":"32128:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32127:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17028,"nodeType":"FunctionDefinition","src":"32183:145:33","nodes":[],"documentation":{"id":17017,"nodeType":"StructuredDocumentation","src":"32154:24:33","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"32192:13:33","parameters":{"id":17024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17019,"mutability":"mutable","name":"objectKey","nameLocation":"32222:9:33","nodeType":"VariableDeclaration","scope":17028,"src":"32206:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17018,"name":"string","nodeType":"ElementaryTypeName","src":"32206:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17021,"mutability":"mutable","name":"valueKey","nameLocation":"32249:8:33","nodeType":"VariableDeclaration","scope":17028,"src":"32233:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17020,"name":"string","nodeType":"ElementaryTypeName","src":"32233:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17023,"mutability":"mutable","name":"value","nameLocation":"32267:5:33","nodeType":"VariableDeclaration","scope":17028,"src":"32259:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17022,"name":"uint256","nodeType":"ElementaryTypeName","src":"32259:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32205:68:33"},"returnParameters":{"id":17027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17026,"mutability":"mutable","name":"json","nameLocation":"32322:4:33","nodeType":"VariableDeclaration","scope":17028,"src":"32308:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17025,"name":"string","nodeType":"ElementaryTypeName","src":"32308:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32307:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17041,"nodeType":"FunctionDefinition","src":"32363:157:33","nodes":[],"documentation":{"id":17029,"nodeType":"StructuredDocumentation","src":"32334:24:33","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"32372:13:33","parameters":{"id":17037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17031,"mutability":"mutable","name":"objectKey","nameLocation":"32402:9:33","nodeType":"VariableDeclaration","scope":17041,"src":"32386:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17030,"name":"string","nodeType":"ElementaryTypeName","src":"32386:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17033,"mutability":"mutable","name":"valueKey","nameLocation":"32429:8:33","nodeType":"VariableDeclaration","scope":17041,"src":"32413:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17032,"name":"string","nodeType":"ElementaryTypeName","src":"32413:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17036,"mutability":"mutable","name":"values","nameLocation":"32458:6:33","nodeType":"VariableDeclaration","scope":17041,"src":"32439:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17034,"name":"uint256","nodeType":"ElementaryTypeName","src":"32439:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17035,"nodeType":"ArrayTypeName","src":"32439:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32385:80:33"},"returnParameters":{"id":17040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17039,"mutability":"mutable","name":"json","nameLocation":"32514:4:33","nodeType":"VariableDeclaration","scope":17041,"src":"32500:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17038,"name":"string","nodeType":"ElementaryTypeName","src":"32500:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32499:20:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17049,"nodeType":"FunctionDefinition","src":"32620:72:33","nodes":[],"documentation":{"id":17042,"nodeType":"StructuredDocumentation","src":"32526:89:33","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"32629:9:33","parameters":{"id":17047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17044,"mutability":"mutable","name":"json","nameLocation":"32655:4:33","nodeType":"VariableDeclaration","scope":17049,"src":"32639:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17043,"name":"string","nodeType":"ElementaryTypeName","src":"32639:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17046,"mutability":"mutable","name":"path","nameLocation":"32677:4:33","nodeType":"VariableDeclaration","scope":17049,"src":"32661:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17045,"name":"string","nodeType":"ElementaryTypeName","src":"32661:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32638:44:33"},"returnParameters":{"id":17048,"nodeType":"ParameterList","parameters":[],"src":"32691:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17059,"nodeType":"FunctionDefinition","src":"32918:98:33","nodes":[],"documentation":{"id":17050,"nodeType":"StructuredDocumentation","src":"32698:215:33","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"32927:9:33","parameters":{"id":17057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17052,"mutability":"mutable","name":"json","nameLocation":"32953:4:33","nodeType":"VariableDeclaration","scope":17059,"src":"32937:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17051,"name":"string","nodeType":"ElementaryTypeName","src":"32937:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17054,"mutability":"mutable","name":"path","nameLocation":"32975:4:33","nodeType":"VariableDeclaration","scope":17059,"src":"32959:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17053,"name":"string","nodeType":"ElementaryTypeName","src":"32959:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17056,"mutability":"mutable","name":"valueKey","nameLocation":"32997:8:33","nodeType":"VariableDeclaration","scope":17059,"src":"32981:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17055,"name":"string","nodeType":"ElementaryTypeName","src":"32981:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32936:70:33"},"returnParameters":{"id":17058,"nodeType":"ParameterList","parameters":[],"src":"33015:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17063,"nodeType":"FunctionDefinition","src":"33230:30:33","nodes":[],"documentation":{"id":17060,"nodeType":"StructuredDocumentation","src":"33058:167:33","text":"Using the address that calls the test contract, has the next call (at this call depth only)\n create a transaction that can later be signed and sent onchain."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"33239:9:33","parameters":{"id":17061,"nodeType":"ParameterList","parameters":[],"src":"33248:2:33"},"returnParameters":{"id":17062,"nodeType":"ParameterList","parameters":[],"src":"33259:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17069,"nodeType":"FunctionDefinition","src":"33430:44:33","nodes":[],"documentation":{"id":17064,"nodeType":"StructuredDocumentation","src":"33266:159:33","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"33439:9:33","parameters":{"id":17067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17066,"mutability":"mutable","name":"signer","nameLocation":"33457:6:33","nodeType":"VariableDeclaration","scope":17069,"src":"33449:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17065,"name":"address","nodeType":"ElementaryTypeName","src":"33449:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33448:16:33"},"returnParameters":{"id":17068,"nodeType":"ParameterList","parameters":[],"src":"33473:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17075,"nodeType":"FunctionDefinition","src":"33648:48:33","nodes":[],"documentation":{"id":17070,"nodeType":"StructuredDocumentation","src":"33480:163:33","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"33657:9:33","parameters":{"id":17073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17072,"mutability":"mutable","name":"privateKey","nameLocation":"33675:10:33","nodeType":"VariableDeclaration","scope":17075,"src":"33667:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17071,"name":"uint256","nodeType":"ElementaryTypeName","src":"33667:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33666:20:33"},"returnParameters":{"id":17074,"nodeType":"ParameterList","parameters":[],"src":"33695:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17079,"nodeType":"FunctionDefinition","src":"33880:35:33","nodes":[],"documentation":{"id":17076,"nodeType":"StructuredDocumentation","src":"33702:173:33","text":"Using the address that calls the test contract, has all subsequent calls\n (at this call depth only) create transactions that can later be signed and sent onchain."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"33889:14:33","parameters":{"id":17077,"nodeType":"ParameterList","parameters":[],"src":"33903:2:33"},"returnParameters":{"id":17078,"nodeType":"ParameterList","parameters":[],"src":"33914:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17085,"nodeType":"FunctionDefinition","src":"34077:49:33","nodes":[],"documentation":{"id":17080,"nodeType":"StructuredDocumentation","src":"33921:151:33","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"34086:14:33","parameters":{"id":17083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17082,"mutability":"mutable","name":"signer","nameLocation":"34109:6:33","nodeType":"VariableDeclaration","scope":17085,"src":"34101:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17081,"name":"address","nodeType":"ElementaryTypeName","src":"34101:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34100:16:33"},"returnParameters":{"id":17084,"nodeType":"ParameterList","parameters":[],"src":"34125:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17091,"nodeType":"FunctionDefinition","src":"34292:53:33","nodes":[],"documentation":{"id":17086,"nodeType":"StructuredDocumentation","src":"34132:155:33","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"34301:14:33","parameters":{"id":17089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17088,"mutability":"mutable","name":"privateKey","nameLocation":"34324:10:33","nodeType":"VariableDeclaration","scope":17091,"src":"34316:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17087,"name":"uint256","nodeType":"ElementaryTypeName","src":"34316:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34315:20:33"},"returnParameters":{"id":17090,"nodeType":"ParameterList","parameters":[],"src":"34344:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17095,"nodeType":"FunctionDefinition","src":"34398:34:33","nodes":[],"documentation":{"id":17092,"nodeType":"StructuredDocumentation","src":"34351:42:33","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"34407:13:33","parameters":{"id":17093,"nodeType":"ParameterList","parameters":[],"src":"34420:2:33"},"returnParameters":{"id":17094,"nodeType":"ParameterList","parameters":[],"src":"34431:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17103,"nodeType":"FunctionDefinition","src":"34524:100:33","nodes":[],"documentation":{"id":17096,"nodeType":"StructuredDocumentation","src":"34471:48:33","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"34533:12:33","parameters":{"id":17099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17098,"mutability":"mutable","name":"stringifiedValue","nameLocation":"34562:16:33","nodeType":"VariableDeclaration","scope":17103,"src":"34546:32:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17097,"name":"string","nodeType":"ElementaryTypeName","src":"34546:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34545:34:33"},"returnParameters":{"id":17102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17101,"mutability":"mutable","name":"parsedValue","nameLocation":"34611:11:33","nodeType":"VariableDeclaration","scope":17103,"src":"34603:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17100,"name":"address","nodeType":"ElementaryTypeName","src":"34603:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34602:21:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17111,"nodeType":"FunctionDefinition","src":"34679:94:33","nodes":[],"documentation":{"id":17104,"nodeType":"StructuredDocumentation","src":"34630:44:33","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"34688:9:33","parameters":{"id":17107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17106,"mutability":"mutable","name":"stringifiedValue","nameLocation":"34714:16:33","nodeType":"VariableDeclaration","scope":17111,"src":"34698:32:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17105,"name":"string","nodeType":"ElementaryTypeName","src":"34698:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34697:34:33"},"returnParameters":{"id":17110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17109,"mutability":"mutable","name":"parsedValue","nameLocation":"34760:11:33","nodeType":"VariableDeclaration","scope":17111,"src":"34755:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17108,"name":"bool","nodeType":"ElementaryTypeName","src":"34755:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34754:18:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17119,"nodeType":"FunctionDefinition","src":"34827:103:33","nodes":[],"documentation":{"id":17112,"nodeType":"StructuredDocumentation","src":"34779:43:33","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"34836:10:33","parameters":{"id":17115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17114,"mutability":"mutable","name":"stringifiedValue","nameLocation":"34863:16:33","nodeType":"VariableDeclaration","scope":17119,"src":"34847:32:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17113,"name":"string","nodeType":"ElementaryTypeName","src":"34847:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34846:34:33"},"returnParameters":{"id":17118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17117,"mutability":"mutable","name":"parsedValue","nameLocation":"34917:11:33","nodeType":"VariableDeclaration","scope":17119,"src":"34904:24:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17116,"name":"bytes","nodeType":"ElementaryTypeName","src":"34904:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34903:26:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17127,"nodeType":"FunctionDefinition","src":"34988:100:33","nodes":[],"documentation":{"id":17120,"nodeType":"StructuredDocumentation","src":"34936:47:33","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"34997:12:33","parameters":{"id":17123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17122,"mutability":"mutable","name":"stringifiedValue","nameLocation":"35026:16:33","nodeType":"VariableDeclaration","scope":17127,"src":"35010:32:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17121,"name":"string","nodeType":"ElementaryTypeName","src":"35010:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35009:34:33"},"returnParameters":{"id":17126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17125,"mutability":"mutable","name":"parsedValue","nameLocation":"35075:11:33","nodeType":"VariableDeclaration","scope":17127,"src":"35067:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35067:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"35066:21:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17135,"nodeType":"FunctionDefinition","src":"35145:95:33","nodes":[],"documentation":{"id":17128,"nodeType":"StructuredDocumentation","src":"35094:46:33","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"35154:8:33","parameters":{"id":17131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17130,"mutability":"mutable","name":"stringifiedValue","nameLocation":"35179:16:33","nodeType":"VariableDeclaration","scope":17135,"src":"35163:32:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17129,"name":"string","nodeType":"ElementaryTypeName","src":"35163:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35162:34:33"},"returnParameters":{"id":17134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17133,"mutability":"mutable","name":"parsedValue","nameLocation":"35227:11:33","nodeType":"VariableDeclaration","scope":17135,"src":"35220:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17132,"name":"int256","nodeType":"ElementaryTypeName","src":"35220:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35219:20:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17143,"nodeType":"FunctionDefinition","src":"35298:97:33","nodes":[],"documentation":{"id":17136,"nodeType":"StructuredDocumentation","src":"35246:47:33","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"35307:9:33","parameters":{"id":17139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17138,"mutability":"mutable","name":"stringifiedValue","nameLocation":"35333:16:33","nodeType":"VariableDeclaration","scope":17143,"src":"35317:32:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17137,"name":"string","nodeType":"ElementaryTypeName","src":"35317:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35316:34:33"},"returnParameters":{"id":17142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17141,"mutability":"mutable","name":"parsedValue","nameLocation":"35382:11:33","nodeType":"VariableDeclaration","scope":17143,"src":"35374:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17140,"name":"uint256","nodeType":"ElementaryTypeName","src":"35374:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35373:21:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17155,"nodeType":"FunctionDefinition","src":"35473:151:33","nodes":[],"documentation":{"id":17144,"nodeType":"StructuredDocumentation","src":"35401:67:33","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"35482:7:33","parameters":{"id":17151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17146,"mutability":"mutable","name":"input","nameLocation":"35506:5:33","nodeType":"VariableDeclaration","scope":17155,"src":"35490:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17145,"name":"string","nodeType":"ElementaryTypeName","src":"35490:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17148,"mutability":"mutable","name":"from","nameLocation":"35529:4:33","nodeType":"VariableDeclaration","scope":17155,"src":"35513:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17147,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17150,"mutability":"mutable","name":"to","nameLocation":"35551:2:33","nodeType":"VariableDeclaration","scope":17155,"src":"35535:18:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17149,"name":"string","nodeType":"ElementaryTypeName","src":"35535:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35489:65:33"},"returnParameters":{"id":17154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17153,"mutability":"mutable","name":"output","nameLocation":"35616:6:33","nodeType":"VariableDeclaration","scope":17155,"src":"35602:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17152,"name":"string","nodeType":"ElementaryTypeName","src":"35602:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35601:22:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17166,"nodeType":"FunctionDefinition","src":"35717:113:33","nodes":[],"documentation":{"id":17156,"nodeType":"StructuredDocumentation","src":"35630:82:33","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"35726:5:33","parameters":{"id":17161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17158,"mutability":"mutable","name":"input","nameLocation":"35748:5:33","nodeType":"VariableDeclaration","scope":17166,"src":"35732:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17157,"name":"string","nodeType":"ElementaryTypeName","src":"35732:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17160,"mutability":"mutable","name":"delimiter","nameLocation":"35771:9:33","nodeType":"VariableDeclaration","scope":17166,"src":"35755:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17159,"name":"string","nodeType":"ElementaryTypeName","src":"35755:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35731:50:33"},"returnParameters":{"id":17165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17164,"mutability":"mutable","name":"outputs","nameLocation":"35821:7:33","nodeType":"VariableDeclaration","scope":17166,"src":"35805:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17162,"name":"string","nodeType":"ElementaryTypeName","src":"35805:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17163,"nodeType":"ArrayTypeName","src":"35805:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35804:25:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17174,"nodeType":"FunctionDefinition","src":"35892:89:33","nodes":[],"documentation":{"id":17167,"nodeType":"StructuredDocumentation","src":"35836:51:33","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"35901:11:33","parameters":{"id":17170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17169,"mutability":"mutable","name":"input","nameLocation":"35929:5:33","nodeType":"VariableDeclaration","scope":17174,"src":"35913:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17168,"name":"string","nodeType":"ElementaryTypeName","src":"35913:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35912:23:33"},"returnParameters":{"id":17173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17172,"mutability":"mutable","name":"output","nameLocation":"35973:6:33","nodeType":"VariableDeclaration","scope":17174,"src":"35959:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17171,"name":"string","nodeType":"ElementaryTypeName","src":"35959:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35958:22:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17182,"nodeType":"FunctionDefinition","src":"36035:88:33","nodes":[],"documentation":{"id":17175,"nodeType":"StructuredDocumentation","src":"35987:43:33","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36044:8:33","parameters":{"id":17178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17177,"mutability":"mutable","name":"value","nameLocation":"36061:5:33","nodeType":"VariableDeclaration","scope":17182,"src":"36053:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17176,"name":"address","nodeType":"ElementaryTypeName","src":"36053:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36052:15:33"},"returnParameters":{"id":17181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17180,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36105:16:33","nodeType":"VariableDeclaration","scope":17182,"src":"36091:30:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17179,"name":"string","nodeType":"ElementaryTypeName","src":"36091:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36090:32:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17190,"nodeType":"FunctionDefinition","src":"36177:95:33","nodes":[],"documentation":{"id":17183,"nodeType":"StructuredDocumentation","src":"36129:43:33","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36186:8:33","parameters":{"id":17186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17185,"mutability":"mutable","name":"value","nameLocation":"36210:5:33","nodeType":"VariableDeclaration","scope":17190,"src":"36195:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17184,"name":"bytes","nodeType":"ElementaryTypeName","src":"36195:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36194:22:33"},"returnParameters":{"id":17189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17188,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36254:16:33","nodeType":"VariableDeclaration","scope":17190,"src":"36240:30:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17187,"name":"string","nodeType":"ElementaryTypeName","src":"36240:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36239:32:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17198,"nodeType":"FunctionDefinition","src":"36326:88:33","nodes":[],"documentation":{"id":17191,"nodeType":"StructuredDocumentation","src":"36278:43:33","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36335:8:33","parameters":{"id":17194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17193,"mutability":"mutable","name":"value","nameLocation":"36352:5:33","nodeType":"VariableDeclaration","scope":17198,"src":"36344:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36344:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36343:15:33"},"returnParameters":{"id":17197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17196,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36396:16:33","nodeType":"VariableDeclaration","scope":17198,"src":"36382:30:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17195,"name":"string","nodeType":"ElementaryTypeName","src":"36382:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36381:32:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17206,"nodeType":"FunctionDefinition","src":"36468:85:33","nodes":[],"documentation":{"id":17199,"nodeType":"StructuredDocumentation","src":"36420:43:33","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36477:8:33","parameters":{"id":17202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17201,"mutability":"mutable","name":"value","nameLocation":"36491:5:33","nodeType":"VariableDeclaration","scope":17206,"src":"36486:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17200,"name":"bool","nodeType":"ElementaryTypeName","src":"36486:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36485:12:33"},"returnParameters":{"id":17205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17204,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36535:16:33","nodeType":"VariableDeclaration","scope":17206,"src":"36521:30:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17203,"name":"string","nodeType":"ElementaryTypeName","src":"36521:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36520:32:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17214,"nodeType":"FunctionDefinition","src":"36607:88:33","nodes":[],"documentation":{"id":17207,"nodeType":"StructuredDocumentation","src":"36559:43:33","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36616:8:33","parameters":{"id":17210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17209,"mutability":"mutable","name":"value","nameLocation":"36633:5:33","nodeType":"VariableDeclaration","scope":17214,"src":"36625:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17208,"name":"uint256","nodeType":"ElementaryTypeName","src":"36625:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36624:15:33"},"returnParameters":{"id":17213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17212,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36677:16:33","nodeType":"VariableDeclaration","scope":17214,"src":"36663:30:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17211,"name":"string","nodeType":"ElementaryTypeName","src":"36663:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36662:32:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17222,"nodeType":"FunctionDefinition","src":"36749:87:33","nodes":[],"documentation":{"id":17215,"nodeType":"StructuredDocumentation","src":"36701:43:33","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36758:8:33","parameters":{"id":17218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17217,"mutability":"mutable","name":"value","nameLocation":"36774:5:33","nodeType":"VariableDeclaration","scope":17222,"src":"36767:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17216,"name":"int256","nodeType":"ElementaryTypeName","src":"36767:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36766:14:33"},"returnParameters":{"id":17221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17220,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36818:16:33","nodeType":"VariableDeclaration","scope":17222,"src":"36804:30:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17219,"name":"string","nodeType":"ElementaryTypeName","src":"36804:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36803:32:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17230,"nodeType":"FunctionDefinition","src":"36898:89:33","nodes":[],"documentation":{"id":17223,"nodeType":"StructuredDocumentation","src":"36842:51:33","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"36907:11:33","parameters":{"id":17226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17225,"mutability":"mutable","name":"input","nameLocation":"36935:5:33","nodeType":"VariableDeclaration","scope":17230,"src":"36919:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17224,"name":"string","nodeType":"ElementaryTypeName","src":"36919:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36918:23:33"},"returnParameters":{"id":17229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17228,"mutability":"mutable","name":"output","nameLocation":"36979:6:33","nodeType":"VariableDeclaration","scope":17230,"src":"36965:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17227,"name":"string","nodeType":"ElementaryTypeName","src":"36965:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36964:22:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17238,"nodeType":"FunctionDefinition","src":"37070:82:33","nodes":[],"documentation":{"id":17231,"nodeType":"StructuredDocumentation","src":"36993:72:33","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"37079:4:33","parameters":{"id":17234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17233,"mutability":"mutable","name":"input","nameLocation":"37100:5:33","nodeType":"VariableDeclaration","scope":17238,"src":"37084:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17232,"name":"string","nodeType":"ElementaryTypeName","src":"37084:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37083:23:33"},"returnParameters":{"id":17237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17236,"mutability":"mutable","name":"output","nameLocation":"37144:6:33","nodeType":"VariableDeclaration","scope":17238,"src":"37130:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17235,"name":"string","nodeType":"ElementaryTypeName","src":"37130:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37129:22:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17250,"nodeType":"FunctionDefinition","src":"37347:113:33","nodes":[],"documentation":{"id":17239,"nodeType":"StructuredDocumentation","src":"37192:150:33","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"37356:24:33","parameters":{"id":17248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17241,"mutability":"mutable","name":"left","nameLocation":"37389:4:33","nodeType":"VariableDeclaration","scope":17250,"src":"37381:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17240,"name":"uint256","nodeType":"ElementaryTypeName","src":"37381:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17243,"mutability":"mutable","name":"right","nameLocation":"37403:5:33","nodeType":"VariableDeclaration","scope":17250,"src":"37395:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17242,"name":"uint256","nodeType":"ElementaryTypeName","src":"37395:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17245,"mutability":"mutable","name":"maxDelta","nameLocation":"37418:8:33","nodeType":"VariableDeclaration","scope":17250,"src":"37410:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17244,"name":"uint256","nodeType":"ElementaryTypeName","src":"37410:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17247,"mutability":"mutable","name":"decimals","nameLocation":"37436:8:33","nodeType":"VariableDeclaration","scope":17250,"src":"37428:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17246,"name":"uint256","nodeType":"ElementaryTypeName","src":"37428:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37380:65:33"},"returnParameters":{"id":17249,"nodeType":"ParameterList","parameters":[],"src":"37459:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17264,"nodeType":"FunctionDefinition","src":"37675:182:33","nodes":[],"documentation":{"id":17251,"nodeType":"StructuredDocumentation","src":"37466:204:33","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"37684:24:33","parameters":{"id":17262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17253,"mutability":"mutable","name":"left","nameLocation":"37726:4:33","nodeType":"VariableDeclaration","scope":17264,"src":"37718:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17252,"name":"uint256","nodeType":"ElementaryTypeName","src":"37718:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17255,"mutability":"mutable","name":"right","nameLocation":"37748:5:33","nodeType":"VariableDeclaration","scope":17264,"src":"37740:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17254,"name":"uint256","nodeType":"ElementaryTypeName","src":"37740:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17257,"mutability":"mutable","name":"maxDelta","nameLocation":"37771:8:33","nodeType":"VariableDeclaration","scope":17264,"src":"37763:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17256,"name":"uint256","nodeType":"ElementaryTypeName","src":"37763:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17259,"mutability":"mutable","name":"decimals","nameLocation":"37797:8:33","nodeType":"VariableDeclaration","scope":17264,"src":"37789:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17258,"name":"uint256","nodeType":"ElementaryTypeName","src":"37789:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17261,"mutability":"mutable","name":"error","nameLocation":"37831:5:33","nodeType":"VariableDeclaration","scope":17264,"src":"37815:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17260,"name":"string","nodeType":"ElementaryTypeName","src":"37815:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37708:134:33"},"returnParameters":{"id":17263,"nodeType":"ParameterList","parameters":[],"src":"37856:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17276,"nodeType":"FunctionDefinition","src":"38017:111:33","nodes":[],"documentation":{"id":17265,"nodeType":"StructuredDocumentation","src":"37863:149:33","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"38026:24:33","parameters":{"id":17274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17267,"mutability":"mutable","name":"left","nameLocation":"38058:4:33","nodeType":"VariableDeclaration","scope":17276,"src":"38051:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17266,"name":"int256","nodeType":"ElementaryTypeName","src":"38051:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17269,"mutability":"mutable","name":"right","nameLocation":"38071:5:33","nodeType":"VariableDeclaration","scope":17276,"src":"38064:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17268,"name":"int256","nodeType":"ElementaryTypeName","src":"38064:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17271,"mutability":"mutable","name":"maxDelta","nameLocation":"38086:8:33","nodeType":"VariableDeclaration","scope":17276,"src":"38078:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17270,"name":"uint256","nodeType":"ElementaryTypeName","src":"38078:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17273,"mutability":"mutable","name":"decimals","nameLocation":"38104:8:33","nodeType":"VariableDeclaration","scope":17276,"src":"38096:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17272,"name":"uint256","nodeType":"ElementaryTypeName","src":"38096:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38050:63:33"},"returnParameters":{"id":17275,"nodeType":"ParameterList","parameters":[],"src":"38127:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17290,"nodeType":"FunctionDefinition","src":"38342:180:33","nodes":[],"documentation":{"id":17277,"nodeType":"StructuredDocumentation","src":"38134:203:33","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"38351:24:33","parameters":{"id":17288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17279,"mutability":"mutable","name":"left","nameLocation":"38392:4:33","nodeType":"VariableDeclaration","scope":17290,"src":"38385:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17278,"name":"int256","nodeType":"ElementaryTypeName","src":"38385:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17281,"mutability":"mutable","name":"right","nameLocation":"38413:5:33","nodeType":"VariableDeclaration","scope":17290,"src":"38406:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17280,"name":"int256","nodeType":"ElementaryTypeName","src":"38406:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17283,"mutability":"mutable","name":"maxDelta","nameLocation":"38436:8:33","nodeType":"VariableDeclaration","scope":17290,"src":"38428:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17282,"name":"uint256","nodeType":"ElementaryTypeName","src":"38428:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17285,"mutability":"mutable","name":"decimals","nameLocation":"38462:8:33","nodeType":"VariableDeclaration","scope":17290,"src":"38454:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17284,"name":"uint256","nodeType":"ElementaryTypeName","src":"38454:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17287,"mutability":"mutable","name":"error","nameLocation":"38496:5:33","nodeType":"VariableDeclaration","scope":17290,"src":"38480:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17286,"name":"string","nodeType":"ElementaryTypeName","src":"38480:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38375:132:33"},"returnParameters":{"id":17289,"nodeType":"ParameterList","parameters":[],"src":"38521:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17300,"nodeType":"FunctionDefinition","src":"38626:88:33","nodes":[],"documentation":{"id":17291,"nodeType":"StructuredDocumentation","src":"38528:93:33","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"38635:17:33","parameters":{"id":17298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17293,"mutability":"mutable","name":"left","nameLocation":"38661:4:33","nodeType":"VariableDeclaration","scope":17300,"src":"38653:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17292,"name":"uint256","nodeType":"ElementaryTypeName","src":"38653:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17295,"mutability":"mutable","name":"right","nameLocation":"38675:5:33","nodeType":"VariableDeclaration","scope":17300,"src":"38667:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17294,"name":"uint256","nodeType":"ElementaryTypeName","src":"38667:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17297,"mutability":"mutable","name":"maxDelta","nameLocation":"38690:8:33","nodeType":"VariableDeclaration","scope":17300,"src":"38682:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17296,"name":"uint256","nodeType":"ElementaryTypeName","src":"38682:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38652:47:33"},"returnParameters":{"id":17299,"nodeType":"ParameterList","parameters":[],"src":"38713:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17312,"nodeType":"FunctionDefinition","src":"38880:111:33","nodes":[],"documentation":{"id":17301,"nodeType":"StructuredDocumentation","src":"38720:155:33","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"38889:17:33","parameters":{"id":17310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17303,"mutability":"mutable","name":"left","nameLocation":"38915:4:33","nodeType":"VariableDeclaration","scope":17312,"src":"38907:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17302,"name":"uint256","nodeType":"ElementaryTypeName","src":"38907:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17305,"mutability":"mutable","name":"right","nameLocation":"38929:5:33","nodeType":"VariableDeclaration","scope":17312,"src":"38921:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17304,"name":"uint256","nodeType":"ElementaryTypeName","src":"38921:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17307,"mutability":"mutable","name":"maxDelta","nameLocation":"38944:8:33","nodeType":"VariableDeclaration","scope":17312,"src":"38936:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17306,"name":"uint256","nodeType":"ElementaryTypeName","src":"38936:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17309,"mutability":"mutable","name":"error","nameLocation":"38970:5:33","nodeType":"VariableDeclaration","scope":17312,"src":"38954:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17308,"name":"string","nodeType":"ElementaryTypeName","src":"38954:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38906:70:33"},"returnParameters":{"id":17311,"nodeType":"ParameterList","parameters":[],"src":"38990:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17322,"nodeType":"FunctionDefinition","src":"39094:86:33","nodes":[],"documentation":{"id":17313,"nodeType":"StructuredDocumentation","src":"38997:92:33","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"39103:17:33","parameters":{"id":17320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17315,"mutability":"mutable","name":"left","nameLocation":"39128:4:33","nodeType":"VariableDeclaration","scope":17322,"src":"39121:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17314,"name":"int256","nodeType":"ElementaryTypeName","src":"39121:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17317,"mutability":"mutable","name":"right","nameLocation":"39141:5:33","nodeType":"VariableDeclaration","scope":17322,"src":"39134:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17316,"name":"int256","nodeType":"ElementaryTypeName","src":"39134:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17319,"mutability":"mutable","name":"maxDelta","nameLocation":"39156:8:33","nodeType":"VariableDeclaration","scope":17322,"src":"39148:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17318,"name":"uint256","nodeType":"ElementaryTypeName","src":"39148:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39120:45:33"},"returnParameters":{"id":17321,"nodeType":"ParameterList","parameters":[],"src":"39179:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17334,"nodeType":"FunctionDefinition","src":"39345:109:33","nodes":[],"documentation":{"id":17323,"nodeType":"StructuredDocumentation","src":"39186:154:33","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"39354:17:33","parameters":{"id":17332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17325,"mutability":"mutable","name":"left","nameLocation":"39379:4:33","nodeType":"VariableDeclaration","scope":17334,"src":"39372:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17324,"name":"int256","nodeType":"ElementaryTypeName","src":"39372:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17327,"mutability":"mutable","name":"right","nameLocation":"39392:5:33","nodeType":"VariableDeclaration","scope":17334,"src":"39385:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17326,"name":"int256","nodeType":"ElementaryTypeName","src":"39385:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17329,"mutability":"mutable","name":"maxDelta","nameLocation":"39407:8:33","nodeType":"VariableDeclaration","scope":17334,"src":"39399:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17328,"name":"uint256","nodeType":"ElementaryTypeName","src":"39399:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17331,"mutability":"mutable","name":"error","nameLocation":"39433:5:33","nodeType":"VariableDeclaration","scope":17334,"src":"39417:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17330,"name":"string","nodeType":"ElementaryTypeName","src":"39417:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39371:68:33"},"returnParameters":{"id":17333,"nodeType":"ParameterList","parameters":[],"src":"39453:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17346,"nodeType":"FunctionDefinition","src":"39725:136:33","nodes":[],"documentation":{"id":17335,"nodeType":"StructuredDocumentation","src":"39460:260:33","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"39734:24:33","parameters":{"id":17344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17337,"mutability":"mutable","name":"left","nameLocation":"39767:4:33","nodeType":"VariableDeclaration","scope":17346,"src":"39759:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17336,"name":"uint256","nodeType":"ElementaryTypeName","src":"39759:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17339,"mutability":"mutable","name":"right","nameLocation":"39781:5:33","nodeType":"VariableDeclaration","scope":17346,"src":"39773:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17338,"name":"uint256","nodeType":"ElementaryTypeName","src":"39773:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17341,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"39796:15:33","nodeType":"VariableDeclaration","scope":17346,"src":"39788:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17340,"name":"uint256","nodeType":"ElementaryTypeName","src":"39788:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17343,"mutability":"mutable","name":"decimals","nameLocation":"39821:8:33","nodeType":"VariableDeclaration","scope":17346,"src":"39813:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17342,"name":"uint256","nodeType":"ElementaryTypeName","src":"39813:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39758:72:33"},"returnParameters":{"id":17345,"nodeType":"ParameterList","parameters":[],"src":"39860:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17360,"nodeType":"FunctionDefinition","src":"40186:189:33","nodes":[],"documentation":{"id":17347,"nodeType":"StructuredDocumentation","src":"39867:314:33","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"40195:24:33","parameters":{"id":17358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17349,"mutability":"mutable","name":"left","nameLocation":"40237:4:33","nodeType":"VariableDeclaration","scope":17360,"src":"40229:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17348,"name":"uint256","nodeType":"ElementaryTypeName","src":"40229:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17351,"mutability":"mutable","name":"right","nameLocation":"40259:5:33","nodeType":"VariableDeclaration","scope":17360,"src":"40251:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17350,"name":"uint256","nodeType":"ElementaryTypeName","src":"40251:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17353,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"40282:15:33","nodeType":"VariableDeclaration","scope":17360,"src":"40274:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17352,"name":"uint256","nodeType":"ElementaryTypeName","src":"40274:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17355,"mutability":"mutable","name":"decimals","nameLocation":"40315:8:33","nodeType":"VariableDeclaration","scope":17360,"src":"40307:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17354,"name":"uint256","nodeType":"ElementaryTypeName","src":"40307:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17357,"mutability":"mutable","name":"error","nameLocation":"40349:5:33","nodeType":"VariableDeclaration","scope":17360,"src":"40333:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17356,"name":"string","nodeType":"ElementaryTypeName","src":"40333:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40219:141:33"},"returnParameters":{"id":17359,"nodeType":"ParameterList","parameters":[],"src":"40374:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17372,"nodeType":"FunctionDefinition","src":"40645:134:33","nodes":[],"documentation":{"id":17361,"nodeType":"StructuredDocumentation","src":"40381:259:33","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"40654:24:33","parameters":{"id":17370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17363,"mutability":"mutable","name":"left","nameLocation":"40686:4:33","nodeType":"VariableDeclaration","scope":17372,"src":"40679:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17362,"name":"int256","nodeType":"ElementaryTypeName","src":"40679:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17365,"mutability":"mutable","name":"right","nameLocation":"40699:5:33","nodeType":"VariableDeclaration","scope":17372,"src":"40692:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17364,"name":"int256","nodeType":"ElementaryTypeName","src":"40692:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17367,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"40714:15:33","nodeType":"VariableDeclaration","scope":17372,"src":"40706:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17366,"name":"uint256","nodeType":"ElementaryTypeName","src":"40706:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17369,"mutability":"mutable","name":"decimals","nameLocation":"40739:8:33","nodeType":"VariableDeclaration","scope":17372,"src":"40731:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17368,"name":"uint256","nodeType":"ElementaryTypeName","src":"40731:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40678:70:33"},"returnParameters":{"id":17371,"nodeType":"ParameterList","parameters":[],"src":"40778:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17386,"nodeType":"FunctionDefinition","src":"41103:187:33","nodes":[],"documentation":{"id":17373,"nodeType":"StructuredDocumentation","src":"40785:313:33","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"41112:24:33","parameters":{"id":17384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17375,"mutability":"mutable","name":"left","nameLocation":"41153:4:33","nodeType":"VariableDeclaration","scope":17386,"src":"41146:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17374,"name":"int256","nodeType":"ElementaryTypeName","src":"41146:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17377,"mutability":"mutable","name":"right","nameLocation":"41174:5:33","nodeType":"VariableDeclaration","scope":17386,"src":"41167:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17376,"name":"int256","nodeType":"ElementaryTypeName","src":"41167:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17379,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"41197:15:33","nodeType":"VariableDeclaration","scope":17386,"src":"41189:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17378,"name":"uint256","nodeType":"ElementaryTypeName","src":"41189:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17381,"mutability":"mutable","name":"decimals","nameLocation":"41230:8:33","nodeType":"VariableDeclaration","scope":17386,"src":"41222:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17380,"name":"uint256","nodeType":"ElementaryTypeName","src":"41222:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17383,"mutability":"mutable","name":"error","nameLocation":"41264:5:33","nodeType":"VariableDeclaration","scope":17386,"src":"41248:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17382,"name":"string","nodeType":"ElementaryTypeName","src":"41248:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41136:139:33"},"returnParameters":{"id":17385,"nodeType":"ParameterList","parameters":[],"src":"41289:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17396,"nodeType":"FunctionDefinition","src":"41504:95:33","nodes":[],"documentation":{"id":17387,"nodeType":"StructuredDocumentation","src":"41296:203:33","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"41513:17:33","parameters":{"id":17394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17389,"mutability":"mutable","name":"left","nameLocation":"41539:4:33","nodeType":"VariableDeclaration","scope":17396,"src":"41531:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17388,"name":"uint256","nodeType":"ElementaryTypeName","src":"41531:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17391,"mutability":"mutable","name":"right","nameLocation":"41553:5:33","nodeType":"VariableDeclaration","scope":17396,"src":"41545:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17390,"name":"uint256","nodeType":"ElementaryTypeName","src":"41545:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17393,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"41568:15:33","nodeType":"VariableDeclaration","scope":17396,"src":"41560:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17392,"name":"uint256","nodeType":"ElementaryTypeName","src":"41560:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41530:54:33"},"returnParameters":{"id":17395,"nodeType":"ParameterList","parameters":[],"src":"41598:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17408,"nodeType":"FunctionDefinition","src":"41875:134:33","nodes":[],"documentation":{"id":17397,"nodeType":"StructuredDocumentation","src":"41605:265:33","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"41884:17:33","parameters":{"id":17406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17399,"mutability":"mutable","name":"left","nameLocation":"41910:4:33","nodeType":"VariableDeclaration","scope":17408,"src":"41902:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17398,"name":"uint256","nodeType":"ElementaryTypeName","src":"41902:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17401,"mutability":"mutable","name":"right","nameLocation":"41924:5:33","nodeType":"VariableDeclaration","scope":17408,"src":"41916:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17400,"name":"uint256","nodeType":"ElementaryTypeName","src":"41916:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17403,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"41939:15:33","nodeType":"VariableDeclaration","scope":17408,"src":"41931:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17402,"name":"uint256","nodeType":"ElementaryTypeName","src":"41931:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17405,"mutability":"mutable","name":"error","nameLocation":"41972:5:33","nodeType":"VariableDeclaration","scope":17408,"src":"41956:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17404,"name":"string","nodeType":"ElementaryTypeName","src":"41956:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41901:77:33"},"returnParameters":{"id":17407,"nodeType":"ParameterList","parameters":[],"src":"42008:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17418,"nodeType":"FunctionDefinition","src":"42222:93:33","nodes":[],"documentation":{"id":17409,"nodeType":"StructuredDocumentation","src":"42015:202:33","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"42231:17:33","parameters":{"id":17416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17411,"mutability":"mutable","name":"left","nameLocation":"42256:4:33","nodeType":"VariableDeclaration","scope":17418,"src":"42249:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17410,"name":"int256","nodeType":"ElementaryTypeName","src":"42249:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17413,"mutability":"mutable","name":"right","nameLocation":"42269:5:33","nodeType":"VariableDeclaration","scope":17418,"src":"42262:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17412,"name":"int256","nodeType":"ElementaryTypeName","src":"42262:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17415,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"42284:15:33","nodeType":"VariableDeclaration","scope":17418,"src":"42276:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17414,"name":"uint256","nodeType":"ElementaryTypeName","src":"42276:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42248:52:33"},"returnParameters":{"id":17417,"nodeType":"ParameterList","parameters":[],"src":"42314:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17430,"nodeType":"FunctionDefinition","src":"42590:132:33","nodes":[],"documentation":{"id":17419,"nodeType":"StructuredDocumentation","src":"42321:264:33","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"42599:17:33","parameters":{"id":17428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17421,"mutability":"mutable","name":"left","nameLocation":"42624:4:33","nodeType":"VariableDeclaration","scope":17430,"src":"42617:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17420,"name":"int256","nodeType":"ElementaryTypeName","src":"42617:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17423,"mutability":"mutable","name":"right","nameLocation":"42637:5:33","nodeType":"VariableDeclaration","scope":17430,"src":"42630:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17422,"name":"int256","nodeType":"ElementaryTypeName","src":"42630:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17425,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"42652:15:33","nodeType":"VariableDeclaration","scope":17430,"src":"42644:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17424,"name":"uint256","nodeType":"ElementaryTypeName","src":"42644:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17427,"mutability":"mutable","name":"error","nameLocation":"42685:5:33","nodeType":"VariableDeclaration","scope":17430,"src":"42669:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17426,"name":"string","nodeType":"ElementaryTypeName","src":"42669:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42616:75:33"},"returnParameters":{"id":17429,"nodeType":"ParameterList","parameters":[],"src":"42721:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17440,"nodeType":"FunctionDefinition","src":"42831:86:33","nodes":[],"documentation":{"id":17431,"nodeType":"StructuredDocumentation","src":"42728:98:33","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"42840:15:33","parameters":{"id":17438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17433,"mutability":"mutable","name":"left","nameLocation":"42864:4:33","nodeType":"VariableDeclaration","scope":17440,"src":"42856:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17432,"name":"uint256","nodeType":"ElementaryTypeName","src":"42856:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17435,"mutability":"mutable","name":"right","nameLocation":"42878:5:33","nodeType":"VariableDeclaration","scope":17440,"src":"42870:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17434,"name":"uint256","nodeType":"ElementaryTypeName","src":"42870:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17437,"mutability":"mutable","name":"decimals","nameLocation":"42893:8:33","nodeType":"VariableDeclaration","scope":17440,"src":"42885:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17436,"name":"uint256","nodeType":"ElementaryTypeName","src":"42885:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42855:47:33"},"returnParameters":{"id":17439,"nodeType":"ParameterList","parameters":[],"src":"42916:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17452,"nodeType":"FunctionDefinition","src":"43088:109:33","nodes":[],"documentation":{"id":17441,"nodeType":"StructuredDocumentation","src":"42923:160:33","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"43097:15:33","parameters":{"id":17450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17443,"mutability":"mutable","name":"left","nameLocation":"43121:4:33","nodeType":"VariableDeclaration","scope":17452,"src":"43113:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17442,"name":"uint256","nodeType":"ElementaryTypeName","src":"43113:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17445,"mutability":"mutable","name":"right","nameLocation":"43135:5:33","nodeType":"VariableDeclaration","scope":17452,"src":"43127:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17444,"name":"uint256","nodeType":"ElementaryTypeName","src":"43127:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17447,"mutability":"mutable","name":"decimals","nameLocation":"43150:8:33","nodeType":"VariableDeclaration","scope":17452,"src":"43142:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17446,"name":"uint256","nodeType":"ElementaryTypeName","src":"43142:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17449,"mutability":"mutable","name":"error","nameLocation":"43176:5:33","nodeType":"VariableDeclaration","scope":17452,"src":"43160:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17448,"name":"string","nodeType":"ElementaryTypeName","src":"43160:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43112:70:33"},"returnParameters":{"id":17451,"nodeType":"ParameterList","parameters":[],"src":"43196:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17462,"nodeType":"FunctionDefinition","src":"43305:84:33","nodes":[],"documentation":{"id":17453,"nodeType":"StructuredDocumentation","src":"43203:97:33","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"43314:15:33","parameters":{"id":17460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17455,"mutability":"mutable","name":"left","nameLocation":"43337:4:33","nodeType":"VariableDeclaration","scope":17462,"src":"43330:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17454,"name":"int256","nodeType":"ElementaryTypeName","src":"43330:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17457,"mutability":"mutable","name":"right","nameLocation":"43350:5:33","nodeType":"VariableDeclaration","scope":17462,"src":"43343:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17456,"name":"int256","nodeType":"ElementaryTypeName","src":"43343:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17459,"mutability":"mutable","name":"decimals","nameLocation":"43365:8:33","nodeType":"VariableDeclaration","scope":17462,"src":"43357:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17458,"name":"uint256","nodeType":"ElementaryTypeName","src":"43357:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43329:45:33"},"returnParameters":{"id":17461,"nodeType":"ParameterList","parameters":[],"src":"43388:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17474,"nodeType":"FunctionDefinition","src":"43559:107:33","nodes":[],"documentation":{"id":17463,"nodeType":"StructuredDocumentation","src":"43395:159:33","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"43568:15:33","parameters":{"id":17472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17465,"mutability":"mutable","name":"left","nameLocation":"43591:4:33","nodeType":"VariableDeclaration","scope":17474,"src":"43584:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17464,"name":"int256","nodeType":"ElementaryTypeName","src":"43584:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17467,"mutability":"mutable","name":"right","nameLocation":"43604:5:33","nodeType":"VariableDeclaration","scope":17474,"src":"43597:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17466,"name":"int256","nodeType":"ElementaryTypeName","src":"43597:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17469,"mutability":"mutable","name":"decimals","nameLocation":"43619:8:33","nodeType":"VariableDeclaration","scope":17474,"src":"43611:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17468,"name":"uint256","nodeType":"ElementaryTypeName","src":"43611:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17471,"mutability":"mutable","name":"error","nameLocation":"43645:5:33","nodeType":"VariableDeclaration","scope":17474,"src":"43629:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17470,"name":"string","nodeType":"ElementaryTypeName","src":"43629:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43583:68:33"},"returnParameters":{"id":17473,"nodeType":"ParameterList","parameters":[],"src":"43665:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17482,"nodeType":"FunctionDefinition","src":"43722:55:33","nodes":[],"documentation":{"id":17475,"nodeType":"StructuredDocumentation","src":"43672:45:33","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"43731:8:33","parameters":{"id":17480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17477,"mutability":"mutable","name":"left","nameLocation":"43745:4:33","nodeType":"VariableDeclaration","scope":17482,"src":"43740:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17476,"name":"bool","nodeType":"ElementaryTypeName","src":"43740:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17479,"mutability":"mutable","name":"right","nameLocation":"43756:5:33","nodeType":"VariableDeclaration","scope":17482,"src":"43751:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17478,"name":"bool","nodeType":"ElementaryTypeName","src":"43751:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43739:23:33"},"returnParameters":{"id":17481,"nodeType":"ParameterList","parameters":[],"src":"43776:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17492,"nodeType":"FunctionDefinition","src":"43890:78:33","nodes":[],"documentation":{"id":17483,"nodeType":"StructuredDocumentation","src":"43783:102:33","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"43899:8:33","parameters":{"id":17490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17485,"mutability":"mutable","name":"left","nameLocation":"43913:4:33","nodeType":"VariableDeclaration","scope":17492,"src":"43908:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17484,"name":"bool","nodeType":"ElementaryTypeName","src":"43908:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17487,"mutability":"mutable","name":"right","nameLocation":"43924:5:33","nodeType":"VariableDeclaration","scope":17492,"src":"43919:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17486,"name":"bool","nodeType":"ElementaryTypeName","src":"43919:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17489,"mutability":"mutable","name":"error","nameLocation":"43947:5:33","nodeType":"VariableDeclaration","scope":17492,"src":"43931:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17488,"name":"string","nodeType":"ElementaryTypeName","src":"43931:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43907:46:33"},"returnParameters":{"id":17491,"nodeType":"ParameterList","parameters":[],"src":"43967:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17500,"nodeType":"FunctionDefinition","src":"44026:77:33","nodes":[],"documentation":{"id":17493,"nodeType":"StructuredDocumentation","src":"43974:47:33","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44035:8:33","parameters":{"id":17498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17495,"mutability":"mutable","name":"left","nameLocation":"44060:4:33","nodeType":"VariableDeclaration","scope":17500,"src":"44044:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17494,"name":"string","nodeType":"ElementaryTypeName","src":"44044:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17497,"mutability":"mutable","name":"right","nameLocation":"44082:5:33","nodeType":"VariableDeclaration","scope":17500,"src":"44066:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17496,"name":"string","nodeType":"ElementaryTypeName","src":"44066:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44043:45:33"},"returnParameters":{"id":17499,"nodeType":"ParameterList","parameters":[],"src":"44102:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17510,"nodeType":"FunctionDefinition","src":"44218:100:33","nodes":[],"documentation":{"id":17501,"nodeType":"StructuredDocumentation","src":"44109:104:33","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44227:8:33","parameters":{"id":17508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17503,"mutability":"mutable","name":"left","nameLocation":"44252:4:33","nodeType":"VariableDeclaration","scope":17510,"src":"44236:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17502,"name":"string","nodeType":"ElementaryTypeName","src":"44236:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17505,"mutability":"mutable","name":"right","nameLocation":"44274:5:33","nodeType":"VariableDeclaration","scope":17510,"src":"44258:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17504,"name":"string","nodeType":"ElementaryTypeName","src":"44258:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17507,"mutability":"mutable","name":"error","nameLocation":"44297:5:33","nodeType":"VariableDeclaration","scope":17510,"src":"44281:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17506,"name":"string","nodeType":"ElementaryTypeName","src":"44281:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44235:68:33"},"returnParameters":{"id":17509,"nodeType":"ParameterList","parameters":[],"src":"44317:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17518,"nodeType":"FunctionDefinition","src":"44375:75:33","nodes":[],"documentation":{"id":17511,"nodeType":"StructuredDocumentation","src":"44324:46:33","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44384:8:33","parameters":{"id":17516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17513,"mutability":"mutable","name":"left","nameLocation":"44408:4:33","nodeType":"VariableDeclaration","scope":17518,"src":"44393:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17512,"name":"bytes","nodeType":"ElementaryTypeName","src":"44393:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17515,"mutability":"mutable","name":"right","nameLocation":"44429:5:33","nodeType":"VariableDeclaration","scope":17518,"src":"44414:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17514,"name":"bytes","nodeType":"ElementaryTypeName","src":"44414:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44392:43:33"},"returnParameters":{"id":17517,"nodeType":"ParameterList","parameters":[],"src":"44449:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17528,"nodeType":"FunctionDefinition","src":"44564:98:33","nodes":[],"documentation":{"id":17519,"nodeType":"StructuredDocumentation","src":"44456:103:33","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44573:8:33","parameters":{"id":17526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17521,"mutability":"mutable","name":"left","nameLocation":"44597:4:33","nodeType":"VariableDeclaration","scope":17528,"src":"44582:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17520,"name":"bytes","nodeType":"ElementaryTypeName","src":"44582:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17523,"mutability":"mutable","name":"right","nameLocation":"44618:5:33","nodeType":"VariableDeclaration","scope":17528,"src":"44603:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17522,"name":"bytes","nodeType":"ElementaryTypeName","src":"44603:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17525,"mutability":"mutable","name":"error","nameLocation":"44641:5:33","nodeType":"VariableDeclaration","scope":17528,"src":"44625:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17524,"name":"string","nodeType":"ElementaryTypeName","src":"44625:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44581:66:33"},"returnParameters":{"id":17527,"nodeType":"ParameterList","parameters":[],"src":"44661:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17538,"nodeType":"FunctionDefinition","src":"44728:77:33","nodes":[],"documentation":{"id":17529,"nodeType":"StructuredDocumentation","src":"44668:55:33","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44737:8:33","parameters":{"id":17536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17532,"mutability":"mutable","name":"left","nameLocation":"44762:4:33","nodeType":"VariableDeclaration","scope":17538,"src":"44746:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17530,"name":"bool","nodeType":"ElementaryTypeName","src":"44746:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17531,"nodeType":"ArrayTypeName","src":"44746:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17535,"mutability":"mutable","name":"right","nameLocation":"44784:5:33","nodeType":"VariableDeclaration","scope":17538,"src":"44768:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17533,"name":"bool","nodeType":"ElementaryTypeName","src":"44768:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17534,"nodeType":"ArrayTypeName","src":"44768:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"44745:45:33"},"returnParameters":{"id":17537,"nodeType":"ParameterList","parameters":[],"src":"44804:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17550,"nodeType":"FunctionDefinition","src":"44928:100:33","nodes":[],"documentation":{"id":17539,"nodeType":"StructuredDocumentation","src":"44811:112:33","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44937:8:33","parameters":{"id":17548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17542,"mutability":"mutable","name":"left","nameLocation":"44962:4:33","nodeType":"VariableDeclaration","scope":17550,"src":"44946:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17540,"name":"bool","nodeType":"ElementaryTypeName","src":"44946:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17541,"nodeType":"ArrayTypeName","src":"44946:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17545,"mutability":"mutable","name":"right","nameLocation":"44984:5:33","nodeType":"VariableDeclaration","scope":17550,"src":"44968:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":17543,"name":"bool","nodeType":"ElementaryTypeName","src":"44968:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":17544,"nodeType":"ArrayTypeName","src":"44968:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":17547,"mutability":"mutable","name":"error","nameLocation":"45007:5:33","nodeType":"VariableDeclaration","scope":17550,"src":"44991:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17546,"name":"string","nodeType":"ElementaryTypeName","src":"44991:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44945:68:33"},"returnParameters":{"id":17549,"nodeType":"ParameterList","parameters":[],"src":"45027:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17560,"nodeType":"FunctionDefinition","src":"45096:83:33","nodes":[],"documentation":{"id":17551,"nodeType":"StructuredDocumentation","src":"45034:57:33","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45105:8:33","parameters":{"id":17558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17554,"mutability":"mutable","name":"left","nameLocation":"45133:4:33","nodeType":"VariableDeclaration","scope":17560,"src":"45114:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17552,"name":"uint256","nodeType":"ElementaryTypeName","src":"45114:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17553,"nodeType":"ArrayTypeName","src":"45114:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17557,"mutability":"mutable","name":"right","nameLocation":"45158:5:33","nodeType":"VariableDeclaration","scope":17560,"src":"45139:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17555,"name":"uint256","nodeType":"ElementaryTypeName","src":"45139:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17556,"nodeType":"ArrayTypeName","src":"45139:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"45113:51:33"},"returnParameters":{"id":17559,"nodeType":"ParameterList","parameters":[],"src":"45178:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17572,"nodeType":"FunctionDefinition","src":"45305:106:33","nodes":[],"documentation":{"id":17561,"nodeType":"StructuredDocumentation","src":"45185:115:33","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45314:8:33","parameters":{"id":17570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17564,"mutability":"mutable","name":"left","nameLocation":"45342:4:33","nodeType":"VariableDeclaration","scope":17572,"src":"45323:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17562,"name":"uint256","nodeType":"ElementaryTypeName","src":"45323:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17563,"nodeType":"ArrayTypeName","src":"45323:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17567,"mutability":"mutable","name":"right","nameLocation":"45367:5:33","nodeType":"VariableDeclaration","scope":17572,"src":"45348:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17565,"name":"uint256","nodeType":"ElementaryTypeName","src":"45348:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17566,"nodeType":"ArrayTypeName","src":"45348:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":17569,"mutability":"mutable","name":"error","nameLocation":"45390:5:33","nodeType":"VariableDeclaration","scope":17572,"src":"45374:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17568,"name":"string","nodeType":"ElementaryTypeName","src":"45374:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45322:74:33"},"returnParameters":{"id":17571,"nodeType":"ParameterList","parameters":[],"src":"45410:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17582,"nodeType":"FunctionDefinition","src":"45479:81:33","nodes":[],"documentation":{"id":17573,"nodeType":"StructuredDocumentation","src":"45417:57:33","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45488:8:33","parameters":{"id":17580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17576,"mutability":"mutable","name":"left","nameLocation":"45515:4:33","nodeType":"VariableDeclaration","scope":17582,"src":"45497:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17574,"name":"int256","nodeType":"ElementaryTypeName","src":"45497:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17575,"nodeType":"ArrayTypeName","src":"45497:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17579,"mutability":"mutable","name":"right","nameLocation":"45539:5:33","nodeType":"VariableDeclaration","scope":17582,"src":"45521:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17577,"name":"int256","nodeType":"ElementaryTypeName","src":"45521:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17578,"nodeType":"ArrayTypeName","src":"45521:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"45496:49:33"},"returnParameters":{"id":17581,"nodeType":"ParameterList","parameters":[],"src":"45559:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17594,"nodeType":"FunctionDefinition","src":"45685:104:33","nodes":[],"documentation":{"id":17583,"nodeType":"StructuredDocumentation","src":"45566:114:33","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45694:8:33","parameters":{"id":17592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17586,"mutability":"mutable","name":"left","nameLocation":"45721:4:33","nodeType":"VariableDeclaration","scope":17594,"src":"45703:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17584,"name":"int256","nodeType":"ElementaryTypeName","src":"45703:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17585,"nodeType":"ArrayTypeName","src":"45703:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17589,"mutability":"mutable","name":"right","nameLocation":"45745:5:33","nodeType":"VariableDeclaration","scope":17594,"src":"45727:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":17587,"name":"int256","nodeType":"ElementaryTypeName","src":"45727:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":17588,"nodeType":"ArrayTypeName","src":"45727:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":17591,"mutability":"mutable","name":"error","nameLocation":"45768:5:33","nodeType":"VariableDeclaration","scope":17594,"src":"45752:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17590,"name":"string","nodeType":"ElementaryTypeName","src":"45752:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45702:72:33"},"returnParameters":{"id":17593,"nodeType":"ParameterList","parameters":[],"src":"45788:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17602,"nodeType":"FunctionDefinition","src":"45848:61:33","nodes":[],"documentation":{"id":17595,"nodeType":"StructuredDocumentation","src":"45795:48:33","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45857:8:33","parameters":{"id":17600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17597,"mutability":"mutable","name":"left","nameLocation":"45874:4:33","nodeType":"VariableDeclaration","scope":17602,"src":"45866:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17596,"name":"uint256","nodeType":"ElementaryTypeName","src":"45866:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17599,"mutability":"mutable","name":"right","nameLocation":"45888:5:33","nodeType":"VariableDeclaration","scope":17602,"src":"45880:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17598,"name":"uint256","nodeType":"ElementaryTypeName","src":"45880:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45865:29:33"},"returnParameters":{"id":17601,"nodeType":"ParameterList","parameters":[],"src":"45908:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17612,"nodeType":"FunctionDefinition","src":"45978:83:33","nodes":[],"documentation":{"id":17603,"nodeType":"StructuredDocumentation","src":"45915:58:33","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45987:8:33","parameters":{"id":17610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17606,"mutability":"mutable","name":"left","nameLocation":"46015:4:33","nodeType":"VariableDeclaration","scope":17612,"src":"45996:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17604,"name":"address","nodeType":"ElementaryTypeName","src":"45996:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17605,"nodeType":"ArrayTypeName","src":"45996:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17609,"mutability":"mutable","name":"right","nameLocation":"46040:5:33","nodeType":"VariableDeclaration","scope":17612,"src":"46021:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17607,"name":"address","nodeType":"ElementaryTypeName","src":"46021:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17608,"nodeType":"ArrayTypeName","src":"46021:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"45995:51:33"},"returnParameters":{"id":17611,"nodeType":"ParameterList","parameters":[],"src":"46060:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17624,"nodeType":"FunctionDefinition","src":"46187:106:33","nodes":[],"documentation":{"id":17613,"nodeType":"StructuredDocumentation","src":"46067:115:33","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46196:8:33","parameters":{"id":17622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17616,"mutability":"mutable","name":"left","nameLocation":"46224:4:33","nodeType":"VariableDeclaration","scope":17624,"src":"46205:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17614,"name":"address","nodeType":"ElementaryTypeName","src":"46205:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17615,"nodeType":"ArrayTypeName","src":"46205:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17619,"mutability":"mutable","name":"right","nameLocation":"46249:5:33","nodeType":"VariableDeclaration","scope":17624,"src":"46230:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17617,"name":"address","nodeType":"ElementaryTypeName","src":"46230:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17618,"nodeType":"ArrayTypeName","src":"46230:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":17621,"mutability":"mutable","name":"error","nameLocation":"46272:5:33","nodeType":"VariableDeclaration","scope":17624,"src":"46256:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17620,"name":"string","nodeType":"ElementaryTypeName","src":"46256:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46204:74:33"},"returnParameters":{"id":17623,"nodeType":"ParameterList","parameters":[],"src":"46292:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17634,"nodeType":"FunctionDefinition","src":"46362:83:33","nodes":[],"documentation":{"id":17625,"nodeType":"StructuredDocumentation","src":"46299:58:33","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46371:8:33","parameters":{"id":17632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17628,"mutability":"mutable","name":"left","nameLocation":"46399:4:33","nodeType":"VariableDeclaration","scope":17634,"src":"46380:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46380:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17627,"nodeType":"ArrayTypeName","src":"46380:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17631,"mutability":"mutable","name":"right","nameLocation":"46424:5:33","nodeType":"VariableDeclaration","scope":17634,"src":"46405:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46405:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17630,"nodeType":"ArrayTypeName","src":"46405:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"46379:51:33"},"returnParameters":{"id":17633,"nodeType":"ParameterList","parameters":[],"src":"46444:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17646,"nodeType":"FunctionDefinition","src":"46571:106:33","nodes":[],"documentation":{"id":17635,"nodeType":"StructuredDocumentation","src":"46451:115:33","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46580:8:33","parameters":{"id":17644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17638,"mutability":"mutable","name":"left","nameLocation":"46608:4:33","nodeType":"VariableDeclaration","scope":17646,"src":"46589:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46589:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17637,"nodeType":"ArrayTypeName","src":"46589:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17641,"mutability":"mutable","name":"right","nameLocation":"46633:5:33","nodeType":"VariableDeclaration","scope":17646,"src":"46614:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46614:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17640,"nodeType":"ArrayTypeName","src":"46614:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":17643,"mutability":"mutable","name":"error","nameLocation":"46656:5:33","nodeType":"VariableDeclaration","scope":17646,"src":"46640:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17642,"name":"string","nodeType":"ElementaryTypeName","src":"46640:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46588:74:33"},"returnParameters":{"id":17645,"nodeType":"ParameterList","parameters":[],"src":"46676:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17656,"nodeType":"FunctionDefinition","src":"46745:81:33","nodes":[],"documentation":{"id":17647,"nodeType":"StructuredDocumentation","src":"46683:57:33","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46754:8:33","parameters":{"id":17654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17650,"mutability":"mutable","name":"left","nameLocation":"46781:4:33","nodeType":"VariableDeclaration","scope":17656,"src":"46763:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17648,"name":"string","nodeType":"ElementaryTypeName","src":"46763:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17649,"nodeType":"ArrayTypeName","src":"46763:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17653,"mutability":"mutable","name":"right","nameLocation":"46805:5:33","nodeType":"VariableDeclaration","scope":17656,"src":"46787:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17651,"name":"string","nodeType":"ElementaryTypeName","src":"46787:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17652,"nodeType":"ArrayTypeName","src":"46787:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"46762:49:33"},"returnParameters":{"id":17655,"nodeType":"ParameterList","parameters":[],"src":"46825:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17668,"nodeType":"FunctionDefinition","src":"46951:104:33","nodes":[],"documentation":{"id":17657,"nodeType":"StructuredDocumentation","src":"46832:114:33","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46960:8:33","parameters":{"id":17666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17660,"mutability":"mutable","name":"left","nameLocation":"46987:4:33","nodeType":"VariableDeclaration","scope":17668,"src":"46969:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17658,"name":"string","nodeType":"ElementaryTypeName","src":"46969:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17659,"nodeType":"ArrayTypeName","src":"46969:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17663,"mutability":"mutable","name":"right","nameLocation":"47011:5:33","nodeType":"VariableDeclaration","scope":17668,"src":"46993:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17661,"name":"string","nodeType":"ElementaryTypeName","src":"46993:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17662,"nodeType":"ArrayTypeName","src":"46993:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":17665,"mutability":"mutable","name":"error","nameLocation":"47034:5:33","nodeType":"VariableDeclaration","scope":17668,"src":"47018:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17664,"name":"string","nodeType":"ElementaryTypeName","src":"47018:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46968:72:33"},"returnParameters":{"id":17667,"nodeType":"ParameterList","parameters":[],"src":"47054:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17678,"nodeType":"FunctionDefinition","src":"47122:79:33","nodes":[],"documentation":{"id":17669,"nodeType":"StructuredDocumentation","src":"47061:56:33","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47131:8:33","parameters":{"id":17676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17672,"mutability":"mutable","name":"left","nameLocation":"47157:4:33","nodeType":"VariableDeclaration","scope":17678,"src":"47140:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17670,"name":"bytes","nodeType":"ElementaryTypeName","src":"47140:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17671,"nodeType":"ArrayTypeName","src":"47140:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17675,"mutability":"mutable","name":"right","nameLocation":"47180:5:33","nodeType":"VariableDeclaration","scope":17678,"src":"47163:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17673,"name":"bytes","nodeType":"ElementaryTypeName","src":"47163:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17674,"nodeType":"ArrayTypeName","src":"47163:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"47139:47:33"},"returnParameters":{"id":17677,"nodeType":"ParameterList","parameters":[],"src":"47200:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17690,"nodeType":"FunctionDefinition","src":"47325:102:33","nodes":[],"documentation":{"id":17679,"nodeType":"StructuredDocumentation","src":"47207:113:33","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47334:8:33","parameters":{"id":17688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17682,"mutability":"mutable","name":"left","nameLocation":"47360:4:33","nodeType":"VariableDeclaration","scope":17690,"src":"47343:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17680,"name":"bytes","nodeType":"ElementaryTypeName","src":"47343:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17681,"nodeType":"ArrayTypeName","src":"47343:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17685,"mutability":"mutable","name":"right","nameLocation":"47383:5:33","nodeType":"VariableDeclaration","scope":17690,"src":"47366:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17683,"name":"bytes","nodeType":"ElementaryTypeName","src":"47366:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17684,"nodeType":"ArrayTypeName","src":"47366:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":17687,"mutability":"mutable","name":"error","nameLocation":"47406:5:33","nodeType":"VariableDeclaration","scope":17690,"src":"47390:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17686,"name":"string","nodeType":"ElementaryTypeName","src":"47390:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47342:70:33"},"returnParameters":{"id":17689,"nodeType":"ParameterList","parameters":[],"src":"47426:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17700,"nodeType":"FunctionDefinition","src":"47543:84:33","nodes":[],"documentation":{"id":17691,"nodeType":"StructuredDocumentation","src":"47433:105:33","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47552:8:33","parameters":{"id":17698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17693,"mutability":"mutable","name":"left","nameLocation":"47569:4:33","nodeType":"VariableDeclaration","scope":17700,"src":"47561:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17692,"name":"uint256","nodeType":"ElementaryTypeName","src":"47561:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17695,"mutability":"mutable","name":"right","nameLocation":"47583:5:33","nodeType":"VariableDeclaration","scope":17700,"src":"47575:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17694,"name":"uint256","nodeType":"ElementaryTypeName","src":"47575:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17697,"mutability":"mutable","name":"error","nameLocation":"47606:5:33","nodeType":"VariableDeclaration","scope":17700,"src":"47590:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17696,"name":"string","nodeType":"ElementaryTypeName","src":"47590:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47560:52:33"},"returnParameters":{"id":17699,"nodeType":"ParameterList","parameters":[],"src":"47626:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17708,"nodeType":"FunctionDefinition","src":"47685:59:33","nodes":[],"documentation":{"id":17701,"nodeType":"StructuredDocumentation","src":"47633:47:33","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47694:8:33","parameters":{"id":17706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17703,"mutability":"mutable","name":"left","nameLocation":"47710:4:33","nodeType":"VariableDeclaration","scope":17708,"src":"47703:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17702,"name":"int256","nodeType":"ElementaryTypeName","src":"47703:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17705,"mutability":"mutable","name":"right","nameLocation":"47723:5:33","nodeType":"VariableDeclaration","scope":17708,"src":"47716:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17704,"name":"int256","nodeType":"ElementaryTypeName","src":"47716:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"47702:27:33"},"returnParameters":{"id":17707,"nodeType":"ParameterList","parameters":[],"src":"47743:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17718,"nodeType":"FunctionDefinition","src":"47859:82:33","nodes":[],"documentation":{"id":17709,"nodeType":"StructuredDocumentation","src":"47750:104:33","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47868:8:33","parameters":{"id":17716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17711,"mutability":"mutable","name":"left","nameLocation":"47884:4:33","nodeType":"VariableDeclaration","scope":17718,"src":"47877:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17710,"name":"int256","nodeType":"ElementaryTypeName","src":"47877:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17713,"mutability":"mutable","name":"right","nameLocation":"47897:5:33","nodeType":"VariableDeclaration","scope":17718,"src":"47890:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17712,"name":"int256","nodeType":"ElementaryTypeName","src":"47890:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17715,"mutability":"mutable","name":"error","nameLocation":"47920:5:33","nodeType":"VariableDeclaration","scope":17718,"src":"47904:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17714,"name":"string","nodeType":"ElementaryTypeName","src":"47904:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47876:50:33"},"returnParameters":{"id":17717,"nodeType":"ParameterList","parameters":[],"src":"47940:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17726,"nodeType":"FunctionDefinition","src":"48000:61:33","nodes":[],"documentation":{"id":17719,"nodeType":"StructuredDocumentation","src":"47947:48:33","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48009:8:33","parameters":{"id":17724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17721,"mutability":"mutable","name":"left","nameLocation":"48026:4:33","nodeType":"VariableDeclaration","scope":17726,"src":"48018:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17720,"name":"address","nodeType":"ElementaryTypeName","src":"48018:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17723,"mutability":"mutable","name":"right","nameLocation":"48040:5:33","nodeType":"VariableDeclaration","scope":17726,"src":"48032:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17722,"name":"address","nodeType":"ElementaryTypeName","src":"48032:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"48017:29:33"},"returnParameters":{"id":17725,"nodeType":"ParameterList","parameters":[],"src":"48060:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17736,"nodeType":"FunctionDefinition","src":"48177:84:33","nodes":[],"documentation":{"id":17727,"nodeType":"StructuredDocumentation","src":"48067:105:33","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48186:8:33","parameters":{"id":17734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17729,"mutability":"mutable","name":"left","nameLocation":"48203:4:33","nodeType":"VariableDeclaration","scope":17736,"src":"48195:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17728,"name":"address","nodeType":"ElementaryTypeName","src":"48195:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17731,"mutability":"mutable","name":"right","nameLocation":"48217:5:33","nodeType":"VariableDeclaration","scope":17736,"src":"48209:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17730,"name":"address","nodeType":"ElementaryTypeName","src":"48209:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17733,"mutability":"mutable","name":"error","nameLocation":"48240:5:33","nodeType":"VariableDeclaration","scope":17736,"src":"48224:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17732,"name":"string","nodeType":"ElementaryTypeName","src":"48224:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48194:52:33"},"returnParameters":{"id":17735,"nodeType":"ParameterList","parameters":[],"src":"48260:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17744,"nodeType":"FunctionDefinition","src":"48320:61:33","nodes":[],"documentation":{"id":17737,"nodeType":"StructuredDocumentation","src":"48267:48:33","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48329:8:33","parameters":{"id":17742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17739,"mutability":"mutable","name":"left","nameLocation":"48346:4:33","nodeType":"VariableDeclaration","scope":17744,"src":"48338:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48338:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17741,"mutability":"mutable","name":"right","nameLocation":"48360:5:33","nodeType":"VariableDeclaration","scope":17744,"src":"48352:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48352:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48337:29:33"},"returnParameters":{"id":17743,"nodeType":"ParameterList","parameters":[],"src":"48380:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17754,"nodeType":"FunctionDefinition","src":"48497:84:33","nodes":[],"documentation":{"id":17745,"nodeType":"StructuredDocumentation","src":"48387:105:33","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48506:8:33","parameters":{"id":17752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17747,"mutability":"mutable","name":"left","nameLocation":"48523:4:33","nodeType":"VariableDeclaration","scope":17754,"src":"48515:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48515:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17749,"mutability":"mutable","name":"right","nameLocation":"48537:5:33","nodeType":"VariableDeclaration","scope":17754,"src":"48529:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48529:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17751,"mutability":"mutable","name":"error","nameLocation":"48560:5:33","nodeType":"VariableDeclaration","scope":17754,"src":"48544:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17750,"name":"string","nodeType":"ElementaryTypeName","src":"48544:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48514:52:33"},"returnParameters":{"id":17753,"nodeType":"ParameterList","parameters":[],"src":"48580:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17760,"nodeType":"FunctionDefinition","src":"48638:51:33","nodes":[],"documentation":{"id":17755,"nodeType":"StructuredDocumentation","src":"48587:46:33","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"48647:11:33","parameters":{"id":17758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17757,"mutability":"mutable","name":"condition","nameLocation":"48664:9:33","nodeType":"VariableDeclaration","scope":17760,"src":"48659:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17756,"name":"bool","nodeType":"ElementaryTypeName","src":"48659:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48658:16:33"},"returnParameters":{"id":17759,"nodeType":"ParameterList","parameters":[],"src":"48688:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17768,"nodeType":"FunctionDefinition","src":"48803:74:33","nodes":[],"documentation":{"id":17761,"nodeType":"StructuredDocumentation","src":"48695:103:33","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"48812:11:33","parameters":{"id":17766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17763,"mutability":"mutable","name":"condition","nameLocation":"48829:9:33","nodeType":"VariableDeclaration","scope":17768,"src":"48824:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17762,"name":"bool","nodeType":"ElementaryTypeName","src":"48824:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":17765,"mutability":"mutable","name":"error","nameLocation":"48856:5:33","nodeType":"VariableDeclaration","scope":17768,"src":"48840:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17764,"name":"string","nodeType":"ElementaryTypeName","src":"48840:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48823:39:33"},"returnParameters":{"id":17767,"nodeType":"ParameterList","parameters":[],"src":"48876:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17778,"nodeType":"FunctionDefinition","src":"49038:86:33","nodes":[],"documentation":{"id":17769,"nodeType":"StructuredDocumentation","src":"48883:150:33","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49047:15:33","parameters":{"id":17776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17771,"mutability":"mutable","name":"left","nameLocation":"49071:4:33","nodeType":"VariableDeclaration","scope":17778,"src":"49063:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17770,"name":"uint256","nodeType":"ElementaryTypeName","src":"49063:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17773,"mutability":"mutable","name":"right","nameLocation":"49085:5:33","nodeType":"VariableDeclaration","scope":17778,"src":"49077:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17772,"name":"uint256","nodeType":"ElementaryTypeName","src":"49077:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17775,"mutability":"mutable","name":"decimals","nameLocation":"49100:8:33","nodeType":"VariableDeclaration","scope":17778,"src":"49092:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17774,"name":"uint256","nodeType":"ElementaryTypeName","src":"49092:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49062:47:33"},"returnParameters":{"id":17777,"nodeType":"ParameterList","parameters":[],"src":"49123:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17790,"nodeType":"FunctionDefinition","src":"49339:109:33","nodes":[],"documentation":{"id":17779,"nodeType":"StructuredDocumentation","src":"49130:204:33","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49348:15:33","parameters":{"id":17788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17781,"mutability":"mutable","name":"left","nameLocation":"49372:4:33","nodeType":"VariableDeclaration","scope":17790,"src":"49364:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17780,"name":"uint256","nodeType":"ElementaryTypeName","src":"49364:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17783,"mutability":"mutable","name":"right","nameLocation":"49386:5:33","nodeType":"VariableDeclaration","scope":17790,"src":"49378:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17782,"name":"uint256","nodeType":"ElementaryTypeName","src":"49378:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17785,"mutability":"mutable","name":"decimals","nameLocation":"49401:8:33","nodeType":"VariableDeclaration","scope":17790,"src":"49393:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17784,"name":"uint256","nodeType":"ElementaryTypeName","src":"49393:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17787,"mutability":"mutable","name":"error","nameLocation":"49427:5:33","nodeType":"VariableDeclaration","scope":17790,"src":"49411:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17786,"name":"string","nodeType":"ElementaryTypeName","src":"49411:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49363:70:33"},"returnParameters":{"id":17789,"nodeType":"ParameterList","parameters":[],"src":"49447:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17800,"nodeType":"FunctionDefinition","src":"49608:84:33","nodes":[],"documentation":{"id":17791,"nodeType":"StructuredDocumentation","src":"49454:149:33","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49617:15:33","parameters":{"id":17798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17793,"mutability":"mutable","name":"left","nameLocation":"49640:4:33","nodeType":"VariableDeclaration","scope":17800,"src":"49633:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17792,"name":"int256","nodeType":"ElementaryTypeName","src":"49633:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17795,"mutability":"mutable","name":"right","nameLocation":"49653:5:33","nodeType":"VariableDeclaration","scope":17800,"src":"49646:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17794,"name":"int256","nodeType":"ElementaryTypeName","src":"49646:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17797,"mutability":"mutable","name":"decimals","nameLocation":"49668:8:33","nodeType":"VariableDeclaration","scope":17800,"src":"49660:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17796,"name":"uint256","nodeType":"ElementaryTypeName","src":"49660:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49632:45:33"},"returnParameters":{"id":17799,"nodeType":"ParameterList","parameters":[],"src":"49691:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17812,"nodeType":"FunctionDefinition","src":"49906:107:33","nodes":[],"documentation":{"id":17801,"nodeType":"StructuredDocumentation","src":"49698:203:33","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49915:15:33","parameters":{"id":17810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17803,"mutability":"mutable","name":"left","nameLocation":"49938:4:33","nodeType":"VariableDeclaration","scope":17812,"src":"49931:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17802,"name":"int256","nodeType":"ElementaryTypeName","src":"49931:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17805,"mutability":"mutable","name":"right","nameLocation":"49951:5:33","nodeType":"VariableDeclaration","scope":17812,"src":"49944:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17804,"name":"int256","nodeType":"ElementaryTypeName","src":"49944:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17807,"mutability":"mutable","name":"decimals","nameLocation":"49966:8:33","nodeType":"VariableDeclaration","scope":17812,"src":"49958:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17806,"name":"uint256","nodeType":"ElementaryTypeName","src":"49958:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17809,"mutability":"mutable","name":"error","nameLocation":"49992:5:33","nodeType":"VariableDeclaration","scope":17812,"src":"49976:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17808,"name":"string","nodeType":"ElementaryTypeName","src":"49976:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49930:68:33"},"returnParameters":{"id":17811,"nodeType":"ParameterList","parameters":[],"src":"50012:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17820,"nodeType":"FunctionDefinition","src":"50117:61:33","nodes":[],"documentation":{"id":17813,"nodeType":"StructuredDocumentation","src":"50019:93:33","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50126:8:33","parameters":{"id":17818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17815,"mutability":"mutable","name":"left","nameLocation":"50143:4:33","nodeType":"VariableDeclaration","scope":17820,"src":"50135:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17814,"name":"uint256","nodeType":"ElementaryTypeName","src":"50135:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17817,"mutability":"mutable","name":"right","nameLocation":"50157:5:33","nodeType":"VariableDeclaration","scope":17820,"src":"50149:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17816,"name":"uint256","nodeType":"ElementaryTypeName","src":"50149:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50134:29:33"},"returnParameters":{"id":17819,"nodeType":"ParameterList","parameters":[],"src":"50177:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17830,"nodeType":"FunctionDefinition","src":"50344:84:33","nodes":[],"documentation":{"id":17821,"nodeType":"StructuredDocumentation","src":"50184:155:33","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50353:8:33","parameters":{"id":17828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17823,"mutability":"mutable","name":"left","nameLocation":"50370:4:33","nodeType":"VariableDeclaration","scope":17830,"src":"50362:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17822,"name":"uint256","nodeType":"ElementaryTypeName","src":"50362:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17825,"mutability":"mutable","name":"right","nameLocation":"50384:5:33","nodeType":"VariableDeclaration","scope":17830,"src":"50376:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17824,"name":"uint256","nodeType":"ElementaryTypeName","src":"50376:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17827,"mutability":"mutable","name":"error","nameLocation":"50407:5:33","nodeType":"VariableDeclaration","scope":17830,"src":"50391:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17826,"name":"string","nodeType":"ElementaryTypeName","src":"50391:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50361:52:33"},"returnParameters":{"id":17829,"nodeType":"ParameterList","parameters":[],"src":"50427:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17838,"nodeType":"FunctionDefinition","src":"50531:59:33","nodes":[],"documentation":{"id":17831,"nodeType":"StructuredDocumentation","src":"50434:92:33","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50540:8:33","parameters":{"id":17836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17833,"mutability":"mutable","name":"left","nameLocation":"50556:4:33","nodeType":"VariableDeclaration","scope":17838,"src":"50549:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17832,"name":"int256","nodeType":"ElementaryTypeName","src":"50549:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17835,"mutability":"mutable","name":"right","nameLocation":"50569:5:33","nodeType":"VariableDeclaration","scope":17838,"src":"50562:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17834,"name":"int256","nodeType":"ElementaryTypeName","src":"50562:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"50548:27:33"},"returnParameters":{"id":17837,"nodeType":"ParameterList","parameters":[],"src":"50589:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17848,"nodeType":"FunctionDefinition","src":"50755:82:33","nodes":[],"documentation":{"id":17839,"nodeType":"StructuredDocumentation","src":"50596:154:33","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50764:8:33","parameters":{"id":17846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17841,"mutability":"mutable","name":"left","nameLocation":"50780:4:33","nodeType":"VariableDeclaration","scope":17848,"src":"50773:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17840,"name":"int256","nodeType":"ElementaryTypeName","src":"50773:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17843,"mutability":"mutable","name":"right","nameLocation":"50793:5:33","nodeType":"VariableDeclaration","scope":17848,"src":"50786:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17842,"name":"int256","nodeType":"ElementaryTypeName","src":"50786:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17845,"mutability":"mutable","name":"error","nameLocation":"50816:5:33","nodeType":"VariableDeclaration","scope":17848,"src":"50800:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17844,"name":"string","nodeType":"ElementaryTypeName","src":"50800:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50772:50:33"},"returnParameters":{"id":17847,"nodeType":"ParameterList","parameters":[],"src":"50836:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17858,"nodeType":"FunctionDefinition","src":"50986:86:33","nodes":[],"documentation":{"id":17849,"nodeType":"StructuredDocumentation","src":"50843:138:33","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"50995:15:33","parameters":{"id":17856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17851,"mutability":"mutable","name":"left","nameLocation":"51019:4:33","nodeType":"VariableDeclaration","scope":17858,"src":"51011:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17850,"name":"uint256","nodeType":"ElementaryTypeName","src":"51011:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17853,"mutability":"mutable","name":"right","nameLocation":"51033:5:33","nodeType":"VariableDeclaration","scope":17858,"src":"51025:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17852,"name":"uint256","nodeType":"ElementaryTypeName","src":"51025:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17855,"mutability":"mutable","name":"decimals","nameLocation":"51048:8:33","nodeType":"VariableDeclaration","scope":17858,"src":"51040:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17854,"name":"uint256","nodeType":"ElementaryTypeName","src":"51040:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51010:47:33"},"returnParameters":{"id":17857,"nodeType":"ParameterList","parameters":[],"src":"51071:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17870,"nodeType":"FunctionDefinition","src":"51275:109:33","nodes":[],"documentation":{"id":17859,"nodeType":"StructuredDocumentation","src":"51078:192:33","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"51284:15:33","parameters":{"id":17868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17861,"mutability":"mutable","name":"left","nameLocation":"51308:4:33","nodeType":"VariableDeclaration","scope":17870,"src":"51300:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17860,"name":"uint256","nodeType":"ElementaryTypeName","src":"51300:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17863,"mutability":"mutable","name":"right","nameLocation":"51322:5:33","nodeType":"VariableDeclaration","scope":17870,"src":"51314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17862,"name":"uint256","nodeType":"ElementaryTypeName","src":"51314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17865,"mutability":"mutable","name":"decimals","nameLocation":"51337:8:33","nodeType":"VariableDeclaration","scope":17870,"src":"51329:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17864,"name":"uint256","nodeType":"ElementaryTypeName","src":"51329:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17867,"mutability":"mutable","name":"error","nameLocation":"51363:5:33","nodeType":"VariableDeclaration","scope":17870,"src":"51347:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17866,"name":"string","nodeType":"ElementaryTypeName","src":"51347:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51299:70:33"},"returnParameters":{"id":17869,"nodeType":"ParameterList","parameters":[],"src":"51383:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17880,"nodeType":"FunctionDefinition","src":"51532:84:33","nodes":[],"documentation":{"id":17871,"nodeType":"StructuredDocumentation","src":"51390:137:33","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"51541:15:33","parameters":{"id":17878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17873,"mutability":"mutable","name":"left","nameLocation":"51564:4:33","nodeType":"VariableDeclaration","scope":17880,"src":"51557:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17872,"name":"int256","nodeType":"ElementaryTypeName","src":"51557:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17875,"mutability":"mutable","name":"right","nameLocation":"51577:5:33","nodeType":"VariableDeclaration","scope":17880,"src":"51570:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17874,"name":"int256","nodeType":"ElementaryTypeName","src":"51570:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17877,"mutability":"mutable","name":"decimals","nameLocation":"51592:8:33","nodeType":"VariableDeclaration","scope":17880,"src":"51584:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17876,"name":"uint256","nodeType":"ElementaryTypeName","src":"51584:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51556:45:33"},"returnParameters":{"id":17879,"nodeType":"ParameterList","parameters":[],"src":"51615:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17892,"nodeType":"FunctionDefinition","src":"51818:107:33","nodes":[],"documentation":{"id":17881,"nodeType":"StructuredDocumentation","src":"51622:191:33","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"51827:15:33","parameters":{"id":17890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17883,"mutability":"mutable","name":"left","nameLocation":"51850:4:33","nodeType":"VariableDeclaration","scope":17892,"src":"51843:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17882,"name":"int256","nodeType":"ElementaryTypeName","src":"51843:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17885,"mutability":"mutable","name":"right","nameLocation":"51863:5:33","nodeType":"VariableDeclaration","scope":17892,"src":"51856:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17884,"name":"int256","nodeType":"ElementaryTypeName","src":"51856:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17887,"mutability":"mutable","name":"decimals","nameLocation":"51878:8:33","nodeType":"VariableDeclaration","scope":17892,"src":"51870:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17886,"name":"uint256","nodeType":"ElementaryTypeName","src":"51870:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17889,"mutability":"mutable","name":"error","nameLocation":"51904:5:33","nodeType":"VariableDeclaration","scope":17892,"src":"51888:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17888,"name":"string","nodeType":"ElementaryTypeName","src":"51888:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51842:68:33"},"returnParameters":{"id":17891,"nodeType":"ParameterList","parameters":[],"src":"51924:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17900,"nodeType":"FunctionDefinition","src":"52017:61:33","nodes":[],"documentation":{"id":17893,"nodeType":"StructuredDocumentation","src":"51931:81:33","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52026:8:33","parameters":{"id":17898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17895,"mutability":"mutable","name":"left","nameLocation":"52043:4:33","nodeType":"VariableDeclaration","scope":17900,"src":"52035:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17894,"name":"uint256","nodeType":"ElementaryTypeName","src":"52035:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17897,"mutability":"mutable","name":"right","nameLocation":"52057:5:33","nodeType":"VariableDeclaration","scope":17900,"src":"52049:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17896,"name":"uint256","nodeType":"ElementaryTypeName","src":"52049:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52034:29:33"},"returnParameters":{"id":17899,"nodeType":"ParameterList","parameters":[],"src":"52077:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17910,"nodeType":"FunctionDefinition","src":"52232:84:33","nodes":[],"documentation":{"id":17901,"nodeType":"StructuredDocumentation","src":"52084:143:33","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52241:8:33","parameters":{"id":17908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17903,"mutability":"mutable","name":"left","nameLocation":"52258:4:33","nodeType":"VariableDeclaration","scope":17910,"src":"52250:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17902,"name":"uint256","nodeType":"ElementaryTypeName","src":"52250:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17905,"mutability":"mutable","name":"right","nameLocation":"52272:5:33","nodeType":"VariableDeclaration","scope":17910,"src":"52264:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17904,"name":"uint256","nodeType":"ElementaryTypeName","src":"52264:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17907,"mutability":"mutable","name":"error","nameLocation":"52295:5:33","nodeType":"VariableDeclaration","scope":17910,"src":"52279:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17906,"name":"string","nodeType":"ElementaryTypeName","src":"52279:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52249:52:33"},"returnParameters":{"id":17909,"nodeType":"ParameterList","parameters":[],"src":"52315:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17918,"nodeType":"FunctionDefinition","src":"52407:59:33","nodes":[],"documentation":{"id":17911,"nodeType":"StructuredDocumentation","src":"52322:80:33","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52416:8:33","parameters":{"id":17916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17913,"mutability":"mutable","name":"left","nameLocation":"52432:4:33","nodeType":"VariableDeclaration","scope":17918,"src":"52425:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17912,"name":"int256","nodeType":"ElementaryTypeName","src":"52425:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17915,"mutability":"mutable","name":"right","nameLocation":"52445:5:33","nodeType":"VariableDeclaration","scope":17918,"src":"52438:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17914,"name":"int256","nodeType":"ElementaryTypeName","src":"52438:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52424:27:33"},"returnParameters":{"id":17917,"nodeType":"ParameterList","parameters":[],"src":"52465:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17928,"nodeType":"FunctionDefinition","src":"52619:82:33","nodes":[],"documentation":{"id":17919,"nodeType":"StructuredDocumentation","src":"52472:142:33","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52628:8:33","parameters":{"id":17926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17921,"mutability":"mutable","name":"left","nameLocation":"52644:4:33","nodeType":"VariableDeclaration","scope":17928,"src":"52637:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17920,"name":"int256","nodeType":"ElementaryTypeName","src":"52637:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17923,"mutability":"mutable","name":"right","nameLocation":"52657:5:33","nodeType":"VariableDeclaration","scope":17928,"src":"52650:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17922,"name":"int256","nodeType":"ElementaryTypeName","src":"52650:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17925,"mutability":"mutable","name":"error","nameLocation":"52680:5:33","nodeType":"VariableDeclaration","scope":17928,"src":"52664:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17924,"name":"string","nodeType":"ElementaryTypeName","src":"52664:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52636:50:33"},"returnParameters":{"id":17927,"nodeType":"ParameterList","parameters":[],"src":"52700:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17938,"nodeType":"FunctionDefinition","src":"52859:86:33","nodes":[],"documentation":{"id":17929,"nodeType":"StructuredDocumentation","src":"52707:147:33","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"52868:15:33","parameters":{"id":17936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17931,"mutability":"mutable","name":"left","nameLocation":"52892:4:33","nodeType":"VariableDeclaration","scope":17938,"src":"52884:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17930,"name":"uint256","nodeType":"ElementaryTypeName","src":"52884:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17933,"mutability":"mutable","name":"right","nameLocation":"52906:5:33","nodeType":"VariableDeclaration","scope":17938,"src":"52898:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17932,"name":"uint256","nodeType":"ElementaryTypeName","src":"52898:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17935,"mutability":"mutable","name":"decimals","nameLocation":"52921:8:33","nodeType":"VariableDeclaration","scope":17938,"src":"52913:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17934,"name":"uint256","nodeType":"ElementaryTypeName","src":"52913:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52883:47:33"},"returnParameters":{"id":17937,"nodeType":"ParameterList","parameters":[],"src":"52944:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17950,"nodeType":"FunctionDefinition","src":"53157:109:33","nodes":[],"documentation":{"id":17939,"nodeType":"StructuredDocumentation","src":"52951:201:33","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"53166:15:33","parameters":{"id":17948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17941,"mutability":"mutable","name":"left","nameLocation":"53190:4:33","nodeType":"VariableDeclaration","scope":17950,"src":"53182:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17940,"name":"uint256","nodeType":"ElementaryTypeName","src":"53182:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17943,"mutability":"mutable","name":"right","nameLocation":"53204:5:33","nodeType":"VariableDeclaration","scope":17950,"src":"53196:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17942,"name":"uint256","nodeType":"ElementaryTypeName","src":"53196:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17945,"mutability":"mutable","name":"decimals","nameLocation":"53219:8:33","nodeType":"VariableDeclaration","scope":17950,"src":"53211:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17944,"name":"uint256","nodeType":"ElementaryTypeName","src":"53211:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17947,"mutability":"mutable","name":"error","nameLocation":"53245:5:33","nodeType":"VariableDeclaration","scope":17950,"src":"53229:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17946,"name":"string","nodeType":"ElementaryTypeName","src":"53229:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53181:70:33"},"returnParameters":{"id":17949,"nodeType":"ParameterList","parameters":[],"src":"53265:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17960,"nodeType":"FunctionDefinition","src":"53423:84:33","nodes":[],"documentation":{"id":17951,"nodeType":"StructuredDocumentation","src":"53272:146:33","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"53432:15:33","parameters":{"id":17958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17953,"mutability":"mutable","name":"left","nameLocation":"53455:4:33","nodeType":"VariableDeclaration","scope":17960,"src":"53448:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17952,"name":"int256","nodeType":"ElementaryTypeName","src":"53448:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17955,"mutability":"mutable","name":"right","nameLocation":"53468:5:33","nodeType":"VariableDeclaration","scope":17960,"src":"53461:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17954,"name":"int256","nodeType":"ElementaryTypeName","src":"53461:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17957,"mutability":"mutable","name":"decimals","nameLocation":"53483:8:33","nodeType":"VariableDeclaration","scope":17960,"src":"53475:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17956,"name":"uint256","nodeType":"ElementaryTypeName","src":"53475:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53447:45:33"},"returnParameters":{"id":17959,"nodeType":"ParameterList","parameters":[],"src":"53506:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17972,"nodeType":"FunctionDefinition","src":"53718:107:33","nodes":[],"documentation":{"id":17961,"nodeType":"StructuredDocumentation","src":"53513:200:33","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"53727:15:33","parameters":{"id":17970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17963,"mutability":"mutable","name":"left","nameLocation":"53750:4:33","nodeType":"VariableDeclaration","scope":17972,"src":"53743:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17962,"name":"int256","nodeType":"ElementaryTypeName","src":"53743:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17965,"mutability":"mutable","name":"right","nameLocation":"53763:5:33","nodeType":"VariableDeclaration","scope":17972,"src":"53756:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17964,"name":"int256","nodeType":"ElementaryTypeName","src":"53756:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17967,"mutability":"mutable","name":"decimals","nameLocation":"53778:8:33","nodeType":"VariableDeclaration","scope":17972,"src":"53770:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17966,"name":"uint256","nodeType":"ElementaryTypeName","src":"53770:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17969,"mutability":"mutable","name":"error","nameLocation":"53804:5:33","nodeType":"VariableDeclaration","scope":17972,"src":"53788:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17968,"name":"string","nodeType":"ElementaryTypeName","src":"53788:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53742:68:33"},"returnParameters":{"id":17971,"nodeType":"ParameterList","parameters":[],"src":"53824:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17980,"nodeType":"FunctionDefinition","src":"53926:61:33","nodes":[],"documentation":{"id":17973,"nodeType":"StructuredDocumentation","src":"53831:90:33","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"53935:8:33","parameters":{"id":17978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17975,"mutability":"mutable","name":"left","nameLocation":"53952:4:33","nodeType":"VariableDeclaration","scope":17980,"src":"53944:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17974,"name":"uint256","nodeType":"ElementaryTypeName","src":"53944:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17977,"mutability":"mutable","name":"right","nameLocation":"53966:5:33","nodeType":"VariableDeclaration","scope":17980,"src":"53958:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17976,"name":"uint256","nodeType":"ElementaryTypeName","src":"53958:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53943:29:33"},"returnParameters":{"id":17979,"nodeType":"ParameterList","parameters":[],"src":"53986:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17990,"nodeType":"FunctionDefinition","src":"54150:84:33","nodes":[],"documentation":{"id":17981,"nodeType":"StructuredDocumentation","src":"53993:152:33","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"54159:8:33","parameters":{"id":17988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17983,"mutability":"mutable","name":"left","nameLocation":"54176:4:33","nodeType":"VariableDeclaration","scope":17990,"src":"54168:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17982,"name":"uint256","nodeType":"ElementaryTypeName","src":"54168:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17985,"mutability":"mutable","name":"right","nameLocation":"54190:5:33","nodeType":"VariableDeclaration","scope":17990,"src":"54182:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17984,"name":"uint256","nodeType":"ElementaryTypeName","src":"54182:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17987,"mutability":"mutable","name":"error","nameLocation":"54213:5:33","nodeType":"VariableDeclaration","scope":17990,"src":"54197:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17986,"name":"string","nodeType":"ElementaryTypeName","src":"54197:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54167:52:33"},"returnParameters":{"id":17989,"nodeType":"ParameterList","parameters":[],"src":"54233:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17998,"nodeType":"FunctionDefinition","src":"54334:59:33","nodes":[],"documentation":{"id":17991,"nodeType":"StructuredDocumentation","src":"54240:89:33","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"54343:8:33","parameters":{"id":17996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17993,"mutability":"mutable","name":"left","nameLocation":"54359:4:33","nodeType":"VariableDeclaration","scope":17998,"src":"54352:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17992,"name":"int256","nodeType":"ElementaryTypeName","src":"54352:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17995,"mutability":"mutable","name":"right","nameLocation":"54372:5:33","nodeType":"VariableDeclaration","scope":17998,"src":"54365:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17994,"name":"int256","nodeType":"ElementaryTypeName","src":"54365:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"54351:27:33"},"returnParameters":{"id":17997,"nodeType":"ParameterList","parameters":[],"src":"54392:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18008,"nodeType":"FunctionDefinition","src":"54555:82:33","nodes":[],"documentation":{"id":17999,"nodeType":"StructuredDocumentation","src":"54399:151:33","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"54564:8:33","parameters":{"id":18006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18001,"mutability":"mutable","name":"left","nameLocation":"54580:4:33","nodeType":"VariableDeclaration","scope":18008,"src":"54573:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18000,"name":"int256","nodeType":"ElementaryTypeName","src":"54573:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18003,"mutability":"mutable","name":"right","nameLocation":"54593:5:33","nodeType":"VariableDeclaration","scope":18008,"src":"54586:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18002,"name":"int256","nodeType":"ElementaryTypeName","src":"54586:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18005,"mutability":"mutable","name":"error","nameLocation":"54616:5:33","nodeType":"VariableDeclaration","scope":18008,"src":"54600:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18004,"name":"string","nodeType":"ElementaryTypeName","src":"54600:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54572:50:33"},"returnParameters":{"id":18007,"nodeType":"ParameterList","parameters":[],"src":"54636:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18018,"nodeType":"FunctionDefinition","src":"54783:86:33","nodes":[],"documentation":{"id":18009,"nodeType":"StructuredDocumentation","src":"54643:135:33","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"54792:15:33","parameters":{"id":18016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18011,"mutability":"mutable","name":"left","nameLocation":"54816:4:33","nodeType":"VariableDeclaration","scope":18018,"src":"54808:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18010,"name":"uint256","nodeType":"ElementaryTypeName","src":"54808:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18013,"mutability":"mutable","name":"right","nameLocation":"54830:5:33","nodeType":"VariableDeclaration","scope":18018,"src":"54822:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18012,"name":"uint256","nodeType":"ElementaryTypeName","src":"54822:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18015,"mutability":"mutable","name":"decimals","nameLocation":"54845:8:33","nodeType":"VariableDeclaration","scope":18018,"src":"54837:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18014,"name":"uint256","nodeType":"ElementaryTypeName","src":"54837:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54807:47:33"},"returnParameters":{"id":18017,"nodeType":"ParameterList","parameters":[],"src":"54868:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18030,"nodeType":"FunctionDefinition","src":"55069:109:33","nodes":[],"documentation":{"id":18019,"nodeType":"StructuredDocumentation","src":"54875:189:33","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"55078:15:33","parameters":{"id":18028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18021,"mutability":"mutable","name":"left","nameLocation":"55102:4:33","nodeType":"VariableDeclaration","scope":18030,"src":"55094:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18020,"name":"uint256","nodeType":"ElementaryTypeName","src":"55094:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18023,"mutability":"mutable","name":"right","nameLocation":"55116:5:33","nodeType":"VariableDeclaration","scope":18030,"src":"55108:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18022,"name":"uint256","nodeType":"ElementaryTypeName","src":"55108:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18025,"mutability":"mutable","name":"decimals","nameLocation":"55131:8:33","nodeType":"VariableDeclaration","scope":18030,"src":"55123:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18024,"name":"uint256","nodeType":"ElementaryTypeName","src":"55123:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18027,"mutability":"mutable","name":"error","nameLocation":"55157:5:33","nodeType":"VariableDeclaration","scope":18030,"src":"55141:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18026,"name":"string","nodeType":"ElementaryTypeName","src":"55141:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55093:70:33"},"returnParameters":{"id":18029,"nodeType":"ParameterList","parameters":[],"src":"55177:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18040,"nodeType":"FunctionDefinition","src":"55323:84:33","nodes":[],"documentation":{"id":18031,"nodeType":"StructuredDocumentation","src":"55184:134:33","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"55332:15:33","parameters":{"id":18038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18033,"mutability":"mutable","name":"left","nameLocation":"55355:4:33","nodeType":"VariableDeclaration","scope":18040,"src":"55348:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18032,"name":"int256","nodeType":"ElementaryTypeName","src":"55348:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18035,"mutability":"mutable","name":"right","nameLocation":"55368:5:33","nodeType":"VariableDeclaration","scope":18040,"src":"55361:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18034,"name":"int256","nodeType":"ElementaryTypeName","src":"55361:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18037,"mutability":"mutable","name":"decimals","nameLocation":"55383:8:33","nodeType":"VariableDeclaration","scope":18040,"src":"55375:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18036,"name":"uint256","nodeType":"ElementaryTypeName","src":"55375:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55347:45:33"},"returnParameters":{"id":18039,"nodeType":"ParameterList","parameters":[],"src":"55406:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18052,"nodeType":"FunctionDefinition","src":"55606:107:33","nodes":[],"documentation":{"id":18041,"nodeType":"StructuredDocumentation","src":"55413:188:33","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"55615:15:33","parameters":{"id":18050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18043,"mutability":"mutable","name":"left","nameLocation":"55638:4:33","nodeType":"VariableDeclaration","scope":18052,"src":"55631:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18042,"name":"int256","nodeType":"ElementaryTypeName","src":"55631:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18045,"mutability":"mutable","name":"right","nameLocation":"55651:5:33","nodeType":"VariableDeclaration","scope":18052,"src":"55644:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18044,"name":"int256","nodeType":"ElementaryTypeName","src":"55644:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18047,"mutability":"mutable","name":"decimals","nameLocation":"55666:8:33","nodeType":"VariableDeclaration","scope":18052,"src":"55658:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18046,"name":"uint256","nodeType":"ElementaryTypeName","src":"55658:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18049,"mutability":"mutable","name":"error","nameLocation":"55692:5:33","nodeType":"VariableDeclaration","scope":18052,"src":"55676:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18048,"name":"string","nodeType":"ElementaryTypeName","src":"55676:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55630:68:33"},"returnParameters":{"id":18051,"nodeType":"ParameterList","parameters":[],"src":"55712:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18060,"nodeType":"FunctionDefinition","src":"55802:61:33","nodes":[],"documentation":{"id":18053,"nodeType":"StructuredDocumentation","src":"55719:78:33","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"55811:8:33","parameters":{"id":18058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18055,"mutability":"mutable","name":"left","nameLocation":"55828:4:33","nodeType":"VariableDeclaration","scope":18060,"src":"55820:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18054,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18057,"mutability":"mutable","name":"right","nameLocation":"55842:5:33","nodeType":"VariableDeclaration","scope":18060,"src":"55834:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18056,"name":"uint256","nodeType":"ElementaryTypeName","src":"55834:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55819:29:33"},"returnParameters":{"id":18059,"nodeType":"ParameterList","parameters":[],"src":"55862:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18070,"nodeType":"FunctionDefinition","src":"56014:84:33","nodes":[],"documentation":{"id":18061,"nodeType":"StructuredDocumentation","src":"55869:140:33","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"56023:8:33","parameters":{"id":18068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18063,"mutability":"mutable","name":"left","nameLocation":"56040:4:33","nodeType":"VariableDeclaration","scope":18070,"src":"56032:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18062,"name":"uint256","nodeType":"ElementaryTypeName","src":"56032:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18065,"mutability":"mutable","name":"right","nameLocation":"56054:5:33","nodeType":"VariableDeclaration","scope":18070,"src":"56046:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18064,"name":"uint256","nodeType":"ElementaryTypeName","src":"56046:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18067,"mutability":"mutable","name":"error","nameLocation":"56077:5:33","nodeType":"VariableDeclaration","scope":18070,"src":"56061:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18066,"name":"string","nodeType":"ElementaryTypeName","src":"56061:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56031:52:33"},"returnParameters":{"id":18069,"nodeType":"ParameterList","parameters":[],"src":"56097:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18078,"nodeType":"FunctionDefinition","src":"56186:59:33","nodes":[],"documentation":{"id":18071,"nodeType":"StructuredDocumentation","src":"56104:77:33","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"56195:8:33","parameters":{"id":18076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18073,"mutability":"mutable","name":"left","nameLocation":"56211:4:33","nodeType":"VariableDeclaration","scope":18078,"src":"56204:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18072,"name":"int256","nodeType":"ElementaryTypeName","src":"56204:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18075,"mutability":"mutable","name":"right","nameLocation":"56224:5:33","nodeType":"VariableDeclaration","scope":18078,"src":"56217:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18074,"name":"int256","nodeType":"ElementaryTypeName","src":"56217:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"56203:27:33"},"returnParameters":{"id":18077,"nodeType":"ParameterList","parameters":[],"src":"56244:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18088,"nodeType":"FunctionDefinition","src":"56395:82:33","nodes":[],"documentation":{"id":18079,"nodeType":"StructuredDocumentation","src":"56251:139:33","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"56404:8:33","parameters":{"id":18086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18081,"mutability":"mutable","name":"left","nameLocation":"56420:4:33","nodeType":"VariableDeclaration","scope":18088,"src":"56413:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18080,"name":"int256","nodeType":"ElementaryTypeName","src":"56413:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18083,"mutability":"mutable","name":"right","nameLocation":"56433:5:33","nodeType":"VariableDeclaration","scope":18088,"src":"56426:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18082,"name":"int256","nodeType":"ElementaryTypeName","src":"56426:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18085,"mutability":"mutable","name":"error","nameLocation":"56456:5:33","nodeType":"VariableDeclaration","scope":18088,"src":"56440:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18084,"name":"string","nodeType":"ElementaryTypeName","src":"56440:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56412:50:33"},"returnParameters":{"id":18087,"nodeType":"ParameterList","parameters":[],"src":"56476:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18098,"nodeType":"FunctionDefinition","src":"56590:89:33","nodes":[],"documentation":{"id":18089,"nodeType":"StructuredDocumentation","src":"56483:102:33","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"56599:18:33","parameters":{"id":18096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18091,"mutability":"mutable","name":"left","nameLocation":"56626:4:33","nodeType":"VariableDeclaration","scope":18098,"src":"56618:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18090,"name":"uint256","nodeType":"ElementaryTypeName","src":"56618:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18093,"mutability":"mutable","name":"right","nameLocation":"56640:5:33","nodeType":"VariableDeclaration","scope":18098,"src":"56632:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18092,"name":"uint256","nodeType":"ElementaryTypeName","src":"56632:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18095,"mutability":"mutable","name":"decimals","nameLocation":"56655:8:33","nodeType":"VariableDeclaration","scope":18098,"src":"56647:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18094,"name":"uint256","nodeType":"ElementaryTypeName","src":"56647:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56617:47:33"},"returnParameters":{"id":18097,"nodeType":"ParameterList","parameters":[],"src":"56678:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18110,"nodeType":"FunctionDefinition","src":"56854:112:33","nodes":[],"documentation":{"id":18099,"nodeType":"StructuredDocumentation","src":"56685:164:33","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"56863:18:33","parameters":{"id":18108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18101,"mutability":"mutable","name":"left","nameLocation":"56890:4:33","nodeType":"VariableDeclaration","scope":18110,"src":"56882:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18100,"name":"uint256","nodeType":"ElementaryTypeName","src":"56882:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18103,"mutability":"mutable","name":"right","nameLocation":"56904:5:33","nodeType":"VariableDeclaration","scope":18110,"src":"56896:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18102,"name":"uint256","nodeType":"ElementaryTypeName","src":"56896:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18105,"mutability":"mutable","name":"decimals","nameLocation":"56919:8:33","nodeType":"VariableDeclaration","scope":18110,"src":"56911:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18104,"name":"uint256","nodeType":"ElementaryTypeName","src":"56911:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18107,"mutability":"mutable","name":"error","nameLocation":"56945:5:33","nodeType":"VariableDeclaration","scope":18110,"src":"56929:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18106,"name":"string","nodeType":"ElementaryTypeName","src":"56929:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56881:70:33"},"returnParameters":{"id":18109,"nodeType":"ParameterList","parameters":[],"src":"56965:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18120,"nodeType":"FunctionDefinition","src":"57078:87:33","nodes":[],"documentation":{"id":18111,"nodeType":"StructuredDocumentation","src":"56972:101:33","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"57087:18:33","parameters":{"id":18118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18113,"mutability":"mutable","name":"left","nameLocation":"57113:4:33","nodeType":"VariableDeclaration","scope":18120,"src":"57106:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18112,"name":"int256","nodeType":"ElementaryTypeName","src":"57106:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18115,"mutability":"mutable","name":"right","nameLocation":"57126:5:33","nodeType":"VariableDeclaration","scope":18120,"src":"57119:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18114,"name":"int256","nodeType":"ElementaryTypeName","src":"57119:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18117,"mutability":"mutable","name":"decimals","nameLocation":"57141:8:33","nodeType":"VariableDeclaration","scope":18120,"src":"57133:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18116,"name":"uint256","nodeType":"ElementaryTypeName","src":"57133:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57105:45:33"},"returnParameters":{"id":18119,"nodeType":"ParameterList","parameters":[],"src":"57164:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18132,"nodeType":"FunctionDefinition","src":"57339:110:33","nodes":[],"documentation":{"id":18121,"nodeType":"StructuredDocumentation","src":"57171:163:33","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"57348:18:33","parameters":{"id":18130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18123,"mutability":"mutable","name":"left","nameLocation":"57374:4:33","nodeType":"VariableDeclaration","scope":18132,"src":"57367:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18122,"name":"int256","nodeType":"ElementaryTypeName","src":"57367:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18125,"mutability":"mutable","name":"right","nameLocation":"57387:5:33","nodeType":"VariableDeclaration","scope":18132,"src":"57380:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18124,"name":"int256","nodeType":"ElementaryTypeName","src":"57380:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18127,"mutability":"mutable","name":"decimals","nameLocation":"57402:8:33","nodeType":"VariableDeclaration","scope":18132,"src":"57394:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18126,"name":"uint256","nodeType":"ElementaryTypeName","src":"57394:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18129,"mutability":"mutable","name":"error","nameLocation":"57428:5:33","nodeType":"VariableDeclaration","scope":18132,"src":"57412:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18128,"name":"string","nodeType":"ElementaryTypeName","src":"57412:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57366:68:33"},"returnParameters":{"id":18131,"nodeType":"ParameterList","parameters":[],"src":"57448:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18140,"nodeType":"FunctionDefinition","src":"57509:58:33","nodes":[],"documentation":{"id":18133,"nodeType":"StructuredDocumentation","src":"57455:49:33","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"57518:11:33","parameters":{"id":18138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18135,"mutability":"mutable","name":"left","nameLocation":"57535:4:33","nodeType":"VariableDeclaration","scope":18140,"src":"57530:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18134,"name":"bool","nodeType":"ElementaryTypeName","src":"57530:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18137,"mutability":"mutable","name":"right","nameLocation":"57546:5:33","nodeType":"VariableDeclaration","scope":18140,"src":"57541:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18136,"name":"bool","nodeType":"ElementaryTypeName","src":"57541:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"57529:23:33"},"returnParameters":{"id":18139,"nodeType":"ParameterList","parameters":[],"src":"57566:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18150,"nodeType":"FunctionDefinition","src":"57684:81:33","nodes":[],"documentation":{"id":18141,"nodeType":"StructuredDocumentation","src":"57573:106:33","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"57693:11:33","parameters":{"id":18148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18143,"mutability":"mutable","name":"left","nameLocation":"57710:4:33","nodeType":"VariableDeclaration","scope":18150,"src":"57705:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18142,"name":"bool","nodeType":"ElementaryTypeName","src":"57705:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18145,"mutability":"mutable","name":"right","nameLocation":"57721:5:33","nodeType":"VariableDeclaration","scope":18150,"src":"57716:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18144,"name":"bool","nodeType":"ElementaryTypeName","src":"57716:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18147,"mutability":"mutable","name":"error","nameLocation":"57744:5:33","nodeType":"VariableDeclaration","scope":18150,"src":"57728:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18146,"name":"string","nodeType":"ElementaryTypeName","src":"57728:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57704:46:33"},"returnParameters":{"id":18149,"nodeType":"ParameterList","parameters":[],"src":"57764:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18158,"nodeType":"FunctionDefinition","src":"57827:80:33","nodes":[],"documentation":{"id":18151,"nodeType":"StructuredDocumentation","src":"57771:51:33","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"57836:11:33","parameters":{"id":18156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18153,"mutability":"mutable","name":"left","nameLocation":"57864:4:33","nodeType":"VariableDeclaration","scope":18158,"src":"57848:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18152,"name":"string","nodeType":"ElementaryTypeName","src":"57848:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18155,"mutability":"mutable","name":"right","nameLocation":"57886:5:33","nodeType":"VariableDeclaration","scope":18158,"src":"57870:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18154,"name":"string","nodeType":"ElementaryTypeName","src":"57870:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57847:45:33"},"returnParameters":{"id":18157,"nodeType":"ParameterList","parameters":[],"src":"57906:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18168,"nodeType":"FunctionDefinition","src":"58026:103:33","nodes":[],"documentation":{"id":18159,"nodeType":"StructuredDocumentation","src":"57913:108:33","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58035:11:33","parameters":{"id":18166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18161,"mutability":"mutable","name":"left","nameLocation":"58063:4:33","nodeType":"VariableDeclaration","scope":18168,"src":"58047:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18160,"name":"string","nodeType":"ElementaryTypeName","src":"58047:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18163,"mutability":"mutable","name":"right","nameLocation":"58085:5:33","nodeType":"VariableDeclaration","scope":18168,"src":"58069:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18162,"name":"string","nodeType":"ElementaryTypeName","src":"58069:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18165,"mutability":"mutable","name":"error","nameLocation":"58108:5:33","nodeType":"VariableDeclaration","scope":18168,"src":"58092:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18164,"name":"string","nodeType":"ElementaryTypeName","src":"58092:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58046:68:33"},"returnParameters":{"id":18167,"nodeType":"ParameterList","parameters":[],"src":"58128:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18176,"nodeType":"FunctionDefinition","src":"58190:78:33","nodes":[],"documentation":{"id":18169,"nodeType":"StructuredDocumentation","src":"58135:50:33","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58199:11:33","parameters":{"id":18174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18171,"mutability":"mutable","name":"left","nameLocation":"58226:4:33","nodeType":"VariableDeclaration","scope":18176,"src":"58211:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18170,"name":"bytes","nodeType":"ElementaryTypeName","src":"58211:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18173,"mutability":"mutable","name":"right","nameLocation":"58247:5:33","nodeType":"VariableDeclaration","scope":18176,"src":"58232:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18172,"name":"bytes","nodeType":"ElementaryTypeName","src":"58232:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"58210:43:33"},"returnParameters":{"id":18175,"nodeType":"ParameterList","parameters":[],"src":"58267:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18186,"nodeType":"FunctionDefinition","src":"58386:101:33","nodes":[],"documentation":{"id":18177,"nodeType":"StructuredDocumentation","src":"58274:107:33","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58395:11:33","parameters":{"id":18184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18179,"mutability":"mutable","name":"left","nameLocation":"58422:4:33","nodeType":"VariableDeclaration","scope":18186,"src":"58407:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18178,"name":"bytes","nodeType":"ElementaryTypeName","src":"58407:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18181,"mutability":"mutable","name":"right","nameLocation":"58443:5:33","nodeType":"VariableDeclaration","scope":18186,"src":"58428:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18180,"name":"bytes","nodeType":"ElementaryTypeName","src":"58428:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18183,"mutability":"mutable","name":"error","nameLocation":"58466:5:33","nodeType":"VariableDeclaration","scope":18186,"src":"58450:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18182,"name":"string","nodeType":"ElementaryTypeName","src":"58450:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58406:66:33"},"returnParameters":{"id":18185,"nodeType":"ParameterList","parameters":[],"src":"58486:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18196,"nodeType":"FunctionDefinition","src":"58557:80:33","nodes":[],"documentation":{"id":18187,"nodeType":"StructuredDocumentation","src":"58493:59:33","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58566:11:33","parameters":{"id":18194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18190,"mutability":"mutable","name":"left","nameLocation":"58594:4:33","nodeType":"VariableDeclaration","scope":18196,"src":"58578:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18188,"name":"bool","nodeType":"ElementaryTypeName","src":"58578:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18189,"nodeType":"ArrayTypeName","src":"58578:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18193,"mutability":"mutable","name":"right","nameLocation":"58616:5:33","nodeType":"VariableDeclaration","scope":18196,"src":"58600:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18191,"name":"bool","nodeType":"ElementaryTypeName","src":"58600:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18192,"nodeType":"ArrayTypeName","src":"58600:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"58577:45:33"},"returnParameters":{"id":18195,"nodeType":"ParameterList","parameters":[],"src":"58636:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18208,"nodeType":"FunctionDefinition","src":"58764:103:33","nodes":[],"documentation":{"id":18197,"nodeType":"StructuredDocumentation","src":"58643:116:33","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58773:11:33","parameters":{"id":18206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18200,"mutability":"mutable","name":"left","nameLocation":"58801:4:33","nodeType":"VariableDeclaration","scope":18208,"src":"58785:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18198,"name":"bool","nodeType":"ElementaryTypeName","src":"58785:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18199,"nodeType":"ArrayTypeName","src":"58785:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18203,"mutability":"mutable","name":"right","nameLocation":"58823:5:33","nodeType":"VariableDeclaration","scope":18208,"src":"58807:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18201,"name":"bool","nodeType":"ElementaryTypeName","src":"58807:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18202,"nodeType":"ArrayTypeName","src":"58807:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":18205,"mutability":"mutable","name":"error","nameLocation":"58846:5:33","nodeType":"VariableDeclaration","scope":18208,"src":"58830:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18204,"name":"string","nodeType":"ElementaryTypeName","src":"58830:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58784:68:33"},"returnParameters":{"id":18207,"nodeType":"ParameterList","parameters":[],"src":"58866:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18218,"nodeType":"FunctionDefinition","src":"58940:86:33","nodes":[],"documentation":{"id":18209,"nodeType":"StructuredDocumentation","src":"58873:62:33","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58949:11:33","parameters":{"id":18216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18212,"mutability":"mutable","name":"left","nameLocation":"58980:4:33","nodeType":"VariableDeclaration","scope":18218,"src":"58961:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18210,"name":"uint256","nodeType":"ElementaryTypeName","src":"58961:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18211,"nodeType":"ArrayTypeName","src":"58961:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18215,"mutability":"mutable","name":"right","nameLocation":"59005:5:33","nodeType":"VariableDeclaration","scope":18218,"src":"58986:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18213,"name":"uint256","nodeType":"ElementaryTypeName","src":"58986:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18214,"nodeType":"ArrayTypeName","src":"58986:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"58960:51:33"},"returnParameters":{"id":18217,"nodeType":"ParameterList","parameters":[],"src":"59025:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18230,"nodeType":"FunctionDefinition","src":"59156:109:33","nodes":[],"documentation":{"id":18219,"nodeType":"StructuredDocumentation","src":"59032:119:33","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59165:11:33","parameters":{"id":18228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18222,"mutability":"mutable","name":"left","nameLocation":"59196:4:33","nodeType":"VariableDeclaration","scope":18230,"src":"59177:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18220,"name":"uint256","nodeType":"ElementaryTypeName","src":"59177:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18221,"nodeType":"ArrayTypeName","src":"59177:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18225,"mutability":"mutable","name":"right","nameLocation":"59221:5:33","nodeType":"VariableDeclaration","scope":18230,"src":"59202:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18223,"name":"uint256","nodeType":"ElementaryTypeName","src":"59202:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18224,"nodeType":"ArrayTypeName","src":"59202:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":18227,"mutability":"mutable","name":"error","nameLocation":"59244:5:33","nodeType":"VariableDeclaration","scope":18230,"src":"59228:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18226,"name":"string","nodeType":"ElementaryTypeName","src":"59228:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59176:74:33"},"returnParameters":{"id":18229,"nodeType":"ParameterList","parameters":[],"src":"59264:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18240,"nodeType":"FunctionDefinition","src":"59337:84:33","nodes":[],"documentation":{"id":18231,"nodeType":"StructuredDocumentation","src":"59271:61:33","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59346:11:33","parameters":{"id":18238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18234,"mutability":"mutable","name":"left","nameLocation":"59376:4:33","nodeType":"VariableDeclaration","scope":18240,"src":"59358:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18232,"name":"int256","nodeType":"ElementaryTypeName","src":"59358:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18233,"nodeType":"ArrayTypeName","src":"59358:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18237,"mutability":"mutable","name":"right","nameLocation":"59400:5:33","nodeType":"VariableDeclaration","scope":18240,"src":"59382:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18235,"name":"int256","nodeType":"ElementaryTypeName","src":"59382:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18236,"nodeType":"ArrayTypeName","src":"59382:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"59357:49:33"},"returnParameters":{"id":18239,"nodeType":"ParameterList","parameters":[],"src":"59420:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18252,"nodeType":"FunctionDefinition","src":"59550:107:33","nodes":[],"documentation":{"id":18241,"nodeType":"StructuredDocumentation","src":"59427:118:33","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59559:11:33","parameters":{"id":18250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18244,"mutability":"mutable","name":"left","nameLocation":"59589:4:33","nodeType":"VariableDeclaration","scope":18252,"src":"59571:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18242,"name":"int256","nodeType":"ElementaryTypeName","src":"59571:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18243,"nodeType":"ArrayTypeName","src":"59571:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18247,"mutability":"mutable","name":"right","nameLocation":"59613:5:33","nodeType":"VariableDeclaration","scope":18252,"src":"59595:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18245,"name":"int256","nodeType":"ElementaryTypeName","src":"59595:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18246,"nodeType":"ArrayTypeName","src":"59595:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":18249,"mutability":"mutable","name":"error","nameLocation":"59636:5:33","nodeType":"VariableDeclaration","scope":18252,"src":"59620:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18248,"name":"string","nodeType":"ElementaryTypeName","src":"59620:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59570:72:33"},"returnParameters":{"id":18251,"nodeType":"ParameterList","parameters":[],"src":"59656:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18260,"nodeType":"FunctionDefinition","src":"59720:64:33","nodes":[],"documentation":{"id":18253,"nodeType":"StructuredDocumentation","src":"59663:52:33","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59729:11:33","parameters":{"id":18258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18255,"mutability":"mutable","name":"left","nameLocation":"59749:4:33","nodeType":"VariableDeclaration","scope":18260,"src":"59741:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18254,"name":"uint256","nodeType":"ElementaryTypeName","src":"59741:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18257,"mutability":"mutable","name":"right","nameLocation":"59763:5:33","nodeType":"VariableDeclaration","scope":18260,"src":"59755:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18256,"name":"uint256","nodeType":"ElementaryTypeName","src":"59755:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59740:29:33"},"returnParameters":{"id":18259,"nodeType":"ParameterList","parameters":[],"src":"59783:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18270,"nodeType":"FunctionDefinition","src":"59857:86:33","nodes":[],"documentation":{"id":18261,"nodeType":"StructuredDocumentation","src":"59790:62:33","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59866:11:33","parameters":{"id":18268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18264,"mutability":"mutable","name":"left","nameLocation":"59897:4:33","nodeType":"VariableDeclaration","scope":18270,"src":"59878:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18262,"name":"address","nodeType":"ElementaryTypeName","src":"59878:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18263,"nodeType":"ArrayTypeName","src":"59878:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18267,"mutability":"mutable","name":"right","nameLocation":"59922:5:33","nodeType":"VariableDeclaration","scope":18270,"src":"59903:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18265,"name":"address","nodeType":"ElementaryTypeName","src":"59903:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18266,"nodeType":"ArrayTypeName","src":"59903:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"59877:51:33"},"returnParameters":{"id":18269,"nodeType":"ParameterList","parameters":[],"src":"59942:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18282,"nodeType":"FunctionDefinition","src":"60073:109:33","nodes":[],"documentation":{"id":18271,"nodeType":"StructuredDocumentation","src":"59949:119:33","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60082:11:33","parameters":{"id":18280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18274,"mutability":"mutable","name":"left","nameLocation":"60113:4:33","nodeType":"VariableDeclaration","scope":18282,"src":"60094:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18272,"name":"address","nodeType":"ElementaryTypeName","src":"60094:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18273,"nodeType":"ArrayTypeName","src":"60094:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18277,"mutability":"mutable","name":"right","nameLocation":"60138:5:33","nodeType":"VariableDeclaration","scope":18282,"src":"60119:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18275,"name":"address","nodeType":"ElementaryTypeName","src":"60119:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18276,"nodeType":"ArrayTypeName","src":"60119:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":18279,"mutability":"mutable","name":"error","nameLocation":"60161:5:33","nodeType":"VariableDeclaration","scope":18282,"src":"60145:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18278,"name":"string","nodeType":"ElementaryTypeName","src":"60145:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60093:74:33"},"returnParameters":{"id":18281,"nodeType":"ParameterList","parameters":[],"src":"60181:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18292,"nodeType":"FunctionDefinition","src":"60255:86:33","nodes":[],"documentation":{"id":18283,"nodeType":"StructuredDocumentation","src":"60188:62:33","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60264:11:33","parameters":{"id":18290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18286,"mutability":"mutable","name":"left","nameLocation":"60295:4:33","nodeType":"VariableDeclaration","scope":18292,"src":"60276:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60276:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18285,"nodeType":"ArrayTypeName","src":"60276:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18289,"mutability":"mutable","name":"right","nameLocation":"60320:5:33","nodeType":"VariableDeclaration","scope":18292,"src":"60301:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60301:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18288,"nodeType":"ArrayTypeName","src":"60301:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"60275:51:33"},"returnParameters":{"id":18291,"nodeType":"ParameterList","parameters":[],"src":"60340:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18304,"nodeType":"FunctionDefinition","src":"60471:109:33","nodes":[],"documentation":{"id":18293,"nodeType":"StructuredDocumentation","src":"60347:119:33","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60480:11:33","parameters":{"id":18302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18296,"mutability":"mutable","name":"left","nameLocation":"60511:4:33","nodeType":"VariableDeclaration","scope":18304,"src":"60492:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60492:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18295,"nodeType":"ArrayTypeName","src":"60492:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18299,"mutability":"mutable","name":"right","nameLocation":"60536:5:33","nodeType":"VariableDeclaration","scope":18304,"src":"60517:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60517:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18298,"nodeType":"ArrayTypeName","src":"60517:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":18301,"mutability":"mutable","name":"error","nameLocation":"60559:5:33","nodeType":"VariableDeclaration","scope":18304,"src":"60543:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18300,"name":"string","nodeType":"ElementaryTypeName","src":"60543:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60491:74:33"},"returnParameters":{"id":18303,"nodeType":"ParameterList","parameters":[],"src":"60579:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18314,"nodeType":"FunctionDefinition","src":"60652:84:33","nodes":[],"documentation":{"id":18305,"nodeType":"StructuredDocumentation","src":"60586:61:33","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60661:11:33","parameters":{"id":18312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18308,"mutability":"mutable","name":"left","nameLocation":"60691:4:33","nodeType":"VariableDeclaration","scope":18314,"src":"60673:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18306,"name":"string","nodeType":"ElementaryTypeName","src":"60673:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18307,"nodeType":"ArrayTypeName","src":"60673:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18311,"mutability":"mutable","name":"right","nameLocation":"60715:5:33","nodeType":"VariableDeclaration","scope":18314,"src":"60697:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18309,"name":"string","nodeType":"ElementaryTypeName","src":"60697:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18310,"nodeType":"ArrayTypeName","src":"60697:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"60672:49:33"},"returnParameters":{"id":18313,"nodeType":"ParameterList","parameters":[],"src":"60735:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18326,"nodeType":"FunctionDefinition","src":"60865:107:33","nodes":[],"documentation":{"id":18315,"nodeType":"StructuredDocumentation","src":"60742:118:33","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60874:11:33","parameters":{"id":18324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18318,"mutability":"mutable","name":"left","nameLocation":"60904:4:33","nodeType":"VariableDeclaration","scope":18326,"src":"60886:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18316,"name":"string","nodeType":"ElementaryTypeName","src":"60886:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18317,"nodeType":"ArrayTypeName","src":"60886:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18321,"mutability":"mutable","name":"right","nameLocation":"60928:5:33","nodeType":"VariableDeclaration","scope":18326,"src":"60910:23:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18319,"name":"string","nodeType":"ElementaryTypeName","src":"60910:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18320,"nodeType":"ArrayTypeName","src":"60910:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":18323,"mutability":"mutable","name":"error","nameLocation":"60951:5:33","nodeType":"VariableDeclaration","scope":18326,"src":"60935:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18322,"name":"string","nodeType":"ElementaryTypeName","src":"60935:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60885:72:33"},"returnParameters":{"id":18325,"nodeType":"ParameterList","parameters":[],"src":"60971:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18336,"nodeType":"FunctionDefinition","src":"61043:82:33","nodes":[],"documentation":{"id":18327,"nodeType":"StructuredDocumentation","src":"60978:60:33","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61052:11:33","parameters":{"id":18334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18330,"mutability":"mutable","name":"left","nameLocation":"61081:4:33","nodeType":"VariableDeclaration","scope":18336,"src":"61064:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18328,"name":"bytes","nodeType":"ElementaryTypeName","src":"61064:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18329,"nodeType":"ArrayTypeName","src":"61064:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18333,"mutability":"mutable","name":"right","nameLocation":"61104:5:33","nodeType":"VariableDeclaration","scope":18336,"src":"61087:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18331,"name":"bytes","nodeType":"ElementaryTypeName","src":"61087:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18332,"nodeType":"ArrayTypeName","src":"61087:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"61063:47:33"},"returnParameters":{"id":18335,"nodeType":"ParameterList","parameters":[],"src":"61124:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18348,"nodeType":"FunctionDefinition","src":"61253:105:33","nodes":[],"documentation":{"id":18337,"nodeType":"StructuredDocumentation","src":"61131:117:33","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61262:11:33","parameters":{"id":18346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18340,"mutability":"mutable","name":"left","nameLocation":"61291:4:33","nodeType":"VariableDeclaration","scope":18348,"src":"61274:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18338,"name":"bytes","nodeType":"ElementaryTypeName","src":"61274:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18339,"nodeType":"ArrayTypeName","src":"61274:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18343,"mutability":"mutable","name":"right","nameLocation":"61314:5:33","nodeType":"VariableDeclaration","scope":18348,"src":"61297:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18341,"name":"bytes","nodeType":"ElementaryTypeName","src":"61297:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18342,"nodeType":"ArrayTypeName","src":"61297:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":18345,"mutability":"mutable","name":"error","nameLocation":"61337:5:33","nodeType":"VariableDeclaration","scope":18348,"src":"61321:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18344,"name":"string","nodeType":"ElementaryTypeName","src":"61321:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61273:70:33"},"returnParameters":{"id":18347,"nodeType":"ParameterList","parameters":[],"src":"61357:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18358,"nodeType":"FunctionDefinition","src":"61478:87:33","nodes":[],"documentation":{"id":18349,"nodeType":"StructuredDocumentation","src":"61364:109:33","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61487:11:33","parameters":{"id":18356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18351,"mutability":"mutable","name":"left","nameLocation":"61507:4:33","nodeType":"VariableDeclaration","scope":18358,"src":"61499:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18350,"name":"uint256","nodeType":"ElementaryTypeName","src":"61499:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18353,"mutability":"mutable","name":"right","nameLocation":"61521:5:33","nodeType":"VariableDeclaration","scope":18358,"src":"61513:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18352,"name":"uint256","nodeType":"ElementaryTypeName","src":"61513:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18355,"mutability":"mutable","name":"error","nameLocation":"61544:5:33","nodeType":"VariableDeclaration","scope":18358,"src":"61528:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18354,"name":"string","nodeType":"ElementaryTypeName","src":"61528:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61498:52:33"},"returnParameters":{"id":18357,"nodeType":"ParameterList","parameters":[],"src":"61564:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18366,"nodeType":"FunctionDefinition","src":"61627:62:33","nodes":[],"documentation":{"id":18359,"nodeType":"StructuredDocumentation","src":"61571:51:33","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61636:11:33","parameters":{"id":18364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18361,"mutability":"mutable","name":"left","nameLocation":"61655:4:33","nodeType":"VariableDeclaration","scope":18366,"src":"61648:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18360,"name":"int256","nodeType":"ElementaryTypeName","src":"61648:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18363,"mutability":"mutable","name":"right","nameLocation":"61668:5:33","nodeType":"VariableDeclaration","scope":18366,"src":"61661:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18362,"name":"int256","nodeType":"ElementaryTypeName","src":"61661:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61647:27:33"},"returnParameters":{"id":18365,"nodeType":"ParameterList","parameters":[],"src":"61688:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18376,"nodeType":"FunctionDefinition","src":"61808:85:33","nodes":[],"documentation":{"id":18367,"nodeType":"StructuredDocumentation","src":"61695:108:33","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61817:11:33","parameters":{"id":18374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18369,"mutability":"mutable","name":"left","nameLocation":"61836:4:33","nodeType":"VariableDeclaration","scope":18376,"src":"61829:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18368,"name":"int256","nodeType":"ElementaryTypeName","src":"61829:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18371,"mutability":"mutable","name":"right","nameLocation":"61849:5:33","nodeType":"VariableDeclaration","scope":18376,"src":"61842:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18370,"name":"int256","nodeType":"ElementaryTypeName","src":"61842:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":18373,"mutability":"mutable","name":"error","nameLocation":"61872:5:33","nodeType":"VariableDeclaration","scope":18376,"src":"61856:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18372,"name":"string","nodeType":"ElementaryTypeName","src":"61856:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61828:50:33"},"returnParameters":{"id":18375,"nodeType":"ParameterList","parameters":[],"src":"61892:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18384,"nodeType":"FunctionDefinition","src":"61956:64:33","nodes":[],"documentation":{"id":18377,"nodeType":"StructuredDocumentation","src":"61899:52:33","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61965:11:33","parameters":{"id":18382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18379,"mutability":"mutable","name":"left","nameLocation":"61985:4:33","nodeType":"VariableDeclaration","scope":18384,"src":"61977:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18378,"name":"address","nodeType":"ElementaryTypeName","src":"61977:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18381,"mutability":"mutable","name":"right","nameLocation":"61999:5:33","nodeType":"VariableDeclaration","scope":18384,"src":"61991:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18380,"name":"address","nodeType":"ElementaryTypeName","src":"61991:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"61976:29:33"},"returnParameters":{"id":18383,"nodeType":"ParameterList","parameters":[],"src":"62019:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18394,"nodeType":"FunctionDefinition","src":"62140:87:33","nodes":[],"documentation":{"id":18385,"nodeType":"StructuredDocumentation","src":"62026:109:33","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62149:11:33","parameters":{"id":18392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18387,"mutability":"mutable","name":"left","nameLocation":"62169:4:33","nodeType":"VariableDeclaration","scope":18394,"src":"62161:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18386,"name":"address","nodeType":"ElementaryTypeName","src":"62161:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18389,"mutability":"mutable","name":"right","nameLocation":"62183:5:33","nodeType":"VariableDeclaration","scope":18394,"src":"62175:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18388,"name":"address","nodeType":"ElementaryTypeName","src":"62175:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18391,"mutability":"mutable","name":"error","nameLocation":"62206:5:33","nodeType":"VariableDeclaration","scope":18394,"src":"62190:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18390,"name":"string","nodeType":"ElementaryTypeName","src":"62190:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62160:52:33"},"returnParameters":{"id":18393,"nodeType":"ParameterList","parameters":[],"src":"62226:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18402,"nodeType":"FunctionDefinition","src":"62290:64:33","nodes":[],"documentation":{"id":18395,"nodeType":"StructuredDocumentation","src":"62233:52:33","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62299:11:33","parameters":{"id":18400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18397,"mutability":"mutable","name":"left","nameLocation":"62319:4:33","nodeType":"VariableDeclaration","scope":18402,"src":"62311:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62311:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18399,"mutability":"mutable","name":"right","nameLocation":"62333:5:33","nodeType":"VariableDeclaration","scope":18402,"src":"62325:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62325:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"62310:29:33"},"returnParameters":{"id":18401,"nodeType":"ParameterList","parameters":[],"src":"62353:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18412,"nodeType":"FunctionDefinition","src":"62474:87:33","nodes":[],"documentation":{"id":18403,"nodeType":"StructuredDocumentation","src":"62360:109:33","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62483:11:33","parameters":{"id":18410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18405,"mutability":"mutable","name":"left","nameLocation":"62503:4:33","nodeType":"VariableDeclaration","scope":18412,"src":"62495:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62495:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18407,"mutability":"mutable","name":"right","nameLocation":"62517:5:33","nodeType":"VariableDeclaration","scope":18412,"src":"62509:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62509:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18409,"mutability":"mutable","name":"error","nameLocation":"62540:5:33","nodeType":"VariableDeclaration","scope":18412,"src":"62524:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18408,"name":"string","nodeType":"ElementaryTypeName","src":"62524:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62494:52:33"},"returnParameters":{"id":18411,"nodeType":"ParameterList","parameters":[],"src":"62560:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18418,"nodeType":"FunctionDefinition","src":"62617:50:33","nodes":[],"documentation":{"id":18413,"nodeType":"StructuredDocumentation","src":"62567:45:33","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"62626:10:33","parameters":{"id":18416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18415,"mutability":"mutable","name":"condition","nameLocation":"62642:9:33","nodeType":"VariableDeclaration","scope":18418,"src":"62637:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18414,"name":"bool","nodeType":"ElementaryTypeName","src":"62637:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62636:16:33"},"returnParameters":{"id":18417,"nodeType":"ParameterList","parameters":[],"src":"62666:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18426,"nodeType":"FunctionDefinition","src":"62780:73:33","nodes":[],"documentation":{"id":18419,"nodeType":"StructuredDocumentation","src":"62673:102:33","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"62789:10:33","parameters":{"id":18424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18421,"mutability":"mutable","name":"condition","nameLocation":"62805:9:33","nodeType":"VariableDeclaration","scope":18426,"src":"62800:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18420,"name":"bool","nodeType":"ElementaryTypeName","src":"62800:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18423,"mutability":"mutable","name":"error","nameLocation":"62832:5:33","nodeType":"VariableDeclaration","scope":18426,"src":"62816:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18422,"name":"string","nodeType":"ElementaryTypeName","src":"62816:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62799:39:33"},"returnParameters":{"id":18425,"nodeType":"ParameterList","parameters":[],"src":"62852:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18432,"nodeType":"FunctionDefinition","src":"62948:46:33","nodes":[],"documentation":{"id":18427,"nodeType":"StructuredDocumentation","src":"62859:84:33","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"62957:6:33","parameters":{"id":18430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18429,"mutability":"mutable","name":"condition","nameLocation":"62969:9:33","nodeType":"VariableDeclaration","scope":18432,"src":"62964:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18428,"name":"bool","nodeType":"ElementaryTypeName","src":"62964:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62963:16:33"},"returnParameters":{"id":18431,"nodeType":"ParameterList","parameters":[],"src":"62993:0:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18438,"nodeType":"FunctionDefinition","src":"63056:51:33","nodes":[],"documentation":{"id":18433,"nodeType":"StructuredDocumentation","src":"63000:51:33","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"63065:10:33","parameters":{"id":18436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18435,"mutability":"mutable","name":"char","nameLocation":"63092:4:33","nodeType":"VariableDeclaration","scope":18438,"src":"63076:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18434,"name":"string","nodeType":"ElementaryTypeName","src":"63076:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63075:22:33"},"returnParameters":{"id":18437,"nodeType":"ParameterList","parameters":[],"src":"63106:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18446,"nodeType":"FunctionDefinition","src":"63181:63:33","nodes":[],"documentation":{"id":18439,"nodeType":"StructuredDocumentation","src":"63113:63:33","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"63190:10:33","parameters":{"id":18444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18441,"mutability":"mutable","name":"char","nameLocation":"63217:4:33","nodeType":"VariableDeclaration","scope":18446,"src":"63201:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18440,"name":"string","nodeType":"ElementaryTypeName","src":"63201:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18443,"mutability":"mutable","name":"value","nameLocation":"63228:5:33","nodeType":"VariableDeclaration","scope":18446,"src":"63223:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18442,"name":"bool","nodeType":"ElementaryTypeName","src":"63223:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63200:34:33"},"returnParameters":{"id":18445,"nodeType":"ParameterList","parameters":[],"src":"63243:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18454,"nodeType":"FunctionDefinition","src":"63299:85:33","nodes":[],"documentation":{"id":18447,"nodeType":"StructuredDocumentation","src":"63250:44:33","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"63308:6:33","parameters":{"id":18450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18449,"mutability":"mutable","name":"rpcAlias","nameLocation":"63331:8:33","nodeType":"VariableDeclaration","scope":18454,"src":"63315:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18448,"name":"string","nodeType":"ElementaryTypeName","src":"63315:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63314:26:33"},"returnParameters":{"id":18453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18452,"mutability":"mutable","name":"json","nameLocation":"63378:4:33","nodeType":"VariableDeclaration","scope":18454,"src":"63364:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18451,"name":"string","nodeType":"ElementaryTypeName","src":"63364:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63363:20:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18462,"nodeType":"FunctionDefinition","src":"63449:67:33","nodes":[],"documentation":{"id":18455,"nodeType":"StructuredDocumentation","src":"63390:54:33","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"63458:13:33","parameters":{"id":18456,"nodeType":"ParameterList","parameters":[],"src":"63471:2:33"},"returnParameters":{"id":18461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18460,"mutability":"mutable","name":"urls","nameLocation":"63510:4:33","nodeType":"VariableDeclaration","scope":18462,"src":"63497:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$15847_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":18458,"nodeType":"UserDefinedTypeName","pathNode":{"id":18457,"name":"Rpc","nameLocations":["63497:3:33"],"nodeType":"IdentifierPath","referencedDeclaration":15847,"src":"63497:3:33"},"referencedDeclaration":15847,"src":"63497:3:33","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$15847_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":18459,"nodeType":"ArrayTypeName","src":"63497:5:33","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$15847_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"63496:19:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18471,"nodeType":"FunctionDefinition","src":"63587:67:33","nodes":[],"documentation":{"id":18463,"nodeType":"StructuredDocumentation","src":"63522:60:33","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"63596:7:33","parameters":{"id":18464,"nodeType":"ParameterList","parameters":[],"src":"63603:2:33"},"returnParameters":{"id":18470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18469,"mutability":"mutable","name":"urls","nameLocation":"63648:4:33","nodeType":"VariableDeclaration","scope":18471,"src":"63629:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":18465,"name":"string","nodeType":"ElementaryTypeName","src":"63629:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18467,"length":{"hexValue":"32","id":18466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63636:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"63629:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":18468,"nodeType":"ArrayTypeName","src":"63629:11:33","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"63628:25:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18477,"nodeType":"FunctionDefinition","src":"63735:42:33","nodes":[],"documentation":{"id":18472,"nodeType":"StructuredDocumentation","src":"63660:70:33","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"63744:5:33","parameters":{"id":18475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18474,"mutability":"mutable","name":"duration","nameLocation":"63758:8:33","nodeType":"VariableDeclaration","scope":18477,"src":"63750:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18473,"name":"uint256","nodeType":"ElementaryTypeName","src":"63750:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63749:18:33"},"returnParameters":{"id":18476,"nodeType":"ParameterList","parameters":[],"src":"63776:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18487,"nodeType":"FunctionDefinition","src":"63862:95:33","nodes":[],"documentation":{"id":18478,"nodeType":"StructuredDocumentation","src":"63814:43:33","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"63871:13:33","parameters":{"id":18483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18480,"mutability":"mutable","name":"toml","nameLocation":"63901:4:33","nodeType":"VariableDeclaration","scope":18487,"src":"63885:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18479,"name":"string","nodeType":"ElementaryTypeName","src":"63885:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18482,"mutability":"mutable","name":"key","nameLocation":"63923:3:33","nodeType":"VariableDeclaration","scope":18487,"src":"63907:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18481,"name":"string","nodeType":"ElementaryTypeName","src":"63907:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63884:43:33"},"returnParameters":{"id":18486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18487,"src":"63951:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18484,"name":"bool","nodeType":"ElementaryTypeName","src":"63951:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63950:6:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18497,"nodeType":"FunctionDefinition","src":"64038:101:33","nodes":[],"documentation":{"id":18488,"nodeType":"StructuredDocumentation","src":"63963:70:33","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"64047:16:33","parameters":{"id":18493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18490,"mutability":"mutable","name":"toml","nameLocation":"64080:4:33","nodeType":"VariableDeclaration","scope":18497,"src":"64064:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18489,"name":"string","nodeType":"ElementaryTypeName","src":"64064:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18492,"mutability":"mutable","name":"key","nameLocation":"64102:3:33","nodeType":"VariableDeclaration","scope":18497,"src":"64086:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18491,"name":"string","nodeType":"ElementaryTypeName","src":"64086:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64063:43:33"},"returnParameters":{"id":18496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18497,"src":"64130:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18494,"name":"address","nodeType":"ElementaryTypeName","src":"64130:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"64129:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18508,"nodeType":"FunctionDefinition","src":"64222:139:33","nodes":[],"documentation":{"id":18498,"nodeType":"StructuredDocumentation","src":"64145:72:33","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"64231:21:33","parameters":{"id":18503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18500,"mutability":"mutable","name":"toml","nameLocation":"64269:4:33","nodeType":"VariableDeclaration","scope":18508,"src":"64253:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18499,"name":"string","nodeType":"ElementaryTypeName","src":"64253:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18502,"mutability":"mutable","name":"key","nameLocation":"64291:3:33","nodeType":"VariableDeclaration","scope":18508,"src":"64275:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18501,"name":"string","nodeType":"ElementaryTypeName","src":"64275:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64252:43:33"},"returnParameters":{"id":18507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18508,"src":"64343:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":18504,"name":"address","nodeType":"ElementaryTypeName","src":"64343:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":18505,"nodeType":"ArrayTypeName","src":"64343:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64342:18:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18518,"nodeType":"FunctionDefinition","src":"64439:95:33","nodes":[],"documentation":{"id":18509,"nodeType":"StructuredDocumentation","src":"64367:67:33","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"64448:13:33","parameters":{"id":18514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18511,"mutability":"mutable","name":"toml","nameLocation":"64478:4:33","nodeType":"VariableDeclaration","scope":18518,"src":"64462:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18510,"name":"string","nodeType":"ElementaryTypeName","src":"64462:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18513,"mutability":"mutable","name":"key","nameLocation":"64500:3:33","nodeType":"VariableDeclaration","scope":18518,"src":"64484:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18512,"name":"string","nodeType":"ElementaryTypeName","src":"64484:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64461:43:33"},"returnParameters":{"id":18517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18518,"src":"64528:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18515,"name":"bool","nodeType":"ElementaryTypeName","src":"64528:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"64527:6:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18529,"nodeType":"FunctionDefinition","src":"64614:109:33","nodes":[],"documentation":{"id":18519,"nodeType":"StructuredDocumentation","src":"64540:69:33","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"64623:18:33","parameters":{"id":18524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18521,"mutability":"mutable","name":"toml","nameLocation":"64658:4:33","nodeType":"VariableDeclaration","scope":18529,"src":"64642:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18520,"name":"string","nodeType":"ElementaryTypeName","src":"64642:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18523,"mutability":"mutable","name":"key","nameLocation":"64680:3:33","nodeType":"VariableDeclaration","scope":18529,"src":"64664:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18522,"name":"string","nodeType":"ElementaryTypeName","src":"64664:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64641:43:33"},"returnParameters":{"id":18528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18529,"src":"64708:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":18525,"name":"bool","nodeType":"ElementaryTypeName","src":"64708:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18526,"nodeType":"ArrayTypeName","src":"64708:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"64707:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18539,"nodeType":"FunctionDefinition","src":"64802:104:33","nodes":[],"documentation":{"id":18530,"nodeType":"StructuredDocumentation","src":"64729:68:33","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"64811:14:33","parameters":{"id":18535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18532,"mutability":"mutable","name":"toml","nameLocation":"64842:4:33","nodeType":"VariableDeclaration","scope":18539,"src":"64826:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18531,"name":"string","nodeType":"ElementaryTypeName","src":"64826:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18534,"mutability":"mutable","name":"key","nameLocation":"64864:3:33","nodeType":"VariableDeclaration","scope":18539,"src":"64848:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18533,"name":"string","nodeType":"ElementaryTypeName","src":"64848:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64825:43:33"},"returnParameters":{"id":18538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18539,"src":"64892:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18536,"name":"bytes","nodeType":"ElementaryTypeName","src":"64892:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"64891:14:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18549,"nodeType":"FunctionDefinition","src":"64987:101:33","nodes":[],"documentation":{"id":18540,"nodeType":"StructuredDocumentation","src":"64912:70:33","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"64996:16:33","parameters":{"id":18545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18542,"mutability":"mutable","name":"toml","nameLocation":"65029:4:33","nodeType":"VariableDeclaration","scope":18549,"src":"65013:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18541,"name":"string","nodeType":"ElementaryTypeName","src":"65013:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18544,"mutability":"mutable","name":"key","nameLocation":"65051:3:33","nodeType":"VariableDeclaration","scope":18549,"src":"65035:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18543,"name":"string","nodeType":"ElementaryTypeName","src":"65035:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65012:43:33"},"returnParameters":{"id":18548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18549,"src":"65079:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65079:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"65078:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18560,"nodeType":"FunctionDefinition","src":"65171:139:33","nodes":[],"documentation":{"id":18550,"nodeType":"StructuredDocumentation","src":"65094:72:33","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"65180:21:33","parameters":{"id":18555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18552,"mutability":"mutable","name":"toml","nameLocation":"65218:4:33","nodeType":"VariableDeclaration","scope":18560,"src":"65202:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18551,"name":"string","nodeType":"ElementaryTypeName","src":"65202:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18554,"mutability":"mutable","name":"key","nameLocation":"65240:3:33","nodeType":"VariableDeclaration","scope":18560,"src":"65224:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18553,"name":"string","nodeType":"ElementaryTypeName","src":"65224:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65201:43:33"},"returnParameters":{"id":18559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18560,"src":"65292:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":18556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65292:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":18557,"nodeType":"ArrayTypeName","src":"65292:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65291:18:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18571,"nodeType":"FunctionDefinition","src":"65391:111:33","nodes":[],"documentation":{"id":18561,"nodeType":"StructuredDocumentation","src":"65316:70:33","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"65400:19:33","parameters":{"id":18566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18563,"mutability":"mutable","name":"toml","nameLocation":"65436:4:33","nodeType":"VariableDeclaration","scope":18571,"src":"65420:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18562,"name":"string","nodeType":"ElementaryTypeName","src":"65420:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18565,"mutability":"mutable","name":"key","nameLocation":"65458:3:33","nodeType":"VariableDeclaration","scope":18571,"src":"65442:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18564,"name":"string","nodeType":"ElementaryTypeName","src":"65442:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65419:43:33"},"returnParameters":{"id":18570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18571,"src":"65486:14:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":18567,"name":"bytes","nodeType":"ElementaryTypeName","src":"65486:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":18568,"nodeType":"ArrayTypeName","src":"65486:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"65485:16:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18581,"nodeType":"FunctionDefinition","src":"65582:96:33","nodes":[],"documentation":{"id":18572,"nodeType":"StructuredDocumentation","src":"65508:69:33","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"65591:12:33","parameters":{"id":18577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18574,"mutability":"mutable","name":"toml","nameLocation":"65620:4:33","nodeType":"VariableDeclaration","scope":18581,"src":"65604:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18573,"name":"string","nodeType":"ElementaryTypeName","src":"65604:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18576,"mutability":"mutable","name":"key","nameLocation":"65642:3:33","nodeType":"VariableDeclaration","scope":18581,"src":"65626:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18575,"name":"string","nodeType":"ElementaryTypeName","src":"65626:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65603:43:33"},"returnParameters":{"id":18580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18581,"src":"65670:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":18578,"name":"int256","nodeType":"ElementaryTypeName","src":"65670:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"65669:8:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18592,"nodeType":"FunctionDefinition","src":"65760:110:33","nodes":[],"documentation":{"id":18582,"nodeType":"StructuredDocumentation","src":"65684:71:33","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"65769:17:33","parameters":{"id":18587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18584,"mutability":"mutable","name":"toml","nameLocation":"65803:4:33","nodeType":"VariableDeclaration","scope":18592,"src":"65787:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18583,"name":"string","nodeType":"ElementaryTypeName","src":"65787:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18586,"mutability":"mutable","name":"key","nameLocation":"65825:3:33","nodeType":"VariableDeclaration","scope":18592,"src":"65809:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18585,"name":"string","nodeType":"ElementaryTypeName","src":"65809:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65786:43:33"},"returnParameters":{"id":18591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18592,"src":"65853:15:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":18588,"name":"int256","nodeType":"ElementaryTypeName","src":"65853:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":18589,"nodeType":"ArrayTypeName","src":"65853:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"65852:17:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18603,"nodeType":"FunctionDefinition","src":"65934:111:33","nodes":[],"documentation":{"id":18593,"nodeType":"StructuredDocumentation","src":"65876:53:33","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"65943:13:33","parameters":{"id":18598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18595,"mutability":"mutable","name":"toml","nameLocation":"65973:4:33","nodeType":"VariableDeclaration","scope":18603,"src":"65957:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18594,"name":"string","nodeType":"ElementaryTypeName","src":"65957:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18597,"mutability":"mutable","name":"key","nameLocation":"65995:3:33","nodeType":"VariableDeclaration","scope":18603,"src":"65979:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18596,"name":"string","nodeType":"ElementaryTypeName","src":"65979:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65956:43:33"},"returnParameters":{"id":18602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18601,"mutability":"mutable","name":"keys","nameLocation":"66039:4:33","nodeType":"VariableDeclaration","scope":18603,"src":"66023:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18599,"name":"string","nodeType":"ElementaryTypeName","src":"66023:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18600,"nodeType":"ArrayTypeName","src":"66023:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"66022:22:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18613,"nodeType":"FunctionDefinition","src":"66125:106:33","nodes":[],"documentation":{"id":18604,"nodeType":"StructuredDocumentation","src":"66051:69:33","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"66134:15:33","parameters":{"id":18609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18606,"mutability":"mutable","name":"toml","nameLocation":"66166:4:33","nodeType":"VariableDeclaration","scope":18613,"src":"66150:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18605,"name":"string","nodeType":"ElementaryTypeName","src":"66150:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18608,"mutability":"mutable","name":"key","nameLocation":"66188:3:33","nodeType":"VariableDeclaration","scope":18613,"src":"66172:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18607,"name":"string","nodeType":"ElementaryTypeName","src":"66172:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66149:43:33"},"returnParameters":{"id":18612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18613,"src":"66216:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18610,"name":"string","nodeType":"ElementaryTypeName","src":"66216:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66215:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18624,"nodeType":"FunctionDefinition","src":"66313:113:33","nodes":[],"documentation":{"id":18614,"nodeType":"StructuredDocumentation","src":"66237:71:33","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"66322:20:33","parameters":{"id":18619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18616,"mutability":"mutable","name":"toml","nameLocation":"66359:4:33","nodeType":"VariableDeclaration","scope":18624,"src":"66343:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18615,"name":"string","nodeType":"ElementaryTypeName","src":"66343:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18618,"mutability":"mutable","name":"key","nameLocation":"66381:3:33","nodeType":"VariableDeclaration","scope":18624,"src":"66365:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18617,"name":"string","nodeType":"ElementaryTypeName","src":"66365:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66342:43:33"},"returnParameters":{"id":18623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18624,"src":"66409:15:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":18620,"name":"string","nodeType":"ElementaryTypeName","src":"66409:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":18621,"nodeType":"ArrayTypeName","src":"66409:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"66408:17:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18634,"nodeType":"FunctionDefinition","src":"66507:98:33","nodes":[],"documentation":{"id":18625,"nodeType":"StructuredDocumentation","src":"66432:70:33","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"66516:13:33","parameters":{"id":18630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18627,"mutability":"mutable","name":"toml","nameLocation":"66546:4:33","nodeType":"VariableDeclaration","scope":18634,"src":"66530:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18626,"name":"string","nodeType":"ElementaryTypeName","src":"66530:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18629,"mutability":"mutable","name":"key","nameLocation":"66568:3:33","nodeType":"VariableDeclaration","scope":18634,"src":"66552:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18628,"name":"string","nodeType":"ElementaryTypeName","src":"66552:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66529:43:33"},"returnParameters":{"id":18633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18634,"src":"66596:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18631,"name":"uint256","nodeType":"ElementaryTypeName","src":"66596:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66595:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18645,"nodeType":"FunctionDefinition","src":"66688:112:33","nodes":[],"documentation":{"id":18635,"nodeType":"StructuredDocumentation","src":"66611:72:33","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"66697:18:33","parameters":{"id":18640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18637,"mutability":"mutable","name":"toml","nameLocation":"66732:4:33","nodeType":"VariableDeclaration","scope":18645,"src":"66716:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18636,"name":"string","nodeType":"ElementaryTypeName","src":"66716:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18639,"mutability":"mutable","name":"key","nameLocation":"66754:3:33","nodeType":"VariableDeclaration","scope":18645,"src":"66738:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18638,"name":"string","nodeType":"ElementaryTypeName","src":"66738:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66715:43:33"},"returnParameters":{"id":18644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18645,"src":"66782:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":18641,"name":"uint256","nodeType":"ElementaryTypeName","src":"66782:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":18642,"nodeType":"ArrayTypeName","src":"66782:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"66781:18:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18653,"nodeType":"FunctionDefinition","src":"66840:93:33","nodes":[],"documentation":{"id":18646,"nodeType":"StructuredDocumentation","src":"66806:29:33","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"66849:9:33","parameters":{"id":18649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18648,"mutability":"mutable","name":"toml","nameLocation":"66875:4:33","nodeType":"VariableDeclaration","scope":18653,"src":"66859:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18647,"name":"string","nodeType":"ElementaryTypeName","src":"66859:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66858:22:33"},"returnParameters":{"id":18652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18651,"mutability":"mutable","name":"abiEncodedData","nameLocation":"66917:14:33","nodeType":"VariableDeclaration","scope":18653,"src":"66904:27:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18650,"name":"bytes","nodeType":"ElementaryTypeName","src":"66904:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"66903:29:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18663,"nodeType":"FunctionDefinition","src":"66982:114:33","nodes":[],"documentation":{"id":18654,"nodeType":"StructuredDocumentation","src":"66939:38:33","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"66991:9:33","parameters":{"id":18659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18656,"mutability":"mutable","name":"toml","nameLocation":"67017:4:33","nodeType":"VariableDeclaration","scope":18663,"src":"67001:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18655,"name":"string","nodeType":"ElementaryTypeName","src":"67001:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18658,"mutability":"mutable","name":"key","nameLocation":"67039:3:33","nodeType":"VariableDeclaration","scope":18663,"src":"67023:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18657,"name":"string","nodeType":"ElementaryTypeName","src":"67023:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67000:43:33"},"returnParameters":{"id":18662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18661,"mutability":"mutable","name":"abiEncodedData","nameLocation":"67080:14:33","nodeType":"VariableDeclaration","scope":18663,"src":"67067:27:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18660,"name":"bytes","nodeType":"ElementaryTypeName","src":"67067:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"67066:29:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18671,"nodeType":"FunctionDefinition","src":"67189:72:33","nodes":[],"documentation":{"id":18664,"nodeType":"StructuredDocumentation","src":"67102:82:33","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"67198:9:33","parameters":{"id":18669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18666,"mutability":"mutable","name":"json","nameLocation":"67224:4:33","nodeType":"VariableDeclaration","scope":18671,"src":"67208:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18665,"name":"string","nodeType":"ElementaryTypeName","src":"67208:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18668,"mutability":"mutable","name":"path","nameLocation":"67246:4:33","nodeType":"VariableDeclaration","scope":18671,"src":"67230:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18667,"name":"string","nodeType":"ElementaryTypeName","src":"67230:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67207:44:33"},"returnParameters":{"id":18670,"nodeType":"ParameterList","parameters":[],"src":"67260:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18681,"nodeType":"FunctionDefinition","src":"67530:98:33","nodes":[],"documentation":{"id":18672,"nodeType":"StructuredDocumentation","src":"67267:258:33","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"67539:9:33","parameters":{"id":18679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18674,"mutability":"mutable","name":"json","nameLocation":"67565:4:33","nodeType":"VariableDeclaration","scope":18681,"src":"67549:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18673,"name":"string","nodeType":"ElementaryTypeName","src":"67549:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18676,"mutability":"mutable","name":"path","nameLocation":"67587:4:33","nodeType":"VariableDeclaration","scope":18681,"src":"67571:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18675,"name":"string","nodeType":"ElementaryTypeName","src":"67571:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18678,"mutability":"mutable","name":"valueKey","nameLocation":"67609:8:33","nodeType":"VariableDeclaration","scope":18681,"src":"67593:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18677,"name":"string","nodeType":"ElementaryTypeName","src":"67593:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67548:70:33"},"returnParameters":{"id":18680,"nodeType":"ParameterList","parameters":[],"src":"67627:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18693,"nodeType":"FunctionDefinition","src":"67767:141:33","nodes":[],"documentation":{"id":18682,"nodeType":"StructuredDocumentation","src":"67670:92:33","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"67776:21:33","parameters":{"id":18689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18684,"mutability":"mutable","name":"salt","nameLocation":"67806:4:33","nodeType":"VariableDeclaration","scope":18693,"src":"67798:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67798:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18686,"mutability":"mutable","name":"initCodeHash","nameLocation":"67820:12:33","nodeType":"VariableDeclaration","scope":18693,"src":"67812:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67812:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18688,"mutability":"mutable","name":"deployer","nameLocation":"67842:8:33","nodeType":"VariableDeclaration","scope":18693,"src":"67834:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18687,"name":"address","nodeType":"ElementaryTypeName","src":"67834:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"67797:54:33"},"returnParameters":{"id":18692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18693,"src":"67899:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18690,"name":"address","nodeType":"ElementaryTypeName","src":"67899:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"67898:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18703,"nodeType":"FunctionDefinition","src":"68013:99:33","nodes":[],"documentation":{"id":18694,"nodeType":"StructuredDocumentation","src":"67914:94:33","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"68022:21:33","parameters":{"id":18699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18696,"mutability":"mutable","name":"salt","nameLocation":"68052:4:33","nodeType":"VariableDeclaration","scope":18703,"src":"68044:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68044:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18698,"mutability":"mutable","name":"initCodeHash","nameLocation":"68066:12:33","nodeType":"VariableDeclaration","scope":18703,"src":"68058:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68058:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"68043:36:33"},"returnParameters":{"id":18702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18703,"src":"68103:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18700,"name":"address","nodeType":"ElementaryTypeName","src":"68103:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68102:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18713,"nodeType":"FunctionDefinition","src":"68217:95:33","nodes":[],"documentation":{"id":18704,"nodeType":"StructuredDocumentation","src":"68118:94:33","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"68226:20:33","parameters":{"id":18709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18706,"mutability":"mutable","name":"deployer","nameLocation":"68255:8:33","nodeType":"VariableDeclaration","scope":18713,"src":"68247:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18705,"name":"address","nodeType":"ElementaryTypeName","src":"68247:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18708,"mutability":"mutable","name":"nonce","nameLocation":"68273:5:33","nodeType":"VariableDeclaration","scope":18713,"src":"68265:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18707,"name":"uint256","nodeType":"ElementaryTypeName","src":"68265:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68246:33:33"},"returnParameters":{"id":18712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18713,"src":"68303:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18710,"name":"address","nodeType":"ElementaryTypeName","src":"68303:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68302:9:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18722,"nodeType":"FunctionDefinition","src":"68422:91:33","nodes":[],"documentation":{"id":18714,"nodeType":"StructuredDocumentation","src":"68318:99:33","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"68431:12:33","parameters":{"id":18717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18716,"mutability":"mutable","name":"walletLabel","nameLocation":"68460:11:33","nodeType":"VariableDeclaration","scope":18722,"src":"68444:27:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18715,"name":"string","nodeType":"ElementaryTypeName","src":"68444:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68443:29:33"},"returnParameters":{"id":18721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18720,"mutability":"mutable","name":"wallet","nameLocation":"68505:6:33","nodeType":"VariableDeclaration","scope":18722,"src":"68491:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":18719,"nodeType":"UserDefinedTypeName","pathNode":{"id":18718,"name":"Wallet","nameLocations":["68491:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":15902,"src":"68491:6:33"},"referencedDeclaration":15902,"src":"68491:6:33","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"68490:22:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18731,"nodeType":"FunctionDefinition","src":"68591:82:33","nodes":[],"documentation":{"id":18723,"nodeType":"StructuredDocumentation","src":"68519:67:33","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"68600:12:33","parameters":{"id":18726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18725,"mutability":"mutable","name":"privateKey","nameLocation":"68621:10:33","nodeType":"VariableDeclaration","scope":18731,"src":"68613:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18724,"name":"uint256","nodeType":"ElementaryTypeName","src":"68613:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68612:20:33"},"returnParameters":{"id":18730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18729,"mutability":"mutable","name":"wallet","nameLocation":"68665:6:33","nodeType":"VariableDeclaration","scope":18731,"src":"68651:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":18728,"nodeType":"UserDefinedTypeName","pathNode":{"id":18727,"name":"Wallet","nameLocations":["68651:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":15902,"src":"68651:6:33"},"referencedDeclaration":15902,"src":"68651:6:33","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"68650:22:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18742,"nodeType":"FunctionDefinition","src":"68787:111:33","nodes":[],"documentation":{"id":18732,"nodeType":"StructuredDocumentation","src":"68679:103:33","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"68796:12:33","parameters":{"id":18737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18734,"mutability":"mutable","name":"privateKey","nameLocation":"68817:10:33","nodeType":"VariableDeclaration","scope":18742,"src":"68809:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18733,"name":"uint256","nodeType":"ElementaryTypeName","src":"68809:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18736,"mutability":"mutable","name":"walletLabel","nameLocation":"68845:11:33","nodeType":"VariableDeclaration","scope":18742,"src":"68829:27:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18735,"name":"string","nodeType":"ElementaryTypeName","src":"68829:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68808:49:33"},"returnParameters":{"id":18741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18740,"mutability":"mutable","name":"wallet","nameLocation":"68890:6:33","nodeType":"VariableDeclaration","scope":18742,"src":"68876:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":18739,"nodeType":"UserDefinedTypeName","pathNode":{"id":18738,"name":"Wallet","nameLocations":["68876:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":15902,"src":"68876:6:33"},"referencedDeclaration":15902,"src":"68876:6:33","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"68875:22:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18752,"nodeType":"FunctionDefinition","src":"69046:102:33","nodes":[],"documentation":{"id":18743,"nodeType":"StructuredDocumentation","src":"68904:137:33","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69055:9:33","parameters":{"id":18748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18745,"mutability":"mutable","name":"mnemonic","nameLocation":"69081:8:33","nodeType":"VariableDeclaration","scope":18752,"src":"69065:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18744,"name":"string","nodeType":"ElementaryTypeName","src":"69065:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18747,"mutability":"mutable","name":"index","nameLocation":"69098:5:33","nodeType":"VariableDeclaration","scope":18752,"src":"69091:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":18746,"name":"uint32","nodeType":"ElementaryTypeName","src":"69091:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"69064:40:33"},"returnParameters":{"id":18751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18750,"mutability":"mutable","name":"privateKey","nameLocation":"69136:10:33","nodeType":"VariableDeclaration","scope":18752,"src":"69128:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18749,"name":"uint256","nodeType":"ElementaryTypeName","src":"69128:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69127:20:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18764,"nodeType":"FunctionDefinition","src":"69277:158:33","nodes":[],"documentation":{"id":18753,"nodeType":"StructuredDocumentation","src":"69154:118:33","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69286:9:33","parameters":{"id":18760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18755,"mutability":"mutable","name":"mnemonic","nameLocation":"69312:8:33","nodeType":"VariableDeclaration","scope":18764,"src":"69296:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18754,"name":"string","nodeType":"ElementaryTypeName","src":"69296:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18757,"mutability":"mutable","name":"derivationPath","nameLocation":"69338:14:33","nodeType":"VariableDeclaration","scope":18764,"src":"69322:30:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18756,"name":"string","nodeType":"ElementaryTypeName","src":"69322:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18759,"mutability":"mutable","name":"index","nameLocation":"69361:5:33","nodeType":"VariableDeclaration","scope":18764,"src":"69354:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":18758,"name":"uint32","nodeType":"ElementaryTypeName","src":"69354:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"69295:72:33"},"returnParameters":{"id":18763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18762,"mutability":"mutable","name":"privateKey","nameLocation":"69423:10:33","nodeType":"VariableDeclaration","scope":18764,"src":"69415:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18761,"name":"uint256","nodeType":"ElementaryTypeName","src":"69415:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69414:20:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18776,"nodeType":"FunctionDefinition","src":"69609:152:33","nodes":[],"documentation":{"id":18765,"nodeType":"StructuredDocumentation","src":"69441:163:33","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69618:9:33","parameters":{"id":18772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18767,"mutability":"mutable","name":"mnemonic","nameLocation":"69644:8:33","nodeType":"VariableDeclaration","scope":18776,"src":"69628:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18766,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18769,"mutability":"mutable","name":"index","nameLocation":"69661:5:33","nodeType":"VariableDeclaration","scope":18776,"src":"69654:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":18768,"name":"uint32","nodeType":"ElementaryTypeName","src":"69654:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":18771,"mutability":"mutable","name":"language","nameLocation":"69684:8:33","nodeType":"VariableDeclaration","scope":18776,"src":"69668:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18770,"name":"string","nodeType":"ElementaryTypeName","src":"69668:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69627:66:33"},"returnParameters":{"id":18775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18774,"mutability":"mutable","name":"privateKey","nameLocation":"69749:10:33","nodeType":"VariableDeclaration","scope":18776,"src":"69741:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18773,"name":"uint256","nodeType":"ElementaryTypeName","src":"69741:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69740:20:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18790,"nodeType":"FunctionDefinition","src":"69916:184:33","nodes":[],"documentation":{"id":18777,"nodeType":"StructuredDocumentation","src":"69767:144:33","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69925:9:33","parameters":{"id":18786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18779,"mutability":"mutable","name":"mnemonic","nameLocation":"69951:8:33","nodeType":"VariableDeclaration","scope":18790,"src":"69935:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18778,"name":"string","nodeType":"ElementaryTypeName","src":"69935:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18781,"mutability":"mutable","name":"derivationPath","nameLocation":"69977:14:33","nodeType":"VariableDeclaration","scope":18790,"src":"69961:30:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18780,"name":"string","nodeType":"ElementaryTypeName","src":"69961:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18783,"mutability":"mutable","name":"index","nameLocation":"70000:5:33","nodeType":"VariableDeclaration","scope":18790,"src":"69993:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":18782,"name":"uint32","nodeType":"ElementaryTypeName","src":"69993:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":18785,"mutability":"mutable","name":"language","nameLocation":"70023:8:33","nodeType":"VariableDeclaration","scope":18790,"src":"70007:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18784,"name":"string","nodeType":"ElementaryTypeName","src":"70007:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69934:98:33"},"returnParameters":{"id":18789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18788,"mutability":"mutable","name":"privateKey","nameLocation":"70088:10:33","nodeType":"VariableDeclaration","scope":18790,"src":"70080:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18787,"name":"uint256","nodeType":"ElementaryTypeName","src":"70080:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70079:20:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18798,"nodeType":"FunctionDefinition","src":"70156:86:33","nodes":[],"documentation":{"id":18791,"nodeType":"StructuredDocumentation","src":"70106:45:33","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"70165:8:33","parameters":{"id":18794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18793,"mutability":"mutable","name":"account","nameLocation":"70182:7:33","nodeType":"VariableDeclaration","scope":18798,"src":"70174:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18792,"name":"address","nodeType":"ElementaryTypeName","src":"70174:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"70173:17:33"},"returnParameters":{"id":18797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18796,"mutability":"mutable","name":"currentLabel","nameLocation":"70228:12:33","nodeType":"VariableDeclaration","scope":18798,"src":"70214:26:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18795,"name":"string","nodeType":"ElementaryTypeName","src":"70214:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70213:28:33"},"scope":18871,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18807,"nodeType":"FunctionDefinition","src":"70280:74:33","nodes":[],"documentation":{"id":18799,"nodeType":"StructuredDocumentation","src":"70248:27:33","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"70289:8:33","parameters":{"id":18803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18802,"mutability":"mutable","name":"wallet","nameLocation":"70314:6:33","nodeType":"VariableDeclaration","scope":18807,"src":"70298:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":18801,"nodeType":"UserDefinedTypeName","pathNode":{"id":18800,"name":"Wallet","nameLocations":["70298:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":15902,"src":"70298:6:33"},"referencedDeclaration":15902,"src":"70298:6:33","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"70297:24:33"},"returnParameters":{"id":18806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18805,"mutability":"mutable","name":"nonce","nameLocation":"70347:5:33","nodeType":"VariableDeclaration","scope":18807,"src":"70340:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18804,"name":"uint64","nodeType":"ElementaryTypeName","src":"70340:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"70339:14:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18815,"nodeType":"FunctionDefinition","src":"70402:67:33","nodes":[],"documentation":{"id":18808,"nodeType":"StructuredDocumentation","src":"70360:37:33","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"70411:5:33","parameters":{"id":18813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18810,"mutability":"mutable","name":"account","nameLocation":"70425:7:33","nodeType":"VariableDeclaration","scope":18815,"src":"70417:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18809,"name":"address","nodeType":"ElementaryTypeName","src":"70417:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18812,"mutability":"mutable","name":"newLabel","nameLocation":"70450:8:33","nodeType":"VariableDeclaration","scope":18815,"src":"70434:24:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18811,"name":"string","nodeType":"ElementaryTypeName","src":"70434:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70416:43:33"},"returnParameters":{"id":18814,"nodeType":"ParameterList","parameters":[],"src":"70468:0:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18823,"nodeType":"FunctionDefinition","src":"70553:76:33","nodes":[],"documentation":{"id":18816,"nodeType":"StructuredDocumentation","src":"70475:73:33","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"70562:11:33","parameters":{"id":18819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18818,"mutability":"mutable","name":"privateKey","nameLocation":"70582:10:33","nodeType":"VariableDeclaration","scope":18823,"src":"70574:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18817,"name":"uint256","nodeType":"ElementaryTypeName","src":"70574:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70573:20:33"},"returnParameters":{"id":18822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18821,"mutability":"mutable","name":"keyAddr","nameLocation":"70620:7:33","nodeType":"VariableDeclaration","scope":18823,"src":"70612:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18820,"name":"address","nodeType":"ElementaryTypeName","src":"70612:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"70611:17:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18838,"nodeType":"FunctionDefinition","src":"70671:103:33","nodes":[],"documentation":{"id":18824,"nodeType":"StructuredDocumentation","src":"70635:31:33","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"70680:4:33","parameters":{"id":18830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18827,"mutability":"mutable","name":"wallet","nameLocation":"70701:6:33","nodeType":"VariableDeclaration","scope":18838,"src":"70685:22:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":18826,"nodeType":"UserDefinedTypeName","pathNode":{"id":18825,"name":"Wallet","nameLocations":["70685:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":15902,"src":"70685:6:33"},"referencedDeclaration":15902,"src":"70685:6:33","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$15902_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":18829,"mutability":"mutable","name":"digest","nameLocation":"70717:6:33","nodeType":"VariableDeclaration","scope":18838,"src":"70709:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70709:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"70684:40:33"},"returnParameters":{"id":18837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18832,"mutability":"mutable","name":"v","nameLocation":"70749:1:33","nodeType":"VariableDeclaration","scope":18838,"src":"70743:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":18831,"name":"uint8","nodeType":"ElementaryTypeName","src":"70743:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":18834,"mutability":"mutable","name":"r","nameLocation":"70760:1:33","nodeType":"VariableDeclaration","scope":18838,"src":"70752:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70752:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18836,"mutability":"mutable","name":"s","nameLocation":"70771:1:33","nodeType":"VariableDeclaration","scope":18838,"src":"70763:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70763:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"70742:31:33"},"scope":18871,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18846,"nodeType":"FunctionDefinition","src":"70835:80:33","nodes":[],"documentation":{"id":18839,"nodeType":"StructuredDocumentation","src":"70780:50:33","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"70844:11:33","parameters":{"id":18842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18841,"mutability":"mutable","name":"data","nameLocation":"70871:4:33","nodeType":"VariableDeclaration","scope":18846,"src":"70856:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18840,"name":"bytes","nodeType":"ElementaryTypeName","src":"70856:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"70855:21:33"},"returnParameters":{"id":18845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18846,"src":"70900:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18843,"name":"string","nodeType":"ElementaryTypeName","src":"70900:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70899:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18854,"nodeType":"FunctionDefinition","src":"70977:81:33","nodes":[],"documentation":{"id":18847,"nodeType":"StructuredDocumentation","src":"70921:51:33","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"70986:11:33","parameters":{"id":18850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18849,"mutability":"mutable","name":"data","nameLocation":"71014:4:33","nodeType":"VariableDeclaration","scope":18854,"src":"70998:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18848,"name":"string","nodeType":"ElementaryTypeName","src":"70998:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70997:22:33"},"returnParameters":{"id":18853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18854,"src":"71043:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18851,"name":"string","nodeType":"ElementaryTypeName","src":"71043:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71042:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18862,"nodeType":"FunctionDefinition","src":"71116:77:33","nodes":[],"documentation":{"id":18855,"nodeType":"StructuredDocumentation","src":"71064:47:33","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"71125:8:33","parameters":{"id":18858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18857,"mutability":"mutable","name":"data","nameLocation":"71149:4:33","nodeType":"VariableDeclaration","scope":18862,"src":"71134:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18856,"name":"bytes","nodeType":"ElementaryTypeName","src":"71134:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71133:21:33"},"returnParameters":{"id":18861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18862,"src":"71178:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18859,"name":"string","nodeType":"ElementaryTypeName","src":"71178:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71177:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":18870,"nodeType":"FunctionDefinition","src":"71252:78:33","nodes":[],"documentation":{"id":18863,"nodeType":"StructuredDocumentation","src":"71199:48:33","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"71261:8:33","parameters":{"id":18866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18865,"mutability":"mutable","name":"data","nameLocation":"71286:4:33","nodeType":"VariableDeclaration","scope":18870,"src":"71270:20:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18864,"name":"string","nodeType":"ElementaryTypeName","src":"71270:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71269:22:33"},"returnParameters":{"id":18869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18870,"src":"71315:13:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":18867,"name":"string","nodeType":"ElementaryTypeName","src":"71315:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71314:15:33"},"scope":18871,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":15816,"nodeType":"StructuredDocumentation","src":"184:225:33","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[18871],"name":"VmSafe","nameLocation":"419:6:33","scope":19447,"usedErrors":[]},{"id":19446,"nodeType":"ContractDefinition","src":"71505:13590:33","nodes":[{"id":18880,"nodeType":"FunctionDefinition","src":"71665:61:33","nodes":[],"documentation":{"id":18875,"nodeType":"StructuredDocumentation","src":"71564:96:33","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"71674:10:33","parameters":{"id":18876,"nodeType":"ParameterList","parameters":[],"src":"71684:2:33"},"returnParameters":{"id":18879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18878,"mutability":"mutable","name":"forkId","nameLocation":"71718:6:33","nodeType":"VariableDeclaration","scope":18880,"src":"71710:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18877,"name":"uint256","nodeType":"ElementaryTypeName","src":"71710:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71709:16:33"},"scope":19446,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":18886,"nodeType":"FunctionDefinition","src":"71810:51:33","nodes":[],"documentation":{"id":18881,"nodeType":"StructuredDocumentation","src":"71732:73:33","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"71819:15:33","parameters":{"id":18884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18883,"mutability":"mutable","name":"account","nameLocation":"71843:7:33","nodeType":"VariableDeclaration","scope":18886,"src":"71835:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18882,"name":"address","nodeType":"ElementaryTypeName","src":"71835:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"71834:17:33"},"returnParameters":{"id":18885,"nodeType":"ParameterList","parameters":[],"src":"71860:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18892,"nodeType":"FunctionDefinition","src":"71897:46:33","nodes":[],"documentation":{"id":18887,"nodeType":"StructuredDocumentation","src":"71867:25:33","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"71906:7:33","parameters":{"id":18890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18889,"mutability":"mutable","name":"newChainId","nameLocation":"71922:10:33","nodeType":"VariableDeclaration","scope":18892,"src":"71914:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18888,"name":"uint256","nodeType":"ElementaryTypeName","src":"71914:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71913:20:33"},"returnParameters":{"id":18891,"nodeType":"ParameterList","parameters":[],"src":"71942:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18896,"nodeType":"FunctionDefinition","src":"71982:37:33","nodes":[],"documentation":{"id":18893,"nodeType":"StructuredDocumentation","src":"71949:28:33","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"71991:16:33","parameters":{"id":18894,"nodeType":"ParameterList","parameters":[],"src":"72007:2:33"},"returnParameters":{"id":18895,"nodeType":"ParameterList","parameters":[],"src":"72018:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18902,"nodeType":"FunctionDefinition","src":"72056:48:33","nodes":[],"documentation":{"id":18897,"nodeType":"StructuredDocumentation","src":"72025:26:33","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"72065:8:33","parameters":{"id":18900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18899,"mutability":"mutable","name":"newCoinbase","nameLocation":"72082:11:33","nodeType":"VariableDeclaration","scope":18902,"src":"72074:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18898,"name":"address","nodeType":"ElementaryTypeName","src":"72074:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72073:21:33"},"returnParameters":{"id":18901,"nodeType":"ParameterList","parameters":[],"src":"72103:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18910,"nodeType":"FunctionDefinition","src":"72224:82:33","nodes":[],"documentation":{"id":18903,"nodeType":"StructuredDocumentation","src":"72110:109:33","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"72233:10:33","parameters":{"id":18906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18905,"mutability":"mutable","name":"urlOrAlias","nameLocation":"72260:10:33","nodeType":"VariableDeclaration","scope":18910,"src":"72244:26:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18904,"name":"string","nodeType":"ElementaryTypeName","src":"72244:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72243:28:33"},"returnParameters":{"id":18909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18908,"mutability":"mutable","name":"forkId","nameLocation":"72298:6:33","nodeType":"VariableDeclaration","scope":18910,"src":"72290:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18907,"name":"uint256","nodeType":"ElementaryTypeName","src":"72290:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72289:16:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18920,"nodeType":"FunctionDefinition","src":"72413:103:33","nodes":[],"documentation":{"id":18911,"nodeType":"StructuredDocumentation","src":"72312:96:33","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"72422:10:33","parameters":{"id":18916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18913,"mutability":"mutable","name":"urlOrAlias","nameLocation":"72449:10:33","nodeType":"VariableDeclaration","scope":18920,"src":"72433:26:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18912,"name":"string","nodeType":"ElementaryTypeName","src":"72433:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18915,"mutability":"mutable","name":"blockNumber","nameLocation":"72469:11:33","nodeType":"VariableDeclaration","scope":18920,"src":"72461:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18914,"name":"uint256","nodeType":"ElementaryTypeName","src":"72461:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72432:49:33"},"returnParameters":{"id":18919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18918,"mutability":"mutable","name":"forkId","nameLocation":"72508:6:33","nodeType":"VariableDeclaration","scope":18920,"src":"72500:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18917,"name":"uint256","nodeType":"ElementaryTypeName","src":"72500:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72499:16:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18930,"nodeType":"FunctionDefinition","src":"72741:98:33","nodes":[],"documentation":{"id":18921,"nodeType":"StructuredDocumentation","src":"72522:214:33","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"72750:10:33","parameters":{"id":18926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18923,"mutability":"mutable","name":"urlOrAlias","nameLocation":"72777:10:33","nodeType":"VariableDeclaration","scope":18930,"src":"72761:26:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18922,"name":"string","nodeType":"ElementaryTypeName","src":"72761:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18925,"mutability":"mutable","name":"txHash","nameLocation":"72797:6:33","nodeType":"VariableDeclaration","scope":18930,"src":"72789:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72789:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72760:44:33"},"returnParameters":{"id":18929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18928,"mutability":"mutable","name":"forkId","nameLocation":"72831:6:33","nodeType":"VariableDeclaration","scope":18930,"src":"72823:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18927,"name":"uint256","nodeType":"ElementaryTypeName","src":"72823:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72822:16:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18938,"nodeType":"FunctionDefinition","src":"72974:88:33","nodes":[],"documentation":{"id":18931,"nodeType":"StructuredDocumentation","src":"72845:124:33","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"72983:16:33","parameters":{"id":18934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18933,"mutability":"mutable","name":"urlOrAlias","nameLocation":"73016:10:33","nodeType":"VariableDeclaration","scope":18938,"src":"73000:26:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18932,"name":"string","nodeType":"ElementaryTypeName","src":"73000:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72999:28:33"},"returnParameters":{"id":18937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18936,"mutability":"mutable","name":"forkId","nameLocation":"73054:6:33","nodeType":"VariableDeclaration","scope":18938,"src":"73046:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18935,"name":"uint256","nodeType":"ElementaryTypeName","src":"73046:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73045:16:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18948,"nodeType":"FunctionDefinition","src":"73186:109:33","nodes":[],"documentation":{"id":18939,"nodeType":"StructuredDocumentation","src":"73068:113:33","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"73195:16:33","parameters":{"id":18944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18941,"mutability":"mutable","name":"urlOrAlias","nameLocation":"73228:10:33","nodeType":"VariableDeclaration","scope":18948,"src":"73212:26:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18940,"name":"string","nodeType":"ElementaryTypeName","src":"73212:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18943,"mutability":"mutable","name":"blockNumber","nameLocation":"73248:11:33","nodeType":"VariableDeclaration","scope":18948,"src":"73240:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18942,"name":"uint256","nodeType":"ElementaryTypeName","src":"73240:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73211:49:33"},"returnParameters":{"id":18947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18946,"mutability":"mutable","name":"forkId","nameLocation":"73287:6:33","nodeType":"VariableDeclaration","scope":18948,"src":"73279:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18945,"name":"uint256","nodeType":"ElementaryTypeName","src":"73279:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73278:16:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18958,"nodeType":"FunctionDefinition","src":"73531:104:33","nodes":[],"documentation":{"id":18949,"nodeType":"StructuredDocumentation","src":"73301:225:33","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"73540:16:33","parameters":{"id":18954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18951,"mutability":"mutable","name":"urlOrAlias","nameLocation":"73573:10:33","nodeType":"VariableDeclaration","scope":18958,"src":"73557:26:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18950,"name":"string","nodeType":"ElementaryTypeName","src":"73557:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18953,"mutability":"mutable","name":"txHash","nameLocation":"73593:6:33","nodeType":"VariableDeclaration","scope":18958,"src":"73585:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73585:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"73556:44:33"},"returnParameters":{"id":18957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18956,"mutability":"mutable","name":"forkId","nameLocation":"73627:6:33","nodeType":"VariableDeclaration","scope":18958,"src":"73619:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18955,"name":"uint256","nodeType":"ElementaryTypeName","src":"73619:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73618:16:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18966,"nodeType":"FunctionDefinition","src":"73675:60:33","nodes":[],"documentation":{"id":18959,"nodeType":"StructuredDocumentation","src":"73641:29:33","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"73684:4:33","parameters":{"id":18964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18961,"mutability":"mutable","name":"account","nameLocation":"73697:7:33","nodeType":"VariableDeclaration","scope":18966,"src":"73689:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18960,"name":"address","nodeType":"ElementaryTypeName","src":"73689:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18963,"mutability":"mutable","name":"newBalance","nameLocation":"73714:10:33","nodeType":"VariableDeclaration","scope":18966,"src":"73706:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18962,"name":"uint256","nodeType":"ElementaryTypeName","src":"73706:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73688:37:33"},"returnParameters":{"id":18965,"nodeType":"ParameterList","parameters":[],"src":"73734:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18974,"nodeType":"FunctionDefinition","src":"73973:76:33","nodes":[],"documentation":{"id":18967,"nodeType":"StructuredDocumentation","src":"73741:227:33","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"73982:14:33","parameters":{"id":18970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18969,"mutability":"mutable","name":"snapshotId","nameLocation":"74005:10:33","nodeType":"VariableDeclaration","scope":18974,"src":"73997:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18968,"name":"uint256","nodeType":"ElementaryTypeName","src":"73997:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73996:20:33"},"returnParameters":{"id":18973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18972,"mutability":"mutable","name":"success","nameLocation":"74040:7:33","nodeType":"VariableDeclaration","scope":18974,"src":"74035:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18971,"name":"bool","nodeType":"ElementaryTypeName","src":"74035:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74034:14:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18978,"nodeType":"FunctionDefinition","src":"74121:36:33","nodes":[],"documentation":{"id":18975,"nodeType":"StructuredDocumentation","src":"74055:61:33","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"74130:15:33","parameters":{"id":18976,"nodeType":"ParameterList","parameters":[],"src":"74145:2:33"},"returnParameters":{"id":18977,"nodeType":"ParameterList","parameters":[],"src":"74156:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18984,"nodeType":"FunctionDefinition","src":"74333:52:33","nodes":[],"documentation":{"id":18979,"nodeType":"StructuredDocumentation","src":"74163:165:33","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"74342:10:33","parameters":{"id":18982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18981,"mutability":"mutable","name":"newDifficulty","nameLocation":"74361:13:33","nodeType":"VariableDeclaration","scope":18984,"src":"74353:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18980,"name":"uint256","nodeType":"ElementaryTypeName","src":"74353:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74352:23:33"},"returnParameters":{"id":18983,"nodeType":"ParameterList","parameters":[],"src":"74384:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18990,"nodeType":"FunctionDefinition","src":"74444:61:33","nodes":[],"documentation":{"id":18985,"nodeType":"StructuredDocumentation","src":"74391:48:33","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"74453:9:33","parameters":{"id":18988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18987,"mutability":"mutable","name":"pathToStateJson","nameLocation":"74479:15:33","nodeType":"VariableDeclaration","scope":18990,"src":"74463:31:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18986,"name":"string","nodeType":"ElementaryTypeName","src":"74463:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74462:33:33"},"returnParameters":{"id":18989,"nodeType":"ParameterList","parameters":[],"src":"74504:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18998,"nodeType":"FunctionDefinition","src":"74542:74:33","nodes":[],"documentation":{"id":18991,"nodeType":"StructuredDocumentation","src":"74511:26:33","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"74551:4:33","parameters":{"id":18996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18993,"mutability":"mutable","name":"target","nameLocation":"74564:6:33","nodeType":"VariableDeclaration","scope":18998,"src":"74556:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18992,"name":"address","nodeType":"ElementaryTypeName","src":"74556:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18995,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"74587:18:33","nodeType":"VariableDeclaration","scope":18998,"src":"74572:33:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18994,"name":"bytes","nodeType":"ElementaryTypeName","src":"74572:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74555:51:33"},"returnParameters":{"id":18997,"nodeType":"ParameterList","parameters":[],"src":"74615:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19004,"nodeType":"FunctionDefinition","src":"74652:42:33","nodes":[],"documentation":{"id":18999,"nodeType":"StructuredDocumentation","src":"74622:25:33","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"74661:3:33","parameters":{"id":19002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19001,"mutability":"mutable","name":"newBasefee","nameLocation":"74673:10:33","nodeType":"VariableDeclaration","scope":19004,"src":"74665:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19000,"name":"uint256","nodeType":"ElementaryTypeName","src":"74665:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74664:20:33"},"returnParameters":{"id":19003,"nodeType":"ParameterList","parameters":[],"src":"74693:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19012,"nodeType":"FunctionDefinition","src":"74761:79:33","nodes":[],"documentation":{"id":19005,"nodeType":"StructuredDocumentation","src":"74700:56:33","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"74770:12:33","parameters":{"id":19008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19007,"mutability":"mutable","name":"account","nameLocation":"74791:7:33","nodeType":"VariableDeclaration","scope":19012,"src":"74783:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19006,"name":"address","nodeType":"ElementaryTypeName","src":"74783:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"74782:17:33"},"returnParameters":{"id":19011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19010,"mutability":"mutable","name":"persistent","nameLocation":"74828:10:33","nodeType":"VariableDeclaration","scope":19012,"src":"74823:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19009,"name":"bool","nodeType":"ElementaryTypeName","src":"74823:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74822:17:33"},"scope":19446,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":19018,"nodeType":"FunctionDefinition","src":"74921:63:33","nodes":[],"documentation":{"id":19013,"nodeType":"StructuredDocumentation","src":"74846:70:33","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"74930:10:33","parameters":{"id":19016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19015,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"74957:16:33","nodeType":"VariableDeclaration","scope":19018,"src":"74941:32:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":19014,"name":"string","nodeType":"ElementaryTypeName","src":"74941:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74940:34:33"},"returnParameters":{"id":19017,"nodeType":"ParameterList","parameters":[],"src":"74983:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19024,"nodeType":"FunctionDefinition","src":"75187:50:33","nodes":[],"documentation":{"id":19019,"nodeType":"StructuredDocumentation","src":"74990:192:33","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75196:14:33","parameters":{"id":19022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19021,"mutability":"mutable","name":"account","nameLocation":"75219:7:33","nodeType":"VariableDeclaration","scope":19024,"src":"75211:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19020,"name":"address","nodeType":"ElementaryTypeName","src":"75211:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75210:17:33"},"returnParameters":{"id":19023,"nodeType":"ParameterList","parameters":[],"src":"75236:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19032,"nodeType":"FunctionDefinition","src":"75282:69:33","nodes":[],"documentation":{"id":19025,"nodeType":"StructuredDocumentation","src":"75243:34:33","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75291:14:33","parameters":{"id":19030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19027,"mutability":"mutable","name":"account0","nameLocation":"75314:8:33","nodeType":"VariableDeclaration","scope":19032,"src":"75306:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19026,"name":"address","nodeType":"ElementaryTypeName","src":"75306:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19029,"mutability":"mutable","name":"account1","nameLocation":"75332:8:33","nodeType":"VariableDeclaration","scope":19032,"src":"75324:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19028,"name":"address","nodeType":"ElementaryTypeName","src":"75324:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75305:36:33"},"returnParameters":{"id":19031,"nodeType":"ParameterList","parameters":[],"src":"75350:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19042,"nodeType":"FunctionDefinition","src":"75396:87:33","nodes":[],"documentation":{"id":19033,"nodeType":"StructuredDocumentation","src":"75357:34:33","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75405:14:33","parameters":{"id":19040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19035,"mutability":"mutable","name":"account0","nameLocation":"75428:8:33","nodeType":"VariableDeclaration","scope":19042,"src":"75420:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19034,"name":"address","nodeType":"ElementaryTypeName","src":"75420:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19037,"mutability":"mutable","name":"account1","nameLocation":"75446:8:33","nodeType":"VariableDeclaration","scope":19042,"src":"75438:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19036,"name":"address","nodeType":"ElementaryTypeName","src":"75438:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19039,"mutability":"mutable","name":"account2","nameLocation":"75464:8:33","nodeType":"VariableDeclaration","scope":19042,"src":"75456:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19038,"name":"address","nodeType":"ElementaryTypeName","src":"75456:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75419:54:33"},"returnParameters":{"id":19041,"nodeType":"ParameterList","parameters":[],"src":"75482:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19049,"nodeType":"FunctionDefinition","src":"75528:62:33","nodes":[],"documentation":{"id":19043,"nodeType":"StructuredDocumentation","src":"75489:34:33","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75537:14:33","parameters":{"id":19047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19046,"mutability":"mutable","name":"accounts","nameLocation":"75571:8:33","nodeType":"VariableDeclaration","scope":19049,"src":"75552:27:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19044,"name":"address","nodeType":"ElementaryTypeName","src":"75552:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19045,"nodeType":"ArrayTypeName","src":"75552:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"75551:29:33"},"returnParameters":{"id":19048,"nodeType":"ParameterList","parameters":[],"src":"75589:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19059,"nodeType":"FunctionDefinition","src":"75661:97:33","nodes":[],"documentation":{"id":19050,"nodeType":"StructuredDocumentation","src":"75596:60:33","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"75670:14:33","parameters":{"id":19057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19052,"mutability":"mutable","name":"callee","nameLocation":"75693:6:33","nodeType":"VariableDeclaration","scope":19059,"src":"75685:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19051,"name":"address","nodeType":"ElementaryTypeName","src":"75685:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19054,"mutability":"mutable","name":"data","nameLocation":"75716:4:33","nodeType":"VariableDeclaration","scope":19059,"src":"75701:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19053,"name":"bytes","nodeType":"ElementaryTypeName","src":"75701:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19056,"mutability":"mutable","name":"revertData","nameLocation":"75737:10:33","nodeType":"VariableDeclaration","scope":19059,"src":"75722:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19055,"name":"bytes","nodeType":"ElementaryTypeName","src":"75722:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75684:64:33"},"returnParameters":{"id":19058,"nodeType":"ParameterList","parameters":[],"src":"75757:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19071,"nodeType":"FunctionDefinition","src":"75858:123:33","nodes":[],"documentation":{"id":19060,"nodeType":"StructuredDocumentation","src":"75764:89:33","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"75867:14:33","parameters":{"id":19069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19062,"mutability":"mutable","name":"callee","nameLocation":"75890:6:33","nodeType":"VariableDeclaration","scope":19071,"src":"75882:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19061,"name":"address","nodeType":"ElementaryTypeName","src":"75882:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19064,"mutability":"mutable","name":"msgValue","nameLocation":"75906:8:33","nodeType":"VariableDeclaration","scope":19071,"src":"75898:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19063,"name":"uint256","nodeType":"ElementaryTypeName","src":"75898:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19066,"mutability":"mutable","name":"data","nameLocation":"75931:4:33","nodeType":"VariableDeclaration","scope":19071,"src":"75916:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19065,"name":"bytes","nodeType":"ElementaryTypeName","src":"75916:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19068,"mutability":"mutable","name":"revertData","nameLocation":"75952:10:33","nodeType":"VariableDeclaration","scope":19071,"src":"75937:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19067,"name":"bytes","nodeType":"ElementaryTypeName","src":"75937:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75881:82:33"},"returnParameters":{"id":19070,"nodeType":"ParameterList","parameters":[],"src":"75980:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19081,"nodeType":"FunctionDefinition","src":"76241:91:33","nodes":[],"documentation":{"id":19072,"nodeType":"StructuredDocumentation","src":"75987:249:33","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"76250:8:33","parameters":{"id":19079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19074,"mutability":"mutable","name":"callee","nameLocation":"76267:6:33","nodeType":"VariableDeclaration","scope":19081,"src":"76259:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19073,"name":"address","nodeType":"ElementaryTypeName","src":"76259:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19076,"mutability":"mutable","name":"data","nameLocation":"76290:4:33","nodeType":"VariableDeclaration","scope":19081,"src":"76275:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19075,"name":"bytes","nodeType":"ElementaryTypeName","src":"76275:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19078,"mutability":"mutable","name":"returnData","nameLocation":"76311:10:33","nodeType":"VariableDeclaration","scope":19081,"src":"76296:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19077,"name":"bytes","nodeType":"ElementaryTypeName","src":"76296:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76258:64:33"},"returnParameters":{"id":19080,"nodeType":"ParameterList","parameters":[],"src":"76331:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19093,"nodeType":"FunctionDefinition","src":"76507:109:33","nodes":[],"documentation":{"id":19082,"nodeType":"StructuredDocumentation","src":"76338:164:33","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"76516:8:33","parameters":{"id":19091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19084,"mutability":"mutable","name":"callee","nameLocation":"76533:6:33","nodeType":"VariableDeclaration","scope":19093,"src":"76525:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19083,"name":"address","nodeType":"ElementaryTypeName","src":"76525:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19086,"mutability":"mutable","name":"msgValue","nameLocation":"76549:8:33","nodeType":"VariableDeclaration","scope":19093,"src":"76541:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19085,"name":"uint256","nodeType":"ElementaryTypeName","src":"76541:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19088,"mutability":"mutable","name":"data","nameLocation":"76574:4:33","nodeType":"VariableDeclaration","scope":19093,"src":"76559:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19087,"name":"bytes","nodeType":"ElementaryTypeName","src":"76559:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19090,"mutability":"mutable","name":"returnData","nameLocation":"76595:10:33","nodeType":"VariableDeclaration","scope":19093,"src":"76580:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19089,"name":"bytes","nodeType":"ElementaryTypeName","src":"76580:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76524:82:33"},"returnParameters":{"id":19092,"nodeType":"ParameterList","parameters":[],"src":"76615:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19099,"nodeType":"FunctionDefinition","src":"76691:43:33","nodes":[],"documentation":{"id":19094,"nodeType":"StructuredDocumentation","src":"76622:64:33","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"76700:5:33","parameters":{"id":19097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19096,"mutability":"mutable","name":"msgSender","nameLocation":"76714:9:33","nodeType":"VariableDeclaration","scope":19099,"src":"76706:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19095,"name":"address","nodeType":"ElementaryTypeName","src":"76706:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76705:19:33"},"returnParameters":{"id":19098,"nodeType":"ParameterList","parameters":[],"src":"76733:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19107,"nodeType":"FunctionDefinition","src":"76853:61:33","nodes":[],"documentation":{"id":19100,"nodeType":"StructuredDocumentation","src":"76740:108:33","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"76862:5:33","parameters":{"id":19105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19102,"mutability":"mutable","name":"msgSender","nameLocation":"76876:9:33","nodeType":"VariableDeclaration","scope":19107,"src":"76868:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19101,"name":"address","nodeType":"ElementaryTypeName","src":"76868:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19104,"mutability":"mutable","name":"txOrigin","nameLocation":"76895:8:33","nodeType":"VariableDeclaration","scope":19107,"src":"76887:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19103,"name":"address","nodeType":"ElementaryTypeName","src":"76887:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76867:37:33"},"returnParameters":{"id":19106,"nodeType":"ParameterList","parameters":[],"src":"76913:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19113,"nodeType":"FunctionDefinition","src":"77091:52:33","nodes":[],"documentation":{"id":19108,"nodeType":"StructuredDocumentation","src":"76920:166:33","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"77100:10:33","parameters":{"id":19111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19110,"mutability":"mutable","name":"newPrevrandao","nameLocation":"77119:13:33","nodeType":"VariableDeclaration","scope":19113,"src":"77111:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77111:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77110:23:33"},"returnParameters":{"id":19112,"nodeType":"ParameterList","parameters":[],"src":"77142:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19124,"nodeType":"FunctionDefinition","src":"77271:101:33","nodes":[],"documentation":{"id":19114,"nodeType":"StructuredDocumentation","src":"77149:117:33","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"77280:11:33","parameters":{"id":19115,"nodeType":"ParameterList","parameters":[],"src":"77291:2:33"},"returnParameters":{"id":19123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19118,"mutability":"mutable","name":"callerMode","nameLocation":"77323:10:33","nodeType":"VariableDeclaration","scope":19124,"src":"77312:21:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15822","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":19117,"nodeType":"UserDefinedTypeName","pathNode":{"id":19116,"name":"CallerMode","nameLocations":["77312:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":15822,"src":"77312:10:33"},"referencedDeclaration":15822,"src":"77312:10:33","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$15822","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":19120,"mutability":"mutable","name":"msgSender","nameLocation":"77343:9:33","nodeType":"VariableDeclaration","scope":19124,"src":"77335:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19119,"name":"address","nodeType":"ElementaryTypeName","src":"77335:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19122,"mutability":"mutable","name":"txOrigin","nameLocation":"77362:8:33","nodeType":"VariableDeclaration","scope":19124,"src":"77354:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19121,"name":"address","nodeType":"ElementaryTypeName","src":"77354:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77311:60:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19130,"nodeType":"FunctionDefinition","src":"77460:46:33","nodes":[],"documentation":{"id":19125,"nodeType":"StructuredDocumentation","src":"77378:77:33","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"77469:10:33","parameters":{"id":19128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19127,"mutability":"mutable","name":"account","nameLocation":"77488:7:33","nodeType":"VariableDeclaration","scope":19130,"src":"77480:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19126,"name":"address","nodeType":"ElementaryTypeName","src":"77480:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77479:17:33"},"returnParameters":{"id":19129,"nodeType":"ParameterList","parameters":[],"src":"77505:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19138,"nodeType":"FunctionDefinition","src":"77849:70:33","nodes":[],"documentation":{"id":19131,"nodeType":"StructuredDocumentation","src":"77512:332:33","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"77858:8:33","parameters":{"id":19134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19133,"mutability":"mutable","name":"snapshotId","nameLocation":"77875:10:33","nodeType":"VariableDeclaration","scope":19138,"src":"77867:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19132,"name":"uint256","nodeType":"ElementaryTypeName","src":"77867:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77866:20:33"},"returnParameters":{"id":19137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19136,"mutability":"mutable","name":"success","nameLocation":"77910:7:33","nodeType":"VariableDeclaration","scope":19138,"src":"77905:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19135,"name":"bool","nodeType":"ElementaryTypeName","src":"77905:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77904:14:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19146,"nodeType":"FunctionDefinition","src":"78202:79:33","nodes":[],"documentation":{"id":19139,"nodeType":"StructuredDocumentation","src":"77925:272:33","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"78211:17:33","parameters":{"id":19142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19141,"mutability":"mutable","name":"snapshotId","nameLocation":"78237:10:33","nodeType":"VariableDeclaration","scope":19146,"src":"78229:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19140,"name":"uint256","nodeType":"ElementaryTypeName","src":"78229:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78228:20:33"},"returnParameters":{"id":19145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19144,"mutability":"mutable","name":"success","nameLocation":"78272:7:33","nodeType":"VariableDeclaration","scope":19146,"src":"78267:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19143,"name":"bool","nodeType":"ElementaryTypeName","src":"78267:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"78266:14:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19152,"nodeType":"FunctionDefinition","src":"78378:52:33","nodes":[],"documentation":{"id":19147,"nodeType":"StructuredDocumentation","src":"78287:86:33","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"78387:16:33","parameters":{"id":19150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19149,"mutability":"mutable","name":"account","nameLocation":"78412:7:33","nodeType":"VariableDeclaration","scope":19152,"src":"78404:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19148,"name":"address","nodeType":"ElementaryTypeName","src":"78404:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"78403:17:33"},"returnParameters":{"id":19151,"nodeType":"ParameterList","parameters":[],"src":"78429:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19159,"nodeType":"FunctionDefinition","src":"78477:64:33","nodes":[],"documentation":{"id":19153,"nodeType":"StructuredDocumentation","src":"78436:36:33","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"78486:16:33","parameters":{"id":19157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19156,"mutability":"mutable","name":"accounts","nameLocation":"78522:8:33","nodeType":"VariableDeclaration","scope":19159,"src":"78503:27:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":19154,"name":"address","nodeType":"ElementaryTypeName","src":"78503:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19155,"nodeType":"ArrayTypeName","src":"78503:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"78502:29:33"},"returnParameters":{"id":19158,"nodeType":"ParameterList","parameters":[],"src":"78540:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19165,"nodeType":"FunctionDefinition","src":"78576:42:33","nodes":[],"documentation":{"id":19160,"nodeType":"StructuredDocumentation","src":"78547:24:33","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"78585:4:33","parameters":{"id":19163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19162,"mutability":"mutable","name":"newHeight","nameLocation":"78598:9:33","nodeType":"VariableDeclaration","scope":19165,"src":"78590:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19161,"name":"uint256","nodeType":"ElementaryTypeName","src":"78590:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78589:19:33"},"returnParameters":{"id":19164,"nodeType":"ParameterList","parameters":[],"src":"78617:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19171,"nodeType":"FunctionDefinition","src":"78757:48:33","nodes":[],"documentation":{"id":19166,"nodeType":"StructuredDocumentation","src":"78624:128:33","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"78766:8:33","parameters":{"id":19169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19168,"mutability":"mutable","name":"blockNumber","nameLocation":"78783:11:33","nodeType":"VariableDeclaration","scope":19171,"src":"78775:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19167,"name":"uint256","nodeType":"ElementaryTypeName","src":"78775:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78774:21:33"},"returnParameters":{"id":19170,"nodeType":"ParameterList","parameters":[],"src":"78804:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19177,"nodeType":"FunctionDefinition","src":"79020:43:33","nodes":[],"documentation":{"id":19172,"nodeType":"StructuredDocumentation","src":"78811:204:33","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"79029:8:33","parameters":{"id":19175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19174,"mutability":"mutable","name":"txHash","nameLocation":"79046:6:33","nodeType":"VariableDeclaration","scope":19177,"src":"79038:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79038:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"79037:16:33"},"returnParameters":{"id":19176,"nodeType":"ParameterList","parameters":[],"src":"79062:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19185,"nodeType":"FunctionDefinition","src":"79123:64:33","nodes":[],"documentation":{"id":19178,"nodeType":"StructuredDocumentation","src":"79069:49:33","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"79132:8:33","parameters":{"id":19183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19180,"mutability":"mutable","name":"forkId","nameLocation":"79149:6:33","nodeType":"VariableDeclaration","scope":19185,"src":"79141:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19179,"name":"uint256","nodeType":"ElementaryTypeName","src":"79141:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19182,"mutability":"mutable","name":"blockNumber","nameLocation":"79165:11:33","nodeType":"VariableDeclaration","scope":19185,"src":"79157:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19181,"name":"uint256","nodeType":"ElementaryTypeName","src":"79157:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79140:37:33"},"returnParameters":{"id":19184,"nodeType":"ParameterList","parameters":[],"src":"79186:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19193,"nodeType":"FunctionDefinition","src":"79323:59:33","nodes":[],"documentation":{"id":19186,"nodeType":"StructuredDocumentation","src":"79193:125:33","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"79332:8:33","parameters":{"id":19191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19188,"mutability":"mutable","name":"forkId","nameLocation":"79349:6:33","nodeType":"VariableDeclaration","scope":19193,"src":"79341:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19187,"name":"uint256","nodeType":"ElementaryTypeName","src":"79341:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19190,"mutability":"mutable","name":"txHash","nameLocation":"79365:6:33","nodeType":"VariableDeclaration","scope":19193,"src":"79357:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79357:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"79340:32:33"},"returnParameters":{"id":19192,"nodeType":"ParameterList","parameters":[],"src":"79381:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19199,"nodeType":"FunctionDefinition","src":"79495:45:33","nodes":[],"documentation":{"id":19194,"nodeType":"StructuredDocumentation","src":"79388:102:33","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"79504:10:33","parameters":{"id":19197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19196,"mutability":"mutable","name":"forkId","nameLocation":"79523:6:33","nodeType":"VariableDeclaration","scope":19199,"src":"79515:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19195,"name":"uint256","nodeType":"ElementaryTypeName","src":"79515:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79514:16:33"},"returnParameters":{"id":19198,"nodeType":"ParameterList","parameters":[],"src":"79539:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19207,"nodeType":"FunctionDefinition","src":"79638:61:33","nodes":[],"documentation":{"id":19200,"nodeType":"StructuredDocumentation","src":"79546:87:33","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"79647:8:33","parameters":{"id":19205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19202,"mutability":"mutable","name":"account","nameLocation":"79664:7:33","nodeType":"VariableDeclaration","scope":19207,"src":"79656:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19201,"name":"address","nodeType":"ElementaryTypeName","src":"79656:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19204,"mutability":"mutable","name":"newNonce","nameLocation":"79680:8:33","nodeType":"VariableDeclaration","scope":19207,"src":"79673:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19203,"name":"uint64","nodeType":"ElementaryTypeName","src":"79673:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"79655:34:33"},"returnParameters":{"id":19206,"nodeType":"ParameterList","parameters":[],"src":"79698:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19215,"nodeType":"FunctionDefinition","src":"79765:67:33","nodes":[],"documentation":{"id":19208,"nodeType":"StructuredDocumentation","src":"79705:55:33","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"79774:14:33","parameters":{"id":19213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19210,"mutability":"mutable","name":"account","nameLocation":"79797:7:33","nodeType":"VariableDeclaration","scope":19215,"src":"79789:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19209,"name":"address","nodeType":"ElementaryTypeName","src":"79789:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19212,"mutability":"mutable","name":"newNonce","nameLocation":"79813:8:33","nodeType":"VariableDeclaration","scope":19215,"src":"79806:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19211,"name":"uint64","nodeType":"ElementaryTypeName","src":"79806:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"79788:34:33"},"returnParameters":{"id":19214,"nodeType":"ParameterList","parameters":[],"src":"79831:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19221,"nodeType":"FunctionDefinition","src":"79987:58:33","nodes":[],"documentation":{"id":19216,"nodeType":"StructuredDocumentation","src":"79838:144:33","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"79996:8:33","parameters":{"id":19217,"nodeType":"ParameterList","parameters":[],"src":"80004:2:33"},"returnParameters":{"id":19220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19219,"mutability":"mutable","name":"snapshotId","nameLocation":"80033:10:33","nodeType":"VariableDeclaration","scope":19221,"src":"80025:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19218,"name":"uint256","nodeType":"ElementaryTypeName","src":"80025:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80024:20:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19227,"nodeType":"FunctionDefinition","src":"80152:48:33","nodes":[],"documentation":{"id":19222,"nodeType":"StructuredDocumentation","src":"80051:96:33","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"80161:10:33","parameters":{"id":19225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19224,"mutability":"mutable","name":"msgSender","nameLocation":"80180:9:33","nodeType":"VariableDeclaration","scope":19227,"src":"80172:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19223,"name":"address","nodeType":"ElementaryTypeName","src":"80172:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80171:19:33"},"returnParameters":{"id":19226,"nodeType":"ParameterList","parameters":[],"src":"80199:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19235,"nodeType":"FunctionDefinition","src":"80351:66:33","nodes":[],"documentation":{"id":19228,"nodeType":"StructuredDocumentation","src":"80206:140:33","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"80360:10:33","parameters":{"id":19233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19230,"mutability":"mutable","name":"msgSender","nameLocation":"80379:9:33","nodeType":"VariableDeclaration","scope":19235,"src":"80371:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19229,"name":"address","nodeType":"ElementaryTypeName","src":"80371:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19232,"mutability":"mutable","name":"txOrigin","nameLocation":"80398:8:33","nodeType":"VariableDeclaration","scope":19235,"src":"80390:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19231,"name":"address","nodeType":"ElementaryTypeName","src":"80390:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80370:37:33"},"returnParameters":{"id":19234,"nodeType":"ParameterList","parameters":[],"src":"80416:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19239,"nodeType":"FunctionDefinition","src":"80492:30:33","nodes":[],"documentation":{"id":19236,"nodeType":"StructuredDocumentation","src":"80423:64:33","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"80501:9:33","parameters":{"id":19237,"nodeType":"ParameterList","parameters":[],"src":"80510:2:33"},"returnParameters":{"id":19238,"nodeType":"ParameterList","parameters":[],"src":"80521:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19249,"nodeType":"FunctionDefinition","src":"80580:69:33","nodes":[],"documentation":{"id":19240,"nodeType":"StructuredDocumentation","src":"80528:47:33","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"80589:5:33","parameters":{"id":19247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19242,"mutability":"mutable","name":"target","nameLocation":"80603:6:33","nodeType":"VariableDeclaration","scope":19249,"src":"80595:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19241,"name":"address","nodeType":"ElementaryTypeName","src":"80595:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19244,"mutability":"mutable","name":"slot","nameLocation":"80619:4:33","nodeType":"VariableDeclaration","scope":19249,"src":"80611:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80611:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":19246,"mutability":"mutable","name":"value","nameLocation":"80633:5:33","nodeType":"VariableDeclaration","scope":19249,"src":"80625:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80625:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80594:45:33"},"returnParameters":{"id":19248,"nodeType":"ParameterList","parameters":[],"src":"80648:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19255,"nodeType":"FunctionDefinition","src":"80752:43:33","nodes":[],"documentation":{"id":19250,"nodeType":"StructuredDocumentation","src":"80655:92:33","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"80761:8:33","parameters":{"id":19253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19252,"mutability":"mutable","name":"txHash","nameLocation":"80778:6:33","nodeType":"VariableDeclaration","scope":19255,"src":"80770:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80770:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80769:16:33"},"returnParameters":{"id":19254,"nodeType":"ParameterList","parameters":[],"src":"80794:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19263,"nodeType":"FunctionDefinition","src":"80897:59:33","nodes":[],"documentation":{"id":19256,"nodeType":"StructuredDocumentation","src":"80801:91:33","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"80906:8:33","parameters":{"id":19261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19258,"mutability":"mutable","name":"forkId","nameLocation":"80923:6:33","nodeType":"VariableDeclaration","scope":19263,"src":"80915:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19257,"name":"uint256","nodeType":"ElementaryTypeName","src":"80915:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19260,"mutability":"mutable","name":"txHash","nameLocation":"80939:6:33","nodeType":"VariableDeclaration","scope":19263,"src":"80931:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80931:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80914:32:33"},"returnParameters":{"id":19262,"nodeType":"ParameterList","parameters":[],"src":"80955:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19269,"nodeType":"FunctionDefinition","src":"80990:50:33","nodes":[],"documentation":{"id":19264,"nodeType":"StructuredDocumentation","src":"80962:23:33","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"80999:10:33","parameters":{"id":19267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19266,"mutability":"mutable","name":"newGasPrice","nameLocation":"81018:11:33","nodeType":"VariableDeclaration","scope":19269,"src":"81010:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19265,"name":"uint256","nodeType":"ElementaryTypeName","src":"81010:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81009:21:33"},"returnParameters":{"id":19268,"nodeType":"ParameterList","parameters":[],"src":"81039:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19275,"nodeType":"FunctionDefinition","src":"81078:45:33","nodes":[],"documentation":{"id":19270,"nodeType":"StructuredDocumentation","src":"81046:27:33","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"81087:4:33","parameters":{"id":19273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19272,"mutability":"mutable","name":"newTimestamp","nameLocation":"81100:12:33","nodeType":"VariableDeclaration","scope":19275,"src":"81092:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19271,"name":"uint256","nodeType":"ElementaryTypeName","src":"81092:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81091:22:33"},"returnParameters":{"id":19274,"nodeType":"ParameterList","parameters":[],"src":"81122:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19287,"nodeType":"FunctionDefinition","src":"81275:105:33","nodes":[],"documentation":{"id":19276,"nodeType":"StructuredDocumentation","src":"81163:107:33","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"81284:16:33","parameters":{"id":19285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19278,"mutability":"mutable","name":"callee","nameLocation":"81309:6:33","nodeType":"VariableDeclaration","scope":19287,"src":"81301:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19277,"name":"address","nodeType":"ElementaryTypeName","src":"81301:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19280,"mutability":"mutable","name":"msgValue","nameLocation":"81325:8:33","nodeType":"VariableDeclaration","scope":19287,"src":"81317:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19279,"name":"uint256","nodeType":"ElementaryTypeName","src":"81317:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19282,"mutability":"mutable","name":"minGas","nameLocation":"81342:6:33","nodeType":"VariableDeclaration","scope":19287,"src":"81335:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19281,"name":"uint64","nodeType":"ElementaryTypeName","src":"81335:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19284,"mutability":"mutable","name":"data","nameLocation":"81365:4:33","nodeType":"VariableDeclaration","scope":19287,"src":"81350:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19283,"name":"bytes","nodeType":"ElementaryTypeName","src":"81350:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81300:70:33"},"returnParameters":{"id":19286,"nodeType":"ParameterList","parameters":[],"src":"81379:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19301,"nodeType":"FunctionDefinition","src":"81513:127:33","nodes":[],"documentation":{"id":19288,"nodeType":"StructuredDocumentation","src":"81386:122:33","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"81522:16:33","parameters":{"id":19299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19290,"mutability":"mutable","name":"callee","nameLocation":"81547:6:33","nodeType":"VariableDeclaration","scope":19301,"src":"81539:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19289,"name":"address","nodeType":"ElementaryTypeName","src":"81539:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19292,"mutability":"mutable","name":"msgValue","nameLocation":"81563:8:33","nodeType":"VariableDeclaration","scope":19301,"src":"81555:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19291,"name":"uint256","nodeType":"ElementaryTypeName","src":"81555:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19294,"mutability":"mutable","name":"minGas","nameLocation":"81580:6:33","nodeType":"VariableDeclaration","scope":19301,"src":"81573:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19293,"name":"uint64","nodeType":"ElementaryTypeName","src":"81573:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19296,"mutability":"mutable","name":"data","nameLocation":"81603:4:33","nodeType":"VariableDeclaration","scope":19301,"src":"81588:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19295,"name":"bytes","nodeType":"ElementaryTypeName","src":"81588:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19298,"mutability":"mutable","name":"count","nameLocation":"81616:5:33","nodeType":"VariableDeclaration","scope":19301,"src":"81609:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19297,"name":"uint64","nodeType":"ElementaryTypeName","src":"81609:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"81538:84:33"},"returnParameters":{"id":19300,"nodeType":"ParameterList","parameters":[],"src":"81639:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19309,"nodeType":"FunctionDefinition","src":"81772:66:33","nodes":[],"documentation":{"id":19302,"nodeType":"StructuredDocumentation","src":"81646:121:33","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"81781:10:33","parameters":{"id":19307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19304,"mutability":"mutable","name":"callee","nameLocation":"81800:6:33","nodeType":"VariableDeclaration","scope":19309,"src":"81792:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19303,"name":"address","nodeType":"ElementaryTypeName","src":"81792:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19306,"mutability":"mutable","name":"data","nameLocation":"81823:4:33","nodeType":"VariableDeclaration","scope":19309,"src":"81808:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19305,"name":"bytes","nodeType":"ElementaryTypeName","src":"81808:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81791:37:33"},"returnParameters":{"id":19308,"nodeType":"ParameterList","parameters":[],"src":"81837:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19319,"nodeType":"FunctionDefinition","src":"81925:80:33","nodes":[],"documentation":{"id":19310,"nodeType":"StructuredDocumentation","src":"81844:76:33","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"81934:10:33","parameters":{"id":19317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19312,"mutability":"mutable","name":"callee","nameLocation":"81953:6:33","nodeType":"VariableDeclaration","scope":19319,"src":"81945:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19311,"name":"address","nodeType":"ElementaryTypeName","src":"81945:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19314,"mutability":"mutable","name":"data","nameLocation":"81976:4:33","nodeType":"VariableDeclaration","scope":19319,"src":"81961:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19313,"name":"bytes","nodeType":"ElementaryTypeName","src":"81961:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19316,"mutability":"mutable","name":"count","nameLocation":"81989:5:33","nodeType":"VariableDeclaration","scope":19319,"src":"81982:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19315,"name":"uint64","nodeType":"ElementaryTypeName","src":"81982:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"81944:51:33"},"returnParameters":{"id":19318,"nodeType":"ParameterList","parameters":[],"src":"82004:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19329,"nodeType":"FunctionDefinition","src":"82093:84:33","nodes":[],"documentation":{"id":19320,"nodeType":"StructuredDocumentation","src":"82011:77:33","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82102:10:33","parameters":{"id":19327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19322,"mutability":"mutable","name":"callee","nameLocation":"82121:6:33","nodeType":"VariableDeclaration","scope":19329,"src":"82113:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19321,"name":"address","nodeType":"ElementaryTypeName","src":"82113:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19324,"mutability":"mutable","name":"msgValue","nameLocation":"82137:8:33","nodeType":"VariableDeclaration","scope":19329,"src":"82129:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19323,"name":"uint256","nodeType":"ElementaryTypeName","src":"82129:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19326,"mutability":"mutable","name":"data","nameLocation":"82162:4:33","nodeType":"VariableDeclaration","scope":19329,"src":"82147:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19325,"name":"bytes","nodeType":"ElementaryTypeName","src":"82147:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82112:55:33"},"returnParameters":{"id":19328,"nodeType":"ParameterList","parameters":[],"src":"82176:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19341,"nodeType":"FunctionDefinition","src":"82280:98:33","nodes":[],"documentation":{"id":19330,"nodeType":"StructuredDocumentation","src":"82183:92:33","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82289:10:33","parameters":{"id":19339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19332,"mutability":"mutable","name":"callee","nameLocation":"82308:6:33","nodeType":"VariableDeclaration","scope":19341,"src":"82300:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19331,"name":"address","nodeType":"ElementaryTypeName","src":"82300:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19334,"mutability":"mutable","name":"msgValue","nameLocation":"82324:8:33","nodeType":"VariableDeclaration","scope":19341,"src":"82316:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19333,"name":"uint256","nodeType":"ElementaryTypeName","src":"82316:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19336,"mutability":"mutable","name":"data","nameLocation":"82349:4:33","nodeType":"VariableDeclaration","scope":19341,"src":"82334:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19335,"name":"bytes","nodeType":"ElementaryTypeName","src":"82334:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19338,"mutability":"mutable","name":"count","nameLocation":"82362:5:33","nodeType":"VariableDeclaration","scope":19341,"src":"82355:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19337,"name":"uint64","nodeType":"ElementaryTypeName","src":"82355:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"82299:69:33"},"returnParameters":{"id":19340,"nodeType":"ParameterList","parameters":[],"src":"82377:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19353,"nodeType":"FunctionDefinition","src":"82471:96:33","nodes":[],"documentation":{"id":19342,"nodeType":"StructuredDocumentation","src":"82384:82:33","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82480:10:33","parameters":{"id":19351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19344,"mutability":"mutable","name":"callee","nameLocation":"82499:6:33","nodeType":"VariableDeclaration","scope":19353,"src":"82491:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19343,"name":"address","nodeType":"ElementaryTypeName","src":"82491:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19346,"mutability":"mutable","name":"msgValue","nameLocation":"82515:8:33","nodeType":"VariableDeclaration","scope":19353,"src":"82507:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19345,"name":"uint256","nodeType":"ElementaryTypeName","src":"82507:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19348,"mutability":"mutable","name":"gas","nameLocation":"82532:3:33","nodeType":"VariableDeclaration","scope":19353,"src":"82525:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19347,"name":"uint64","nodeType":"ElementaryTypeName","src":"82525:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19350,"mutability":"mutable","name":"data","nameLocation":"82552:4:33","nodeType":"VariableDeclaration","scope":19353,"src":"82537:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19349,"name":"bytes","nodeType":"ElementaryTypeName","src":"82537:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82490:67:33"},"returnParameters":{"id":19352,"nodeType":"ParameterList","parameters":[],"src":"82566:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19367,"nodeType":"FunctionDefinition","src":"82676:110:33","nodes":[],"documentation":{"id":19354,"nodeType":"StructuredDocumentation","src":"82573:98:33","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82685:10:33","parameters":{"id":19365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19356,"mutability":"mutable","name":"callee","nameLocation":"82704:6:33","nodeType":"VariableDeclaration","scope":19367,"src":"82696:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19355,"name":"address","nodeType":"ElementaryTypeName","src":"82696:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19358,"mutability":"mutable","name":"msgValue","nameLocation":"82720:8:33","nodeType":"VariableDeclaration","scope":19367,"src":"82712:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19357,"name":"uint256","nodeType":"ElementaryTypeName","src":"82712:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19360,"mutability":"mutable","name":"gas","nameLocation":"82737:3:33","nodeType":"VariableDeclaration","scope":19367,"src":"82730:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19359,"name":"uint64","nodeType":"ElementaryTypeName","src":"82730:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19362,"mutability":"mutable","name":"data","nameLocation":"82757:4:33","nodeType":"VariableDeclaration","scope":19367,"src":"82742:19:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19361,"name":"bytes","nodeType":"ElementaryTypeName","src":"82742:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":19364,"mutability":"mutable","name":"count","nameLocation":"82770:5:33","nodeType":"VariableDeclaration","scope":19367,"src":"82763:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19363,"name":"uint64","nodeType":"ElementaryTypeName","src":"82763:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"82695:81:33"},"returnParameters":{"id":19366,"nodeType":"ParameterList","parameters":[],"src":"82785:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19379,"nodeType":"FunctionDefinition","src":"83125:99:33","nodes":[],"documentation":{"id":19368,"nodeType":"StructuredDocumentation","src":"82792:328:33","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83134:10:33","parameters":{"id":19377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19370,"mutability":"mutable","name":"checkTopic1","nameLocation":"83150:11:33","nodeType":"VariableDeclaration","scope":19379,"src":"83145:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19369,"name":"bool","nodeType":"ElementaryTypeName","src":"83145:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19372,"mutability":"mutable","name":"checkTopic2","nameLocation":"83168:11:33","nodeType":"VariableDeclaration","scope":19379,"src":"83163:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19371,"name":"bool","nodeType":"ElementaryTypeName","src":"83163:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19374,"mutability":"mutable","name":"checkTopic3","nameLocation":"83186:11:33","nodeType":"VariableDeclaration","scope":19379,"src":"83181:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19373,"name":"bool","nodeType":"ElementaryTypeName","src":"83181:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19376,"mutability":"mutable","name":"checkData","nameLocation":"83204:9:33","nodeType":"VariableDeclaration","scope":19379,"src":"83199:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19375,"name":"bool","nodeType":"ElementaryTypeName","src":"83199:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83144:70:33"},"returnParameters":{"id":19378,"nodeType":"ParameterList","parameters":[],"src":"83223:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19393,"nodeType":"FunctionDefinition","src":"83327:124:33","nodes":[],"documentation":{"id":19380,"nodeType":"StructuredDocumentation","src":"83230:92:33","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83336:10:33","parameters":{"id":19391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19382,"mutability":"mutable","name":"checkTopic1","nameLocation":"83352:11:33","nodeType":"VariableDeclaration","scope":19393,"src":"83347:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19381,"name":"bool","nodeType":"ElementaryTypeName","src":"83347:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19384,"mutability":"mutable","name":"checkTopic2","nameLocation":"83370:11:33","nodeType":"VariableDeclaration","scope":19393,"src":"83365:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19383,"name":"bool","nodeType":"ElementaryTypeName","src":"83365:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19386,"mutability":"mutable","name":"checkTopic3","nameLocation":"83388:11:33","nodeType":"VariableDeclaration","scope":19393,"src":"83383:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19385,"name":"bool","nodeType":"ElementaryTypeName","src":"83383:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19388,"mutability":"mutable","name":"checkData","nameLocation":"83406:9:33","nodeType":"VariableDeclaration","scope":19393,"src":"83401:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19387,"name":"bool","nodeType":"ElementaryTypeName","src":"83401:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":19390,"mutability":"mutable","name":"emitter","nameLocation":"83425:7:33","nodeType":"VariableDeclaration","scope":19393,"src":"83417:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19389,"name":"address","nodeType":"ElementaryTypeName","src":"83417:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83346:87:33"},"returnParameters":{"id":19392,"nodeType":"ParameterList","parameters":[],"src":"83450:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19397,"nodeType":"FunctionDefinition","src":"83721:31:33","nodes":[],"documentation":{"id":19394,"nodeType":"StructuredDocumentation","src":"83457:259:33","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83730:10:33","parameters":{"id":19395,"nodeType":"ParameterList","parameters":[],"src":"83740:2:33"},"returnParameters":{"id":19396,"nodeType":"ParameterList","parameters":[],"src":"83751:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19403,"nodeType":"FunctionDefinition","src":"83855:46:33","nodes":[],"documentation":{"id":19398,"nodeType":"StructuredDocumentation","src":"83758:92:33","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83864:10:33","parameters":{"id":19401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19400,"mutability":"mutable","name":"emitter","nameLocation":"83883:7:33","nodeType":"VariableDeclaration","scope":19403,"src":"83875:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19399,"name":"address","nodeType":"ElementaryTypeName","src":"83875:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83874:17:33"},"returnParameters":{"id":19402,"nodeType":"ParameterList","parameters":[],"src":"83900:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19407,"nodeType":"FunctionDefinition","src":"83967:33:33","nodes":[],"documentation":{"id":19404,"nodeType":"StructuredDocumentation","src":"83907:55:33","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"83976:12:33","parameters":{"id":19405,"nodeType":"ParameterList","parameters":[],"src":"83988:2:33"},"returnParameters":{"id":19406,"nodeType":"ParameterList","parameters":[],"src":"83999:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19413,"nodeType":"FunctionDefinition","src":"84078:50:33","nodes":[],"documentation":{"id":19408,"nodeType":"StructuredDocumentation","src":"84006:67:33","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"84087:12:33","parameters":{"id":19411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19410,"mutability":"mutable","name":"revertData","nameLocation":"84107:10:33","nodeType":"VariableDeclaration","scope":19413,"src":"84100:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":19409,"name":"bytes4","nodeType":"ElementaryTypeName","src":"84100:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"84099:19:33"},"returnParameters":{"id":19412,"nodeType":"ParameterList","parameters":[],"src":"84127:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19419,"nodeType":"FunctionDefinition","src":"84210:58:33","nodes":[],"documentation":{"id":19414,"nodeType":"StructuredDocumentation","src":"84134:71:33","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"84219:12:33","parameters":{"id":19417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19416,"mutability":"mutable","name":"revertData","nameLocation":"84247:10:33","nodeType":"VariableDeclaration","scope":19419,"src":"84232:25:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19415,"name":"bytes","nodeType":"ElementaryTypeName","src":"84232:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84231:27:33"},"returnParameters":{"id":19418,"nodeType":"ParameterList","parameters":[],"src":"84267:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19427,"nodeType":"FunctionDefinition","src":"84497:59:33","nodes":[],"documentation":{"id":19420,"nodeType":"StructuredDocumentation","src":"84274:218:33","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"84506:16:33","parameters":{"id":19425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19422,"mutability":"mutable","name":"min","nameLocation":"84530:3:33","nodeType":"VariableDeclaration","scope":19427,"src":"84523:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19421,"name":"uint64","nodeType":"ElementaryTypeName","src":"84523:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19424,"mutability":"mutable","name":"max","nameLocation":"84542:3:33","nodeType":"VariableDeclaration","scope":19427,"src":"84535:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19423,"name":"uint64","nodeType":"ElementaryTypeName","src":"84535:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"84522:24:33"},"returnParameters":{"id":19426,"nodeType":"ParameterList","parameters":[],"src":"84555:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19435,"nodeType":"FunctionDefinition","src":"84798:63:33","nodes":[],"documentation":{"id":19428,"nodeType":"StructuredDocumentation","src":"84562:231:33","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"84807:20:33","parameters":{"id":19433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19430,"mutability":"mutable","name":"min","nameLocation":"84835:3:33","nodeType":"VariableDeclaration","scope":19435,"src":"84828:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19429,"name":"uint64","nodeType":"ElementaryTypeName","src":"84828:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19432,"mutability":"mutable","name":"max","nameLocation":"84847:3:33","nodeType":"VariableDeclaration","scope":19435,"src":"84840:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":19431,"name":"uint64","nodeType":"ElementaryTypeName","src":"84840:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"84827:24:33"},"returnParameters":{"id":19434,"nodeType":"ParameterList","parameters":[],"src":"84860:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19441,"nodeType":"FunctionDefinition","src":"84939:38:33","nodes":[],"documentation":{"id":19436,"nodeType":"StructuredDocumentation","src":"84867:67:33","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"84948:4:33","parameters":{"id":19439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19438,"mutability":"mutable","name":"skipTest","nameLocation":"84958:8:33","nodeType":"VariableDeclaration","scope":19441,"src":"84953:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19437,"name":"bool","nodeType":"ElementaryTypeName","src":"84953:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"84952:15:33"},"returnParameters":{"id":19440,"nodeType":"ParameterList","parameters":[],"src":"84976:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":19445,"nodeType":"FunctionDefinition","src":"85052:41:33","nodes":[],"documentation":{"id":19442,"nodeType":"StructuredDocumentation","src":"84983:64:33","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"85061:20:33","parameters":{"id":19443,"nodeType":"ParameterList","parameters":[],"src":"85081:2:33"},"returnParameters":{"id":19444,"nodeType":"ParameterList","parameters":[],"src":"85092:0:33"},"scope":19446,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":18873,"name":"VmSafe","nameLocations":["71521:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":18871,"src":"71521:6:33"},"id":18874,"nodeType":"InheritanceSpecifier","src":"71521:6:33"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":18872,"nodeType":"StructuredDocumentation","src":"71334:171:33","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[19446,18871],"name":"Vm","nameLocation":"71515:2:33","scope":19447,"usedErrors":[]}],"license":"MIT OR Apache-2.0"},"id":33}